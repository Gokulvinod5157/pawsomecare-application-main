{"version":3,"sources":["hoc-components/error/Error.module.css","store/actionTypes.ts","store/reducers/auth.ts","store/reducers/profile.ts","store/reducers/menu.ts","store/reducers/sidebar.ts","store/reducers/index.ts","store/store.js","hoc-components/UI/backdrop/Backdrop.tsx","store/actions.ts","services/auth.services.ts","components/login/Login.tsx","config/UrlRoute.ts","utils/array.utils.ts","hoc-components/error/Error.tsx","hoc-components/guard/GuardedRoute.tsx","components/signup/Signup.tsx","services/http.services.ts","hoc-components/UI/adminlayout/AdminLayout.tsx","hoc-components/UI/modal/Modal.tsx","hoc-components/UI/datalist/DataList.tsx","components/admin/petcategory/PetCategory.tsx","components/admin/petgrooming/PetGrooming.tsx","components/admin/petvaccine/PetVaccine.tsx","components/admin/petmedicine/PetMedicine.tsx","components/admin/petclinic/PetClinic.tsx","components/admin/petadopt/PetAdopt.tsx","components/admin/header/AdminHeader.tsx","components/admin/petstaff/PetStaff.tsx","components/admin/petlicense/PetLicense.tsx","components/admin/PetAdmin.tsx","components/nav/header/Header.tsx","components/admin/userprofile/UserProfile.tsx","components/admin/password/Password.tsx","components/client/header/ClientHeader.tsx","components/client/petadopt/PetAdopt.tsx","utils/report.util.ts","components/client/mypets/MyPet.tsx","components/client/petlicense/PetLicense.tsx","components/client/petappt/PetAppt.tsx","components/client/PetClient.tsx","components/staff/header/StaffHeader.tsx","components/staff/petappt/PetAppt.tsx","components/staff/appthistory/ApptHistory.tsx","components/staff/PetStaff.tsx","components/home/Home.tsx","utils/home-data.util.ts","components/landing/Landing.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","initialState","accessToken","email","username","role","doAuth","state","arguments","length","undefined","action","type","userAuthInfo","payload","storeProfile","menuData","isDataLoaded","menuReducer","doShrinkSidebar","rootReducer","combineReducers","auth","authReducer","profile","profileReducer","menu","sidebar","sidebarReducer","createStore","applyMiddleware","thunk","Backdrop","props","React","className","message","addAuthToken","token","name","toggleSidebar","toggle","Auth","signIn","password","Promise","resolve","reject","axios","post","then","response","data","headers","authorization","value","roles","authorities","map","a","join","catch","err","signUp","status","updatePassword","oldP","newP","confP","oldPassword","newPassword","confirmPassword","Authorization","this","getToken","updateUser","firstname","lastname","dob","income","address","contact","gender","getAuthUser","setLocalStorage","localStorage","setItem","currentUserInfo","getItem","signOut","removeItem","connector","connect","setUsername","useState","setPassword","isSigningIn","setIsSigningIn","isVerifying","setIsVerifying","history","useHistory","useEffect","async","push","checkUserAuthStatus","doUpdateFields","ev","updateFn","target","createElement","Fragment","style","flexGrow","src","width","height","alt","onChange","onClick","alert","NavLink","to","joinArrayToString","arr","error","classes","Link","GuardedRoute","_ref","component","path","isAuthenticated","Route","Redirect","setEmail","isSigningUp","setIsSigningUp","getPetCategory","get","getPetVaccines","getPetMedicines","addNewUnadoptPet","weight","category","getPetClinics","getUnadoptedPets","getMyPets","AdminLayout","WrappedComponent","Modal","children","title","submitText","doSubmit","id","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","onSubmit","preventDefault","method","Children","child","index","key","DataList","dataLength","icon","placeholder","secPlaceholder","actionIcon","actionText","actionCallback","FontAwesomeIcon","size","data-toggle","data-target","PetCategory","petTypes","setPetTypes","mode","setMode","setType","setStatus","setName","setDob","setGender","setWeight","licenseCost","setLicenseCost","categoryId","setCategoryId","isFetched","setIsFetched","petCategory","getPetTypes","faPaw","faPlusCircle","scope","t","isActive","faEdit","_document$getElementB2","_document$querySelect2","document","getElementById","classList","remove","querySelector","petType","cost","put","updatePetCategory","_document$getElementB","_document$querySelect","required","checked","valueAsNumber","min","PetGrooming","petGrooms","setPetGrooms","setCost","desc","setDesc","ins","setIns","time","setTime","setId","grooms","getPetGrooming","getPetGroom","faBath","description","isInsAllowed","faCheck","faTimes","timeRequire","addPetGrooming","updatePetGrooming","rows","PetVaccine","vaccines","setVaccines","vacc","getPetVaccine","faSyringe","amount","addPetVaccine","updatePetVaccine","PetMedicine","medicines","setMedicines","count","setCount","expire","setExpire","med","getPetMedicine","faTablets","perCost","expiresAt","substr","addPetMedicine","updatePetMedicine","Date","toISOString","PetClinic","clinics","setClinics","spl","setSpl","setAddress","cli","getPetClinic","faClinicMedical","specialities","addPetClinic","updatePetClinic","PetAdopt","pets","setPets","getUnadoptedPet","faDog","i","petName","diff","getTime","Math","abs","round","getMonths","AdminHeader","backgroundColor","activeClassName","FAIcon","faHospitalUser","faIdBadge","PetStaff","staffs","setStaffs","staffId","setStaffId","fee","setFee","setRole","staffClinic","setStaffClinic","staff","getStaffs","faInfoCircle","navigator","clipboard","writeText","faAt","consultFee","authority","replace","c","staffName","clinicIds","userRole","addPetStaff","values","selectedOptions","option","multiple","defaultValue","s","toString","MyPet","licenses","setLicenses","licenseId","setLicenseId","petId","setPetId","setPetName","licens","getLicense","animal","faCheckCircle","disabled","showSidebar","Switch","exact","PetLicense","Error","deleteAuthToken","background","borderRadius","faUserCog","faCalendarCheck","faUser","faLock","faHome","faSignOutAlt","UserProfile","setFirstname","setLastname","setIncome","setContact","userDetails","annualIncome","getUserDetails","Password","setOldP","setNewP","setConfP","ClientHeader","getReportHtml","appt","medicine","medicineCost","vaccine","vaccineCost","grooming","groomingCost","pres","JSON","parse","appointmentDetails","consultDetails","groomDetails","feedback","filter","g","Object","keys","m","mrng","noon","evng","ngt","v","rate","apptTime","toLocaleString","pet","months","user","reason","staffDetails","veterinaryStaff","groomingStaff","clinic","consultDetail","nextVisitSuggest","categories","setCategories","petWeight","setPetWeight","cats","getPets","console","log","isLicensed","color","licenseForm","licenseNo","expiresOn","winUrl","URL","createObjectURL","Blob","licenseStatus","issuedAt","window","open","updatePet","max","substring","p","faBook","cursor","faHourglassHalf","applyPetLicense","PetAppt","petClinics","setPetClinics","petAppts","setPetAppts","petStaffs","setPetStaffs","petServices","setPetServices","apptId","setApptId","feedTitle","setFeedTitle","feedDesc","setFeedDesc","feedRate","setFeedRate","clinicId","setClinicId","vetStaffId","setVetStaffId","grmStaffId","setGrmStaffId","services","setServices","setGrooms","setApptTime","setReason","myPets","appts","grms","getStaffByRole","includes","serviceName","faFileDownload","faCommentAlt","bookPetAppt","rating","doRateAppt","some","slice","StaffHeader","faHistory","petMeds","setPetMeds","petVacs","setPetVacs","presMeds","setPresMeds","analysis","setAnalysis","nextTime","setNextTime","setVaccine","setAppt","meds","vacs","getPetAppts","toUpperCase","appointmentId","vaccineId","finalAppointment","consult","find","night","nos","groom","groomings","ApptHistory","Header","from","PetAdmin","PetClient","HOME_DATA","showDefault","url","text","loggedIn","setLoggedIn","processData","indices","r","idxs","d","faUserAlt","location","reload","faSignInAlt","textDecoration","Landing","Signup","Login","Home","Boolean","hostname","match","defaults","baseURL","process","interceptors","use","ReactDOM","render","Provider","store","HashRouter","basename","StrictMode","App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c65f5cc4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error-container\":\"Error_error-container__19Cjr\",\"error-banner\":\"Error_error-banner__J7Veq\",\"error-button\":\"Error_error-button__2Oprt\"};","export const ADD_AUTH_TOKEN = \"ADD_AUTH_TOKEN\";\nexport const DELETE_AUTH_TOKEN = \"DELETE_AUTH_TOKEN\";\n\nexport const ADD_USER_PROFILE_INFO = \"ADD_USER_PROFILE_INFO\";\n\nexport const ADD_MENU_INFO = \"ADD_MENU_INFO\";\nexport const UPDATE_MENU_LOADING_STATE = \"UPDATE_MENU_LOADING_STATE\";\n\nexport const SHRINK_SIDEBAR = 'SHRINK_SIDEBAR';","import { ADD_AUTH_TOKEN, DELETE_AUTH_TOKEN } from \"../actionTypes\";\nimport { AuthTokenProps } from \"../../props/ActionProps\";\nimport { UserAuthProps } from \"../../props/AuthProps\";\n\nconst initialState: UserAuthProps = {\n  accessToken: \"\",\n  email: \"\",\n  username: \"\",\n  role: \"\",\n};\n\nconst doAuth = (\n  state = initialState,\n  action: AuthTokenProps\n): UserAuthProps => {\n  switch (action.type) {\n    case ADD_AUTH_TOKEN: {\n      const userAuthInfo = action.payload;\n      return {\n        accessToken: userAuthInfo?.accessToken || \"\",\n        email: userAuthInfo?.email || \"\",\n        username: userAuthInfo?.username || \"\",\n        role: userAuthInfo?.role || \"\",\n      };\n    }\n    case DELETE_AUTH_TOKEN: {\n      return {\n        ...initialState,\n      };\n    }\n    default: {\n      return { ...state };\n    }\n  }\n};\n\nexport default doAuth;\n","import { ADD_USER_PROFILE_INFO } from \"../actionTypes\";\nimport { UserProfileActionProps } from \"../../props/ActionProps\";\nimport { UserProfileProps, VendorProfileProps } from \"../../props/VendorProps\";\n\nconst initialState: VendorProfileProps | null = null;\n\nconst storeProfile = (\n  state = initialState,\n  action: UserProfileActionProps\n): UserProfileProps | null => {\n  switch (action.type) {\n    case ADD_USER_PROFILE_INFO: {\n      return { ...action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default storeProfile;\n","import { ADD_MENU_INFO, UPDATE_MENU_LOADING_STATE } from \"../actionTypes\";\nimport { MenuActionProps } from \"../../props/ActionProps\";\nimport { MenuDataProps } from \"../../props/MenuProps\";\n\ntype MenuState = {\n    menuData: MenuDataProps\n    isDataLoaded: boolean\n};\n\nconst initialState: MenuState = {\n    menuData: {},\n    isDataLoaded: false\n};\n\nconst menuReducer = (state = initialState, action: MenuActionProps): MenuState => {\n    switch (action.type) {\n        case ADD_MENU_INFO: {\n            return {\n                ...state,\n                isDataLoaded: true,\n                menuData: { ...(action.payload) as MenuDataProps }\n            }\n        }\n        case UPDATE_MENU_LOADING_STATE: {\n            return {\n                ...state,\n                isDataLoaded: (action.payload) as boolean\n            }\n        }\n        default: {\n            return { ...state };\n        }\n    }\n}\n\nexport default menuReducer;\n","import { SHRINK_SIDEBAR } from \"../actionTypes\";\nimport { SidebarProps } from \"../../props/ActionProps\";\n\nconst initialState: boolean = true\n\nconst doShrinkSidebar = (state = initialState, action: SidebarProps): boolean => {\n    switch (action.type) {\n        case SHRINK_SIDEBAR: {\n            return action.payload;\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default doShrinkSidebar;","import { combineReducers } from \"redux\";\nimport authReducer from './auth';\nimport profileReducer from './profile'\nimport menuReducer from './menu'\nimport sidebarReducer from './sidebar'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    profile: profileReducer,\n    menu: menuReducer,\n    sidebar: sidebarReducer\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer, applyMiddleware(thunk));\n","import * as React from 'react';\n\nimport './Backdrop.css';\n\ntype BackdropProps = {\n    message?: string\n}\n\nconst Backdrop: React.FC<BackdropProps> = (props) => (\n    <div className=\"screen-backdrop\">\n        <div className=\"loader-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n        {\n            props.message && <h3 className='text-white'>{props.message}</h3>\n        }\n    </div>\n)\n\nexport default Backdrop;","import {\n  ADD_AUTH_TOKEN,\n  DELETE_AUTH_TOKEN,\n  ADD_USER_PROFILE_INFO,\n  ADD_MENU_INFO,\n  UPDATE_MENU_LOADING_STATE,\n  SHRINK_SIDEBAR,\n} from \"./actionTypes\";\nimport {\n  AuthTokenProps,\n  UserProfileActionProps,\n  MenuActionProps,\n  SidebarProps,\n} from \"../props/ActionProps\";\nimport { UserProfileProps } from \"../props/VendorProps\";\nimport { MenuDataProps } from \"../props/MenuProps\";\n\nexport const addAuthToken = (\n  token: string,\n  email: string,\n  name: string,\n  role: string\n): AuthTokenProps => ({\n  type: ADD_AUTH_TOKEN,\n  payload: {\n    accessToken: token,\n    username: name,\n    email,\n    role,\n  },\n});\n\nexport const deleteAuthToken = (): AuthTokenProps => ({\n  type: DELETE_AUTH_TOKEN,\n});\n\nexport const addVendorProfileInfo = (\n  profileInfo: UserProfileProps\n): UserProfileActionProps => ({\n  type: ADD_USER_PROFILE_INFO,\n  payload: { ...profileInfo },\n});\n\nexport const addMenuList = (menus: MenuDataProps): MenuActionProps => ({\n  type: ADD_MENU_INFO,\n  payload: menus,\n});\n\nexport const updateMenuLoader = (isLoaded: boolean): MenuActionProps => ({\n  type: UPDATE_MENU_LOADING_STATE,\n  payload: isLoaded,\n});\n\nexport const toggleSidebar = (toggle: boolean): SidebarProps => ({\n  type: SHRINK_SIDEBAR,\n  payload: toggle,\n});\n","import axios from \"axios\";\nimport { UserProfileProps } from \"../props/VendorProps\";\n\nexport const Auth = {\n  signIn: function (email: string, password: string): Promise<any | null> {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(`auth/public/login`, {\n          email,\n          password,\n        })\n        .then((response) => ({\n          data: response.data,\n          token: response.headers.authorization,\n        }))\n        .then((value) => {\n          const roles = value.data.authorities.map((a:any) => a['authority']).join(\",\");\n          resolve({\n            ...(value.data as UserProfileProps),\n            token: value.token,\n            role: roles\n          });\n        })\n        .catch((err) => reject(err));\n    });\n  },\n  signUp: function (\n    email: string,\n    username: string,\n    password: string\n  ): Promise<any | null> {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(`auth/public/signup`, {\n          email,\n          password,\n          username,\n        })\n        .then((response) => response.status)\n        .then((value) => {\n          resolve(value);\n        })\n        .catch((err) => reject(err));\n    });\n  },\n  updatePassword: function (\n    oldP: string,\n    newP: string,\n    confP: string\n  ): Promise<any | null> {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(\n          `auth/user/update/password`,\n          {\n            oldPassword: oldP,\n            newPassword: newP,\n            confirmPassword: confP,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.getToken()}`,\n            },\n          }\n        )\n        .then((response) => response.status)\n        .then((value) => {\n          resolve(value);\n        })\n\n        .catch((err) => reject(err));\n    });\n  },\n  updateUser: function (\n    firstname: string,\n    lastname: string,\n    dob: string,\n    income: number,\n    address: string,\n    contact: string,\n    gender: string\n  ): Promise<any | null> {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(\n          `auth/user/update`,\n          {\n            firstname,\n            lastname,\n            dob,\n            income,\n            address,\n            contact,\n            gender\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.getToken()}`,\n            },\n          }\n        )\n        .then((response) => response.status)\n        .then((value) => {\n          resolve(value);\n        })\n\n        .catch((err) => reject(err));\n    });\n  },\n  getAuthUser: function (): Promise<any | null> {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(\n          `auth/user`,\n          {},\n          {\n            headers: {\n              Authorization: `Bearer ${this.getToken()}`,\n            },\n          }\n        )\n        .then((response) => response.data)\n        .then((value) => {\n          resolve(value);\n        })\n        .catch((err) => reject(err));\n    });\n  },\n  setLocalStorage: function (\n    email: string,\n    name: string,\n    role: string,\n    token: string\n  ) {\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"name\", name);\n    localStorage.setItem(\"role\", role);\n    localStorage.setItem(\"token\", token);\n  },\n  currentUserInfo: function (): any {\n    const email = localStorage.getItem(\"email\") || \"\";\n    const name = localStorage.getItem(\"name\") || \"\";\n    const role = localStorage.getItem(\"role\") || \"\";\n    const token = localStorage.getItem(\"token\") || \"\";\n    return {\n      email,\n      name,\n      role,\n      token,\n    };\n  },\n  signOut: function (): any {\n    localStorage.removeItem(\"email\");\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"token\");\n  },\n  getToken: function () {\n    return localStorage.getItem(\"token\") || \"\";\n  },\n};\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { NavLink, useHistory } from \"react-router-dom\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../hoc-components/UI/backdrop/Backdrop\";\n\n/* TS Import */\nimport { addAuthToken } from \"../../store/actions\";\nimport { RootState } from \"../../store/reducers\";\nimport { URL_SIGNUP, URL_PET_HOME } from \"../../config/UrlRoute\";\n\n/* CSS Import */\nimport \"./Login.css\";\nimport { Auth } from \"../../services/auth.services\";\n\nconst mapStateToProps = (state: RootState) => ({\n  auth: state.auth,\n});\n\nconst connector = connect(mapStateToProps, {\n  addAuthToken,\n});\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = PropsFromRedux;\n\nconst Login: React.FC<Props> = (props) => {\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [isSigningIn, setIsSigningIn] = useState<boolean>(false);\n  const [isVerifying, setIsVerifying] = useState<boolean>(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    async function checkUserAuthStatus() {\n      const { accessToken, username, email, role } = props.auth;\n      if (accessToken && username && email && role) {\n        history.push(URL_PET_HOME);\n      } else {\n        try {\n          const { name, email, token, role } = Auth.currentUserInfo();\n          if (name && email && token && role) {\n            props.addAuthToken(token, email, name, role);\n            history.push(URL_PET_HOME);\n          }\n        } catch (err) {\n          setIsVerifying(false);\n        }\n      }\n    }\n\n    if (!props.auth.accessToken) {\n      checkUserAuthStatus();\n    }\n  });\n\n  const doLogin = async () => {\n    if (username && password) {\n      try {\n        setIsSigningIn(true);\n        const response = await Auth.signIn(username, password);\n        const { token, email, role } = response;\n        if (token && response.username && email && role) {\n          Auth.setLocalStorage(email, response.username, role, token);\n          props.addAuthToken(token, email, response.username, role);\n          history.push(URL_PET_HOME);\n        }\n      } catch (err: any) {\n        const message = err?.message;\n        setIsSigningIn(false);\n        setPassword(\"\");\n        if (message) {\n          alert(message);\n        }\n      }\n    }\n  };\n\n  const doUpdateFields = (\n    ev: React.ChangeEvent<HTMLInputElement>,\n    updateFn: React.Dispatch<React.SetStateAction<string>>\n  ) => {\n    updateFn(ev.target.value);\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      {isSigningIn && (\n        <Backdrop message=\"Please wait while we are verifying you\" />\n      )}\n      <div className=\"container-fluid d-flex flex-row row h-100 m-0 p-0\">\n        <div className=\"col-md-12 d-flex flex-column p-0\">\n          <div\n            className=\"d-flex flex-column justify-content-center align-items-center\"\n            style={{ flexGrow: 14 }}\n          >\n            <div className=\"login-form\">\n              <div className=\"text-center\">\n                <img\n                  src={\"./assets/logo.svg\"}\n                  width=\"100\"\n                  height=\"100\"\n                  alt=\"icon\"\n                  className=\"mb-4\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Your email</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  value={username}\n                  onChange={(ev) => doUpdateFields(ev, setUsername)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  value={password}\n                  onChange={(ev) => doUpdateFields(ev, setPassword)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <button\n                  className=\"btn bg-primary form-control font-weight-bold mt-4 mb-2 text-white login-button\"\n                  onClick={doLogin}\n                >\n                  Login\n                </button>\n              </div>\n              <NavLink\n                to={URL_SIGNUP}\n                className=\"d-flex justify-content-center small text-primary\"\n                style={{ flexGrow: 1 }}\n              >\n                Don't have an account? &nbsp;\n                <span className=\"font-weight-bold\">Sign up</span>\n              </NavLink>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default connector(Login);\n","export const URL_LOGIN = \"/login\";\nexport const URL_SIGNUP = \"/signup\";\nexport const URL_PET_HOME = \"/home\";\nexport const URL_PET_LANDING = \"/landing\";\nexport const URL_PET_PROFILE = \"/home/profile\";\nexport const URL_PET_ADMIN = \"/home/admin\";\nexport const URL_PET_USERS = \"/home/users\";\nexport const URL_PET_USERS_PETS = \"/home/users/my-pets\";\nexport const URL_PET_USERS_ADOPT = \"/home/users/adopt/pets\";\nexport const URL_PET_USERS_LICENSE = \"/home/users/license\";\nexport const URL_PET_USERS_APPT = \"/home/users/appt\";\nexport const URL_PET_STAFF = \"/home/staff\";\nexport const URL_PET_STAFF_APPT = \"/home/staff/appt\";\nexport const URL_PET_STAFF_APPT_HISTORY = \"/home/staff/appt-history\";\nexport const URL_PET_ADMIN_PET_TYPES = \"/home/admin/pet/types\";\nexport const URL_PET_ADMIN_PETS = \"/home/admin/pets\";\nexport const URL_PET_ADMIN_CLINC = \"/home/admin/clinic\";\nexport const URL_PET_ADMIN_STAFF = \"/home/admin/staff\";\nexport const URL_PET_ADMIN_MEDICINE = \"/home/admin/medicine\";\nexport const URL_PET_ADMIN_VACCINE = \"/home/admin/vaccine\";\nexport const URL_PET_ADMIN_LICENSE = \"/home/admin/license\";\nexport const URL_PET_ADMIN_GROOM = \"/home/admin/groom\";\nexport const URL_PET_PASSWORD = \"/home/password\";\n","export function joinArrayToString(arr: Array<string>): any {\n  return arr.join(\" \");\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n/* JS Import */\nimport { joinArrayToString } from '../../utils/array.utils';\n\n/* CSS Import */\nimport classes from './Error.module.css'\n\nfunction error() {\n    return (\n        <div className={classes['error-container']}>\n            <div className={classes['error-banner']}>\n                <h1>404</h1>\n                <span>Page not found</span>\n            </div>\n            <Link to='/login'>\n                <button className={joinArrayToString(\n                    [classes['error-button'], 'btn', 'bg-white', 'mt-4']\n                )}>\n                    Back to login\n                </button>\n            </Link>\n        </div>\n    )\n}\n\nexport default error;","import * as React from \"react\";\nimport { Route, Redirect, RouteComponentProps } from \"react-router-dom\";\n\n/* JS Import */\nimport { URL_PET_LANDING } from \"../../config/UrlRoute\";\n\ninterface GuardedRouteProps {\n  component:\n    | React.ComponentClass<any, any>\n    | React.FunctionComponent<any>\n    | React.ComponentClass<RouteComponentProps<any, any, unknown>, any>\n    | undefined;\n  path: string;\n  isAuthenticated: boolean;\n  [props: string]: any;\n}\n\nconst GuardedRoute = ({\n  component,\n  path,\n  isAuthenticated,\n  ...props\n}: GuardedRouteProps) =>\n  isAuthenticated ? (\n    <Route path={path} component={component} />\n  ) : (\n    <Redirect to={URL_PET_LANDING} />\n  );\n\nexport default GuardedRoute;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { NavLink, useHistory } from \"react-router-dom\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../hoc-components/UI/backdrop/Backdrop\";\n\n/* TS Import */\nimport { addAuthToken } from \"../../store/actions\";\nimport { RootState } from \"../../store/reducers\";\nimport { URL_LOGIN, URL_PET_HOME } from \"../../config/UrlRoute\";\nimport { Auth } from \"../../services/auth.services\";\n\n/* CSS Import */\nimport \"./Signup.css\";\n\nconst mapStateToProps = (state: RootState) => ({\n  auth: state.auth,\n});\n\nconst connector = connect(mapStateToProps, {\n  addAuthToken,\n});\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = PropsFromRedux;\n\nconst Signup: React.FC<Props> = (props) => {\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [isSigningUp, setIsSigningUp] = useState<boolean>(false);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    async function checkUserAuthStatus() {\n      const { accessToken, username, email, role } = props.auth;\n      if (accessToken && username && email && role) {\n        history.push(URL_PET_HOME);\n      } else {\n        try {\n          const { name, email, token, role } = Auth.currentUserInfo();\n          if (name && email && token && role) {\n            props.addAuthToken(token, email, name, role);\n            history.push(URL_PET_HOME);\n          } else {\n            setIsVerifying(false);\n          }\n        } catch (err) {\n          setIsVerifying(false);\n        }\n      }\n    }\n\n    if (!props.auth.accessToken) {\n      checkUserAuthStatus();\n    }\n  });\n\n  const doSignup = async () => {\n    if (username && password && email) {\n      try {\n        setIsSigningUp(true);\n        const response = await Auth.signUp(email, username, password);\n        setEmail(\"\");\n        setPassword(\"\");\n        setUsername(\"\");\n        response === 200 && alert(\"Account created successfully\");\n        setIsSigningUp(false);\n      } catch (err: any) {\n        const message = err?.message;\n        setIsSigningUp(false);\n        setPassword(\"\");\n        if (message) {\n          alert(message);\n        }\n      }\n    }\n  };\n\n  const doUpdateFields = (\n    ev: React.ChangeEvent<HTMLInputElement>,\n    updateFn: React.Dispatch<React.SetStateAction<string>>\n  ) => {\n    updateFn(ev.target.value);\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      {isSigningUp && (\n        <Backdrop message=\"Please wait while we are creating an account\" />\n      )}\n      <div className=\"container-fluid d-flex flex-row row h-100 m-0 p-0\">\n        <div className=\"col-md-12 d-flex flex-column p-0\">\n          <div\n            className=\"d-flex flex-column justify-content-center align-items-center\"\n            style={{ flexGrow: 14 }}\n          >\n            <div className=\"login-form\">\n              <div className=\"text-center\">\n                <img\n                  src={\"./assets/logo.svg\"}\n                  width=\"100\"\n                  height=\"100\"\n                  alt=\"icon\"\n                  className=\"mb-4\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Email</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  value={email}\n                  onChange={(ev) => doUpdateFields(ev, setEmail)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Username</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={username}\n                  onChange={(ev) => doUpdateFields(ev, setUsername)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  value={password}\n                  onChange={(ev) => doUpdateFields(ev, setPassword)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <button\n                  className=\"btn bg-primary form-control mt-4 mb-2 text-white login-button\"\n                  onClick={doSignup}\n                >\n                  Create an account\n                </button>\n              </div>\n              <NavLink\n                to={URL_LOGIN}\n                className=\"d-flex justify-content-center small text-primary\"\n                style={{ flexGrow: 1 }}\n              >\n                Already have an account? &nbsp;\n                <span className=\"font-weight-bold\">Sign in</span>\n              </NavLink>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default connector(Signup);\n","import axios from \"axios\";\nimport { VendorProfileProps } from \"../props/VendorProps\";\nimport { Auth } from \"./auth.services\";\n\nexport function getPetCategory(role: string = \"admin\"): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(role + \"/pet/category\", {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function addPetCategory(petType: string, cost: number): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\n        \"admin/pet/category?name=\" + petType + \"&cost=\" + cost,\n        {},\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function updatePetCategory(\n  petType: string,\n  status: string,\n  cost: number\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .put(\n        `admin/pet/category?name=${petType}&active=${status}&cost=${cost}`,\n        {},\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getPetGrooming(role: string = \"admin\"): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(role + \"/pet/groom\", {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getPetGroomings(): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(\"user/pet/grooming\", {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function addPetGrooming(\n  name: string,\n  description: string,\n  cost: number,\n  isInsAllowed: boolean,\n  timeRequire: number\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\n        \"admin/pet/groom\",\n        {\n          name,\n          description,\n          cost,\n          isInsAllowed,\n          timeRequire,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function updatePetGrooming(\n  id: number,\n  name: string,\n  description: string,\n  cost: number,\n  isInsAllowed: boolean,\n  timeRequire: number\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .put(\n        \"admin/pet/groom\",\n        {\n          id,\n          name,\n          description,\n          cost,\n          isInsAllowed,\n          timeRequire,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getPetVaccines(role: string = \"admin\"): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(role + \"/pet/vaccine\", {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function addPetVaccine(\n  name: string,\n  description: string,\n  amount: number,\n  isInsAllowed: boolean\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\n        \"admin/pet/vaccine\",\n        {\n          name,\n          description,\n          amount,\n          isInsAllowed,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function updatePetVaccine(\n  id: number,\n  name: string,\n  description: string,\n  amount: number,\n  isInsAllowed: boolean\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .put(\n        \"admin/pet/vaccine\",\n        {\n          id,\n          name,\n          description,\n          amount,\n          isInsAllowed,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getPetMedicines(role: string = \"admin\"): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(role + \"/pet/medicine\", {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function addPetMedicine(\n  name: string,\n  description: string,\n  cost: number,\n  count: number,\n  isInsAllowed: boolean,\n  expiresAt: string\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\n        \"admin/pet/medicine\",\n        {\n          name,\n          description,\n          count,\n          cost,\n          isInsAllowed,\n          expiresAt,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function updatePetMedicine(\n  id: number,\n  name: string,\n  description: string,\n  cost: number,\n  count: number,\n  isInsAllowed: boolean,\n  expiresAt: string\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .put(\n        \"admin/pet/medicine\",\n        {\n          id,\n          name,\n          description,\n          count,\n          cost,\n          isInsAllowed,\n          expiresAt,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function addNewUnadoptPet(\n  name: string,\n  dob: string,\n  gender: string,\n  weight: number,\n  category: number,\n  role: string = \"admin\"\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\n        `${role}/pet/new/unadopt`,\n        {\n          name,\n          dob,\n          gender,\n          weight,\n          category,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function updateProfile(\n  endpoint: string,\n  email: string,\n  data: Partial<VendorProfileProps>,\n  token: string\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const requestData: any = {\n      ...data,\n      rest_food_type:\n        data.rest_food_type === 0\n          ? \"Veg\"\n          : data.rest_food_type === 1\n          ? \"Non-Veg\"\n          : \"both\",\n    };\n    axios\n      .put(`${endpoint}/${email}`, requestData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getPetClinics(role: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(`${role}/pet/clinic`, {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function addPetClinic(\n  name: string,\n  description: string,\n  specialities: string,\n  address: string\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\n        \"admin/pet/clinic\",\n        {\n          name,\n          description,\n          specialities,\n          address,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function updatePetClinic(\n  id: number,\n  name: string,\n  description: string,\n  specialities: string,\n  address: string\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .put(\n        \"admin/pet/clinic\",\n        {\n          id,\n          name,\n          description,\n          specialities,\n          address,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getUnadoptedPets(): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(\"common/pet/unadopted\", {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function addPetStaff(\n  name: string,\n  email: string,\n  gender: string,\n  staffId: number,\n  fee: number,\n  role: string,\n  clinics: Array<any>\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\n        \"admin/pet/staff\",\n        {\n          staffName: name,\n          email,\n          staffId,\n          gender,\n          clinicIds: clinics,\n          consultFee: fee,\n          userRole: role,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getPetStaffs(): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(\"admin/pet/staff\", {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getPetServices(): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(\"user/pet/service\", {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function bookPetAppt(\n  petId: number,\n  clinicId: number,\n  vetStaffId: number,\n  grmStaffId: number,\n  services: Array<string>,\n  apptTime: string,\n  reason: string,\n  grooms: Array<number>\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\n        \"user/pet/book/appointment\",\n        {\n          petId,\n          clinicId,\n          vetStaffId,\n          grmStaffId,\n          services,\n          apptTime,\n          reason,\n          grooms,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function doRateAppt(\n  apptId: number,\n  title: string,\n  description: string,\n  rating: number\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\n        \"user/pet/book/appointment/feedback\",\n        {\n          apptId,\n          title,\n          description,\n          rating,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getPetAppointments(): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(\"user/pet/appointments\", {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getStaffPetAppointments(): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(\"staff/pet/appointments\", {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getStaffPetAppointmentsHistory(): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(\"staff/pet/appointments/history\", {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function adoptNewPet(petId: number): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\n        `user/adopt/new`,\n        {\n          petId,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getMyPets(): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(`user/pets`, {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function updatePet(\n  petId: number,\n  petName: string,\n  petWeight: number\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .put(\n        `user/pet`,\n        {\n          petId,\n          petName,\n          petWeight,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function applyPetLicense(\n  petId: number,\n  cost: number,\n  desc: string\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\n        `user/pet/license`,\n        {\n          petId,\n          cost,\n          description: desc,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getAppliedPetLicense(): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(`admin/pet/license`, {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function approvePetLicense(id: number): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .put(\n        `admin/pet/license/${id}`,\n        {},\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function getClinicStaffs(clinic: number): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(\"user/pet/staff?clinic=\" + clinic, {\n        headers: {\n          Authorization: `Bearer ${Auth.getToken()}`,\n        },\n      })\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport function finalAppointment(\n  appointmentId: number,\n  vaccineId: number,\n  analysis: string,\n  nextTime: string,\n  medicines: Array<any>\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    axios\n      .put(\n        \"staff/pet/finish/appointment\",\n        {\n          appointmentId,\n          vaccineId,\n          analysis,\n          nextTime,\n          medicines,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Auth.getToken()}`,\n          },\n        }\n      )\n      .then((response) => response.data)\n      .then((value) => {\n        resolve(value);\n      })\n      .catch((err) => reject(err));\n  });\n}\n","import React from \"react\";\n\nconst AdminLayout = (WrappedComponent) => {\n  function NewComponent() {\n    return (\n      <div className=\"container-fluid d-flex flex-row row h-100 m-0 p-0 overflow-auto\">\n        <div className=\"col-md-12 d-flex flex-column p-0\">\n          <div className=\"h-100\">\n            <WrappedComponent />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return NewComponent;\n};\n\nexport default AdminLayout;\n","import React, { Children, Fragment } from \"react\";\n\nconst Modal: React.FC = ({ children, title, submitText, doSubmit }) => {\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"petModal\"\n      tabIndex={-1}\n      aria-labelledby=\"petModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog modal-lg\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"petModalLabel\">\n              {title}\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <form\n            className=\"mx-4\"\n            onSubmit={(ev) => {\n              ev.preventDefault();\n              doSubmit();\n            }}\n            method=\"POST\"\n          >\n            <div className=\"modal-body\">\n              {Children.map(children, (child, index) => (\n                <Fragment key={index}>{child}</Fragment>\n              ))}\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button\n                type=\"submit\"\n                className=\"btn bg-primary text-white login-button\"\n              >\n                {submitText}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { Fragment } from \"react\";\n\nconst DataList: React.FC<any> = ({\n  children,\n  dataLength,\n  icon,\n  placeholder,\n  secPlaceholder,\n  actionIcon,\n  actionText,\n  actionCallback,\n}) => {\n  return dataLength > 0 ? (\n    <Fragment>{children}</Fragment>\n  ) : (\n    <div className=\"d-flex flex-column justify-content-center align-items-center h-100\">\n      <FontAwesomeIcon icon={icon} size=\"8x\" className=\"text-dark-primary\" />\n      {placeholder && <p className=\"lead mt-2\">{placeholder}</p>}\n      {secPlaceholder && <p className=\"mark\">{secPlaceholder}</p>}\n      {(actionIcon || actionText) && (\n        <button\n          className=\"btn bg-primary mb-4 text-white login-button\"\n          data-toggle=\"modal\"\n          data-target=\"#petModal\"\n          onClick={(ev) => {\n            if (actionCallback) {\n              actionCallback(ev);\n            }\n          }}\n        >\n          {actionIcon && (\n            <Fragment>\n              <FontAwesomeIcon icon={actionIcon} /> &nbsp;\n            </Fragment>\n          )}\n          {actionText}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default DataList;\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./PetCategory.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faPaw, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  addNewUnadoptPet,\n  addPetCategory,\n  getPetCategory,\n  updatePetCategory,\n} from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\n\nconst PetCategory: React.FC = () => {\n  const [petTypes, setPetTypes] = useState<Array<any>>([]);\n  const [mode, setMode] = useState<string>(\"\");\n  const [type, setType] = useState<string>(\"\");\n  const [status, setStatus] = useState<boolean>(true);\n  const [name, setName] = useState<string>(\"\");\n  const [dob, setDob] = useState<string>(\"\");\n  const [gender, setGender] = useState<string>(\"\");\n  const [weight, setWeight] = useState<number>(0);\n  const [licenseCost, setLicenseCost] = useState<number>(0);\n  const [categoryId, setCategoryId] = useState<number>(0);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n\n  useEffect(() => {\n    async function getPetTypes() {\n      try {\n        const petCategory: any = await getPetCategory();\n        setPetTypes(petCategory);\n        setIsVerifying(false);\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (petTypes.length === 0 && !isFetched) {\n      getPetTypes();\n    }\n  });\n\n  const doUpdateType = async () => {\n    try {\n      setIsVerifying(true);\n      const responseCode =\n        mode === \"ADD\"\n          ? await addPetCategory(type, licenseCost)\n          : await updatePetCategory(\n              type,\n              status ? \"true\" : \"false\",\n              licenseCost\n            );\n      responseCode === 200 && alert(\"Updated successfully\");\n      setPetTypes([]);\n      setMode(\"\");\n      setIsVerifying(false);\n      setIsFetched(false);\n    } catch (err: any) {\n      setIsVerifying(false);\n    } finally {\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\n      document.querySelector(\".modal-backdrop\")?.remove();\n    }\n  };\n\n  const doAddNewUnadoptPet = async () => {\n    try {\n      setIsVerifying(true);\n      const responseCode = await addNewUnadoptPet(\n        name,\n        dob,\n        gender,\n        weight,\n        categoryId\n      );\n      responseCode === 200 && alert(\"Added successfully\");\n      setMode(\"\");\n      setIsVerifying(false);\n    } catch (err: any) {\n      setIsVerifying(false);\n    } finally {\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\n      document.querySelector(\".modal-backdrop\")?.remove();\n    }\n  };\n\n  const doUpdateFields = (\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    updateFn: React.Dispatch<React.SetStateAction<string>>\n  ) => {\n    updateFn(ev.target.value);\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <DataList\n        dataLength={petTypes.length}\n        icon={faPaw}\n        placeholder=\"No pet types available\"\n        actionIcon={faPlusCircle}\n        actionText=\"Add Pet Type\"\n        actionCallback={() => {\n          setMode(\"ADD\");\n          setType(\"\");\n          setLicenseCost(0);\n          setStatus(true);\n        }}\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"form-group\">\n            <div className=\"d-flex justify-content-between\">\n              <h3>Pet Category</h3>\n              <button\n                className=\"btn bg-primary mb-4 text-white login-button\"\n                data-toggle=\"modal\"\n                data-target=\"#petModal\"\n                onClick={() => {\n                  setMode(\"ADD\");\n                  setType(\"\");\n                  setLicenseCost(0);\n                  setStatus(true);\n                }}\n              >\n                <FontAwesomeIcon icon={faPlusCircle} />\n                &nbsp; Add Pet Type\n              </button>\n            </div>\n            <table className=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Type</th>\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\">License Cost</th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {petTypes.map((t) => (\n                  <tr key={t.id}>\n                    <th scope=\"row\">{t.id}</th>\n                    <td className=\"text-capitalize\">{t.name}</td>\n                    <td>{t.isActive ? \"Active\" : \"Inactive\"}</td>\n                    <td>{t.licenseCost}</td>\n                    <td className=\"text-center\">\n                      <FontAwesomeIcon\n                        icon={faEdit}\n                        size={\"1x\"}\n                        className=\"mx-2 cursor-pointer text-dark-primary\"\n                        title=\"Edit Pet Type\"\n                        data-toggle=\"modal\"\n                        data-target=\"#petModal\"\n                        onClick={() => {\n                          setMode(\"EDIT\");\n                          setType(t.name);\n                          setStatus(t.isActive);\n                          setLicenseCost(t.licenseCost);\n                        }}\n                      />\n                      {t.isActive && (\n                        <FontAwesomeIcon\n                          icon={faPlusCircle}\n                          size={\"1x\"}\n                          className=\"text-primary mx-2 cursor-pointer\"\n                          title=\"Add Pet for Adoption\"\n                          data-toggle=\"modal\"\n                          data-target=\"#petModal\"\n                          onClick={() => {\n                            setMode(\"NEW_PET\");\n                            setCategoryId(t.id);\n                          }}\n                        />\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </DataList>\n      <Modal\n        title={\n          mode === \"NEW_PET\"\n            ? \"Add New Pet\"\n            : mode === \"ADD\"\n            ? \"Create Pet Type\"\n            : \"Update Pet Type\"\n        }\n        submitText={\n          mode === \"NEW_PET\" ? \"Create\" : mode === \"ADD\" ? \"Create\" : \"Update\"\n        }\n        doSubmit={mode === \"NEW_PET\" ? doAddNewUnadoptPet : doUpdateType}\n      >\n        {mode !== \"\" && mode !== \"NEW_PET\" && (\n          <Fragment>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Pet Type</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={type}\n                onChange={(ev) => doUpdateFields(ev, setType)}\n                required\n              />\n            </div>\n            <div className=\"form-group form-check\">\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                checked={status}\n                onChange={(ev) => setStatus(ev.target.checked)}\n              />\n              <label className=\"text-secondary form-check-label\">Active</label>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">License Cost</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={licenseCost}\n                onChange={(ev) => setLicenseCost(ev.target.valueAsNumber)}\n                required\n                min={5}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        {mode === \"NEW_PET\" && (\n          <Fragment>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Pet Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={name}\n                onChange={(ev) => doUpdateFields(ev, setName)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Date of Birth</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                value={dob}\n                onChange={(ev) => doUpdateFields(ev, setDob)}\n                required\n                min={\"1970-01-01\"}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Gender</label>\n              <div className=\"form-check\">\n                <input\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name=\"gender\"\n                  value={\"MALE\"}\n                  onChange={(ev) => doUpdateFields(ev, setGender)}\n                  required\n                />\n                <label className=\"text-secondary form-check-label\">M</label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name=\"gender\"\n                  value={\"FEMALE\"}\n                  onChange={(ev) => doUpdateFields(ev, setGender)}\n                  required\n                />\n                <label className=\"text-secondary form-check-label\">F</label>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Weight (in grams)</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={weight}\n                onChange={(ev) => setWeight(ev.target.valueAsNumber)}\n                required\n                min={5}\n              />\n            </div>\n          </Fragment>\n        )}\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(PetCategory);\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./PetGrooming.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBath,\n  faCheck,\n  faEdit,\n  faPlusCircle,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  addPetGrooming,\n  getPetGrooming,\n  updatePetGrooming,\n} from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\n\nconst PetGrooming: React.FC = () => {\n  const [petGrooms, setPetGrooms] = useState<Array<any>>([]);\n  const [mode, setMode] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n  const [cost, setCost] = useState<number>(0);\n  const [desc, setDesc] = useState<string>(\"\");\n  const [ins, setIns] = useState<boolean>(true);\n  const [time, setTime] = useState<number>(0);\n  const [id, setId] = useState<number>(-1);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n\n  useEffect(() => {\n    async function getPetGroom() {\n      try {\n        const grooms: any = await getPetGrooming();\n        setPetGrooms(grooms);\n        setIsVerifying(false);\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (petGrooms.length === 0 && !isFetched) {\n      getPetGroom();\n    }\n  });\n\n  const doAddUpdateGroom = async () => {\n    try {\n      setIsVerifying(true);\n      const responseCode =\n        mode === \"ADD\"\n          ? await addPetGrooming(name, desc, cost, ins, time)\n          : await updatePetGrooming(id, name, desc, cost, ins, time);\n      responseCode === 200 && alert(\"Updated successfully\");\n      setPetGrooms([]);\n      setMode(\"\");\n      setId(-1);\n      setName(\"\");\n      setDesc(\"\");\n      setCost(0);\n      setTime(0);\n      setIns(true);\n      setIsVerifying(false);\n      setIsFetched(false);\n    } catch (err: any) {\n      setIsVerifying(false);\n    } finally {\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\n      document.querySelector(\".modal-backdrop\")?.remove();\n    }\n  };\n\n  const doUpdateFields = (\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    updateFn: React.Dispatch<React.SetStateAction<string>>\n  ) => {\n    updateFn(ev.target.value);\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n\n      <DataList\n        dataLength={petGrooms.length}\n        icon={faBath}\n        placeholder=\"No grooming services available\"\n        actionIcon={faPlusCircle}\n        actionText=\"Add Grooming\"\n        actionCallback={() => {\n          setMode(\"ADD\");\n          setId(-1);\n          setName(\"\");\n          setDesc(\"\");\n          setCost(0);\n          setTime(0);\n          setIns(true);\n        }}\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"form-group\">\n            <div className=\"d-flex justify-content-between\">\n              <h3>Grooming Services</h3>\n              <button\n                className=\"btn bg-primary mb-4 text-white login-button\"\n                data-toggle=\"modal\"\n                data-target=\"#petModal\"\n                onClick={() => {\n                  setMode(\"ADD\");\n                  setId(-1);\n                  setName(\"\");\n                  setDesc(\"\");\n                  setCost(0);\n                  setTime(0);\n                  setIns(true);\n                }}\n              >\n                <FontAwesomeIcon icon={faPlusCircle} />\n                &nbsp; Add Grooming\n              </button>\n            </div>\n            <table className=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Grooming Name</th>\n                  <th scope=\"col\">Cost</th>\n                  <th scope=\"col\">Insurance</th>\n                  <th scope=\"col\">Time Required</th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {petGrooms.map((t) => (\n                  <tr key={t.id}>\n                    <th scope=\"row\">{t.id}</th>\n                    <td>\n                      {t.name}\n                      <br />\n                      <span className=\"small\">{t.description}</span>\n                    </td>\n                    <td className=\"text-capitalize\">{t.cost}</td>\n                    <td>\n                      {t.isInsAllowed ? (\n                        <FontAwesomeIcon icon={faCheck} size={\"1x\"} />\n                      ) : (\n                        <FontAwesomeIcon icon={faTimes} size={\"1x\"} />\n                      )}\n                    </td>\n                    <td className=\"text-capitalize\">{t.timeRequire}</td>\n                    <td className=\"text-center\">\n                      <FontAwesomeIcon\n                        icon={faEdit}\n                        size={\"1x\"}\n                        className=\"mx-2 cursor-pointer text-dark-primary\"\n                        title=\"Edit Pet Type\"\n                        data-toggle=\"modal\"\n                        data-target=\"#petModal\"\n                        onClick={() => {\n                          setMode(\"EDIT\");\n                          setId(t.id);\n                          setName(t.name);\n                          setDesc(t.description);\n                          setCost(t.cost);\n                          setTime(t.timeRequire);\n                          setIns(t.isInsAllowed);\n                        }}\n                      />\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </DataList>\n\n      <Modal\n        title={mode === \"ADD\" ? \"Add New Grooming\" : \"Update Grooming Service\"}\n        submitText={mode === \"ADD\" ? \"Create\" : \"Update\"}\n        doSubmit={doAddUpdateGroom}\n      >\n        {mode !== \"\" && (\n          <Fragment>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Grooming Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={name}\n                onChange={(ev) => doUpdateFields(ev, setName)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Grooming Cost</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={cost}\n                onChange={(ev) => setCost(ev.target.valueAsNumber)}\n                required\n                min={1}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Time Required (in mins)</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={time}\n                onChange={(ev) => setTime(ev.target.valueAsNumber)}\n                required\n                min={5}\n              />\n            </div>\n            <div className=\"form-group form-check\">\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                checked={ins}\n                onChange={(ev) => setIns(ev.target.checked)}\n              />\n              <label className=\"text-secondary form-check-label\">\n                Insurance\n              </label>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Description</label>\n              <textarea\n                rows={3}\n                className=\"form-control\"\n                value={desc}\n                onChange={(ev) => doUpdateFields(ev, setDesc)}\n                required\n              ></textarea>\n            </div>\n          </Fragment>\n        )}\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(PetGrooming);\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./PetVaccine.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faEdit,\n  faPlusCircle,\n  faSyringe,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  addPetVaccine,\n  getPetVaccines,\n  updatePetVaccine,\n} from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\n\nconst PetVaccine: React.FC = () => {\n  const [vaccines, setVaccines] = useState<Array<any>>([]);\n  const [mode, setMode] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n  const [cost, setCost] = useState<number>(0);\n  const [desc, setDesc] = useState<string>(\"\");\n  const [ins, setIns] = useState<boolean>(true);\n  const [id, setId] = useState<number>(-1);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n\n  useEffect(() => {\n    async function getPetVaccine() {\n      try {\n        const vacc: any = await getPetVaccines();\n        setVaccines(vacc);\n        setIsVerifying(false);\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (vaccines.length === 0 && !isFetched) {\n      getPetVaccine();\n    }\n  });\n\n  const doAddUpdateVaccine = async () => {\n    try {\n      setIsVerifying(true);\n      const responseCode =\n        mode === \"ADD\"\n          ? await addPetVaccine(name, desc, cost, ins)\n          : await updatePetVaccine(id, name, desc, cost, ins);\n      responseCode === 200 && alert(\"Updated successfully\");\n      setVaccines([]);\n      setMode(\"\");\n      setId(-1);\n      setName(\"\");\n      setDesc(\"\");\n      setCost(0);\n      setIns(true);\n      setIsVerifying(false);\n      setIsFetched(false);\n    } catch (err: any) {\n      setIsVerifying(false);\n    } finally {\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\n      document.querySelector(\".modal-backdrop\")?.remove();\n    }\n  };\n\n  const doUpdateFields = (\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    updateFn: React.Dispatch<React.SetStateAction<string>>\n  ) => {\n    updateFn(ev.target.value);\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <DataList\n        dataLength={vaccines.length}\n        icon={faSyringe}\n        placeholder=\"No vaccines available\"\n        actionIcon={faPlusCircle}\n        actionText=\"Add Vaccine\"\n        actionCallback={() => {\n          setMode(\"ADD\");\n          setId(-1);\n          setName(\"\");\n          setDesc(\"\");\n          setCost(0);\n          setIns(true);\n        }}\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"form-group\">\n            <div className=\"d-flex justify-content-between\">\n              <h3>Vaccine Details</h3>\n              <button\n                className=\"btn bg-primary mb-4 text-white login-button\"\n                data-toggle=\"modal\"\n                data-target=\"#petModal\"\n                onClick={() => {\n                  setMode(\"ADD\");\n                  setId(-1);\n                  setName(\"\");\n                  setDesc(\"\");\n                  setCost(0);\n                  setIns(true);\n                }}\n              >\n                <FontAwesomeIcon icon={faPlusCircle} />\n                &nbsp; Add Vaccine\n              </button>\n            </div>\n            <table className=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Vaccine Name</th>\n                  <th scope=\"col\">Cost</th>\n                  <th scope=\"col\">Insurance</th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {vaccines.map((t) => (\n                  <tr key={t.id}>\n                    <th scope=\"row\">{t.id}</th>\n                    <td>\n                      {t.name}\n                      <br />\n                      <span className=\"small\">{t.description}</span>\n                    </td>\n                    <td className=\"text-capitalize\">{t.amount}</td>\n                    <td>\n                      {t.isInsAllowed ? (\n                        <FontAwesomeIcon icon={faCheck} size={\"1x\"} />\n                      ) : (\n                        <FontAwesomeIcon icon={faTimes} size={\"1x\"} />\n                      )}\n                    </td>\n                    <td className=\"text-center\">\n                      <FontAwesomeIcon\n                        icon={faEdit}\n                        size={\"1x\"}\n                        className=\"mx-2 cursor-pointer text-dark-primary\"\n                        title=\"Edit Pet Type\"\n                        data-toggle=\"modal\"\n                        data-target=\"#petModal\"\n                        onClick={() => {\n                          setMode(\"EDIT\");\n                          setId(t.id);\n                          setName(t.name);\n                          setDesc(t.description);\n                          setCost(t.amount);\n                          setIns(t.isInsAllowed);\n                        }}\n                      />\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </DataList>\n\n      <Modal\n        title={mode === \"ADD\" ? \"Add New Vaccine\" : \"Update Vaccine Service\"}\n        submitText={mode === \"ADD\" ? \"Create\" : \"Update\"}\n        doSubmit={doAddUpdateVaccine}\n      >\n        {mode !== \"\" && (\n          <Fragment>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Vaccine Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={name}\n                onChange={(ev) => doUpdateFields(ev, setName)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Vaccine Cost</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={cost}\n                onChange={(ev) => setCost(ev.target.valueAsNumber)}\n                min={3}\n                required\n              />\n            </div>\n            <div className=\"form-group form-check\">\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                checked={ins}\n                onChange={(ev) => setIns(ev.target.checked)}\n              />\n              <label className=\"text-secondary form-check-label\">\n                Insurance\n              </label>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Description</label>\n              <textarea\n                rows={3}\n                className=\"form-control\"\n                value={desc}\n                onChange={(ev) => doUpdateFields(ev, setDesc)}\n                required\n              ></textarea>\n            </div>\n          </Fragment>\n        )}\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(PetVaccine);\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./PetMedicine.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faEdit,\n  faPlusCircle,\n  faTablets,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  addPetMedicine,\n  getPetMedicines,\n  updatePetMedicine,\n} from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\n\nconst PetMedicine: React.FC = () => {\n  const [medicines, setMedicines] = useState<Array<any>>([]);\n  const [mode, setMode] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n  const [cost, setCost] = useState<number>(0);\n  const [count, setCount] = useState<number>(0);\n  const [desc, setDesc] = useState<string>(\"\");\n  const [ins, setIns] = useState<boolean>(true);\n  const [expire, setExpire] = useState<string>(\"\");\n  const [id, setId] = useState<number>(-1);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n\n  useEffect(() => {\n    async function getPetMedicine() {\n      try {\n        const med: any = await getPetMedicines();\n        setMedicines(med);\n        setIsVerifying(false);\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (medicines.length === 0 && !isFetched) {\n      getPetMedicine();\n    }\n  });\n\n  const doAddUpdateMedicine = async () => {\n    try {\n      setIsVerifying(true);\n      const responseCode =\n        mode === \"ADD\"\n          ? await addPetMedicine(name, desc, cost, count, ins, expire)\n          : await updatePetMedicine(id, name, desc, cost, count, ins, expire);\n      responseCode === 200 && alert(\"Updated successfully\");\n      setMedicines([]);\n      setMode(\"\");\n      setId(-1);\n      setName(\"\");\n      setDesc(\"\");\n      setCost(0);\n      setCount(0);\n      setExpire(\"\");\n      setIns(true);\n      setIsVerifying(false);\n      setIsFetched(false);\n    } catch (err: any) {\n      setIsVerifying(false);\n    } finally {\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\n      document.querySelector(\".modal-backdrop\")?.remove();\n    }\n  };\n\n  const doUpdateFields = (\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    updateFn: React.Dispatch<React.SetStateAction<string>>\n  ) => {\n    updateFn(ev.target.value);\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <DataList\n        dataLength={medicines.length}\n        icon={faTablets}\n        placeholder=\"No medicines available\"\n        actionIcon={faPlusCircle}\n        actionText=\"Add Medicine\"\n        actionCallback={() => {\n          setMode(\"ADD\");\n          setId(-1);\n          setName(\"\");\n          setDesc(\"\");\n          setCost(0);\n          setCount(0);\n          setExpire(\"\");\n          setIns(true);\n        }}\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"form-group\">\n            <div className=\"d-flex justify-content-between\">\n              <h3>Medicine Details</h3>\n              <button\n                className=\"btn bg-primary mb-4 text-white login-button\"\n                data-toggle=\"modal\"\n                data-target=\"#petModal\"\n                onClick={() => {\n                  setMode(\"ADD\");\n                  setId(-1);\n                  setName(\"\");\n                  setDesc(\"\");\n                  setCost(0);\n                  setCount(0);\n                  setExpire(\"\");\n                  setIns(true);\n                }}\n              >\n                <FontAwesomeIcon icon={faPlusCircle} />\n                &nbsp; Add Medicine\n              </button>\n            </div>\n            <table className=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Medicine Name</th>\n                  <th scope=\"col\">Per Cost</th>\n                  <th scope=\"col\">Available Count</th>\n                  <th scope=\"col\">Insurance</th>\n                  <th scope=\"col\">Expires At</th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {medicines.map((t) => (\n                  <tr key={t.id}>\n                    <th scope=\"row\">{t.id}</th>\n                    <td>\n                      {t.name}\n                      <br />\n                      <span className=\"small\">{t.description}</span>\n                    </td>\n                    <td className=\"text-capitalize\">{t.perCost}</td>\n                    <td className=\"text-capitalize\">{t.count}</td>\n                    <td>\n                      {t.isInsAllowed ? (\n                        <FontAwesomeIcon icon={faCheck} size={\"1x\"} />\n                      ) : (\n                        <FontAwesomeIcon icon={faTimes} size={\"1x\"} />\n                      )}\n                    </td>\n                    <td className=\"text-capitalize\">\n                      {t.expiresAt && t.expiresAt.substr(0, 10)}\n                    </td>\n                    <td className=\"text-center\">\n                      <FontAwesomeIcon\n                        icon={faEdit}\n                        size={\"1x\"}\n                        className=\"mx-2 cursor-pointer text-dark-primary\"\n                        title=\"Edit Medicine\"\n                        data-toggle=\"modal\"\n                        data-target=\"#petModal\"\n                        onClick={() => {\n                          setMode(\"EDIT\");\n                          setId(t.id);\n                          setName(t.name);\n                          setDesc(t.description);\n                          setCost(t.perCost);\n                          setCount(t.count);\n                          setExpire(t.expiresAt && t.expiresAt.substr(0, 10));\n                          setIns(t.isInsAllowed);\n                        }}\n                      />\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </DataList>\n\n      <Modal\n        title={mode === \"ADD\" ? \"Add New Medicine\" : \"Update Medicine\"}\n        submitText={mode === \"ADD\" ? \"Create\" : \"Update\"}\n        doSubmit={doAddUpdateMedicine}\n      >\n        {mode !== \"\" && (\n          <Fragment>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Medicine Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={name}\n                onChange={(ev) => doUpdateFields(ev, setName)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Per Cost</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={cost}\n                onChange={(ev) => setCost(ev.target.valueAsNumber)}\n                required\n                min={0}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Available Count</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={count}\n                onChange={(ev) => setCount(ev.target.valueAsNumber)}\n                required\n                min={1}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Expires At</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                value={expire}\n                onChange={(ev) => setExpire(ev.target.value)}\n                required\n                min={new Date().toISOString().substr(0, 10)}\n              />\n            </div>\n            <div className=\"form-group form-check\">\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                checked={ins}\n                onChange={(ev) => setIns(ev.target.checked)}\n              />\n              <label className=\"text-secondary form-check-label\">\n                Insurance\n              </label>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Description</label>\n              <textarea\n                rows={3}\n                className=\"form-control\"\n                value={desc}\n                onChange={(ev) => doUpdateFields(ev, setDesc)}\n                required\n              ></textarea>\n            </div>\n          </Fragment>\n        )}\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(PetMedicine);\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./PetClinic.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faClinicMedical,\n  faEdit,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  addPetClinic,\n  getPetClinics,\n  updatePetClinic,\n} from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\n\nconst PetClinic: React.FC = () => {\n  const [clinics, setClinics] = useState<Array<any>>([]);\n  const [mode, setMode] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n  const [desc, setDesc] = useState<string>(\"\");\n  const [spl, setSpl] = useState<string>(\"\");\n  const [address, setAddress] = useState<string>(\"\");\n  const [id, setId] = useState<number>(-1);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n\n  useEffect(() => {\n    async function getPetClinic() {\n      try {\n        const cli: any = await getPetClinics(\"admin\");\n        setClinics(cli);\n        setIsVerifying(false);\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (clinics.length === 0 && !isFetched) {\n      getPetClinic();\n    }\n  });\n\n  const doAddUpdateClinic = async () => {\n    try {\n      setIsVerifying(true);\n      const responseCode =\n        mode === \"ADD\"\n          ? await addPetClinic(name, desc, spl, address)\n          : await updatePetClinic(id, name, desc, spl, address);\n      responseCode === 200 && alert(\"Updated successfully\");\n      setClinics([]);\n      setMode(\"\");\n      setId(-1);\n      setName(\"\");\n      setDesc(\"\");\n      setSpl(\"\");\n      setAddress(\"\");\n      setDesc(\"\");\n      setIsVerifying(false);\n      setIsFetched(false);\n    } catch (err: any) {\n      setIsVerifying(false);\n    } finally {\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\n      document.querySelector(\".modal-backdrop\")?.remove();\n    }\n  };\n\n  const doUpdateFields = (\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    updateFn: React.Dispatch<React.SetStateAction<string>>\n  ) => {\n    updateFn(ev.target.value);\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <DataList\n        dataLength={clinics.length}\n        icon={faClinicMedical}\n        placeholder=\"No clinics available\"\n        actionIcon={faPlusCircle}\n        actionText=\"Add Clinic\"\n        actionCallback={() => {\n          setMode(\"ADD\");\n          setId(-1);\n          setName(\"\");\n          setDesc(\"\");\n          setSpl(\"\");\n          setAddress(\"\");\n          setDesc(\"\");\n        }}\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"form-group\">\n            <div className=\"d-flex justify-content-between\">\n              <h3>Clinic Details</h3>\n              <button\n                className=\"btn bg-primary mb-4 text-white login-button\"\n                data-toggle=\"modal\"\n                data-target=\"#petModal\"\n                onClick={() => {\n                  setMode(\"ADD\");\n                  setId(-1);\n                  setName(\"\");\n                  setDesc(\"\");\n                  setSpl(\"\");\n                  setAddress(\"\");\n                  setDesc(\"\");\n                }}\n              >\n                <FontAwesomeIcon icon={faPlusCircle} />\n                &nbsp; Add Clinic\n              </button>\n            </div>\n            <table className=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Clinic Name</th>\n                  <th scope=\"col\">Specialities</th>\n                  <th scope=\"col\">Description</th>\n                  <th scope=\"col\" className=\"text-center\">\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {clinics.map((t) => (\n                  <tr key={t.id}>\n                    <th scope=\"row\">{t.id}</th>\n                    <td>\n                      {t.name}\n                      <br />\n                      <span className=\"small font-italic\">\n                        <address>{t.address}</address>\n                      </span>\n                    </td>\n                    <td>\n                      <pre>{t.specialities}</pre>\n                    </td>\n                    <td>\n                      <pre>{t.description}</pre>\n                    </td>\n                    <td className=\"text-center\">\n                      <FontAwesomeIcon\n                        icon={faEdit}\n                        size={\"1x\"}\n                        className=\"mx-2 cursor-pointer text-dark-primary\"\n                        title=\"Edit Clinic\"\n                        data-toggle=\"modal\"\n                        data-target=\"#petModal\"\n                        onClick={() => {\n                          setMode(\"EDIT\");\n                          setId(t.id);\n                          setName(t.name);\n                          setDesc(t.description);\n                          setSpl(t.specialities);\n                          setAddress(t.address);\n                        }}\n                      />\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </DataList>\n\n      <Modal\n        title={mode === \"ADD\" ? \"Add New Clinic\" : \"Update Clinic\"}\n        submitText={mode === \"ADD\" ? \"Create\" : \"Update\"}\n        doSubmit={doAddUpdateClinic}\n      >\n        {mode !== \"\" && (\n          <Fragment>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Clinic Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={name}\n                onChange={(ev) => doUpdateFields(ev, setName)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Clinic Specialities</label>\n              <textarea\n                rows={3}\n                className=\"form-control\"\n                value={spl}\n                onChange={(ev) => doUpdateFields(ev, setSpl)}\n                required\n              ></textarea>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Description</label>\n              <textarea\n                rows={3}\n                className=\"form-control\"\n                value={desc}\n                onChange={(ev) => doUpdateFields(ev, setDesc)}\n                required\n              ></textarea>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Address</label>\n              <textarea\n                rows={3}\n                className=\"form-control\"\n                value={address}\n                onChange={(ev) => doUpdateFields(ev, setAddress)}\n                required\n              ></textarea>\n            </div>\n          </Fragment>\n        )}\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(PetClinic);\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./PetAdopt.css\";\nimport { getUnadoptedPets } from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\nimport { faDog } from \"@fortawesome/free-solid-svg-icons\";\n\nconst PetAdopt: React.FC = () => {\n  const [pets, setPets] = useState<Array<any>>([]);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n\n  useEffect(() => {\n    async function getUnadoptedPet() {\n      try {\n        const cli: any = await getUnadoptedPets();\n        setPets(cli);\n        setIsVerifying(false);\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (pets.length === 0 && !isFetched) {\n      getUnadoptedPet();\n    }\n  });\n\n  const getMonths = (dob: string) => {\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\n    diff /= 60 * 60 * 24 * 7 * 4;\n    return Math.abs(Math.round(diff));\n  };\n\n  // const doUpdateFields = (\n  //   ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  //   updateFn: React.Dispatch<React.SetStateAction<string>>\n  // ) => {\n  //   updateFn(ev.target.value);\n  // };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <DataList\n        dataLength={pets.length}\n        icon={faDog}\n        placeholder=\"No pets available to adopt\"\n        secPlaceholder='To add new pet, visit \"Pet Types\"'\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"form-group\">\n            <div className=\"d-flex justify-content-between\">\n              <h3>Unadopted Pets</h3>\n            </div>\n            <table className=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Pet Name</th>\n                  <th scope=\"col\">Weight (in grams)</th>\n                  <th scope=\"col\">Gender</th>\n                  <th scope=\"col\">Pet Type</th>\n                  <th scope=\"col\">Age (in months)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {pets.map((t, i) => (\n                  <tr key={t.id}>\n                    <th scope=\"row\">{i + 1}</th>\n                    <td>{t.petName}</td>\n                    <td>{t.weight}</td>\n                    <td>{t.gender}</td>\n                    <td className=\"text-capitalize\">{t.petCategory.name}</td>\n                    <td>{getMonths(t.dob)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </DataList>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(PetAdopt);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon as FAIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBath,\n  faClinicMedical,\n  faDog,\n  faHospitalUser,\n  faIdBadge,\n  faPaw,\n  faSyringe,\n  faTablets,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n/* JS Import */\nimport {\n  URL_PET_ADMIN_CLINC,\n  URL_PET_ADMIN_PETS,\n  URL_PET_ADMIN_PET_TYPES,\n  URL_PET_ADMIN_STAFF,\n  URL_PET_ADMIN_MEDICINE,\n  URL_PET_ADMIN_VACCINE,\n  URL_PET_ADMIN_GROOM,\n  URL_PET_ADMIN_LICENSE,\n} from \"../../../config/UrlRoute\";\n\n/* CSS Import */\nimport \"./AdminHeader.css\";\n\nconst AdminHeader: React.FC = () => {\n  return (\n    <div\n      className=\"d-flex flex-column h-100 p-2\"\n      style={{\n        backgroundColor: \"var(--dark-primary-transparent)\",\n      }}\n    >\n      <div className=\"header-navigation\">\n        <div className=\"list-group\">\n          <NavLink\n            to={URL_PET_ADMIN_CLINC}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faClinicMedical} size=\"1x\" />\n            </span>\n            Clinic\n          </NavLink>\n          <NavLink\n            to={URL_PET_ADMIN_STAFF}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faHospitalUser} size=\"1x\" />\n            </span>\n            Staff\n          </NavLink>\n          <NavLink\n            to={URL_PET_ADMIN_PET_TYPES}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faPaw} size=\"1x\" />\n            </span>\n            Pet Types\n          </NavLink>\n          <NavLink\n            to={URL_PET_ADMIN_PETS}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faDog} size=\"1x\" />\n            </span>\n            Pets\n          </NavLink>\n          <NavLink\n            to={URL_PET_ADMIN_MEDICINE}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faTablets} size=\"1x\" />\n            </span>\n            Medicine\n          </NavLink>\n          <NavLink\n            to={URL_PET_ADMIN_VACCINE}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faSyringe} size=\"1x\" />\n            </span>\n            Vaccine\n          </NavLink>\n          <NavLink\n            to={URL_PET_ADMIN_GROOM}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faBath} size=\"1x\" />\n            </span>\n            Grooming\n          </NavLink>\n          <NavLink\n            to={URL_PET_ADMIN_LICENSE}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faIdBadge} size=\"1x\" />\n            </span>\n            License\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminHeader;\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./PetStaff.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAt,\n  faHospitalUser,\n  faInfoCircle,\n  faPlusCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  addPetStaff,\n  getPetClinics,\n  getPetStaffs,\n} from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\n\nconst PetStaff: React.FC = () => {\n  const [staffs, setStaffs] = useState<Array<any>>([]);\n  const [clinics, setClinics] = useState<Array<any>>([]);\n  const [mode, setMode] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [staffId, setStaffId] = useState<number>(0);\n  const [fee, setFee] = useState<number>(0);\n  const [role, setRole] = useState<string>(\"\");\n  const [gender, setGender] = useState<string>(\"MALE\");\n  const [staffClinic, setStaffClinic] = useState<Array<number>>([]);\n  // const [id, setId] = useState<number>(-1);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n\n  useEffect(() => {\n    async function getStaffs() {\n      try {\n        const staff: any = await getPetStaffs();\n        const cli: any = await getPetClinics(\"admin\");\n        setStaffs(staff);\n        setClinics(cli);\n        setIsVerifying(false);\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (staffs.length === 0 && !isFetched) {\n      getStaffs();\n    }\n  });\n\n  const doAddUpdateStaff = async () => {\n    try {\n      setIsVerifying(true);\n      const responseCode = await addPetStaff(\n        name,\n        email,\n        gender,\n        staffId,\n        fee,\n        role,\n        staffClinic\n      );\n\n      responseCode === 200 && alert(\"Updated successfully\");\n      setStaffs([]);\n      setMode(\"\");\n      // setId(-1);\n      setName(\"\");\n      setEmail(\"\");\n      setGender(\"\");\n      setStaffId(0);\n      setFee(0);\n      setRole(\"\");\n      setStaffClinic([]);\n      setIsVerifying(false);\n      setIsFetched(false);\n    } catch (err: any) {\n      setIsVerifying(false);\n    } finally {\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\n      document.querySelector(\".modal-backdrop\")?.remove();\n    }\n  };\n\n  const doUpdateFields = (\n    ev: React.ChangeEvent<\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n    >,\n    updateFn: React.Dispatch<React.SetStateAction<string>>\n  ) => {\n    updateFn(ev.target.value);\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <DataList\n        dataLength={staffs.length}\n        icon={faHospitalUser}\n        placeholder={\"No staffs available\"}\n        actionIcon={faPlusCircle}\n        actionText=\"Add Staff\"\n        actionCallback={() => {\n          setMode(\"ADD\");\n          // setId(-1);\n          setName(\"\");\n          setEmail(\"\");\n          setGender(\"\");\n          setStaffId(0);\n          setFee(0);\n          setRole(\"\");\n          setStaffClinic([]);\n        }}\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"form-group\">\n            <div className=\"d-flex justify-content-between\">\n              <h3>Staff Details</h3>\n              <button\n                className=\"btn bg-primary mb-4 text-white login-button\"\n                data-toggle=\"modal\"\n                data-target=\"#petModal\"\n                onClick={() => {\n                  setMode(\"ADD\");\n                  // setId(-1);\n                  setName(\"\");\n                  setEmail(\"\");\n                  setGender(\"\");\n                  setStaffId(0);\n                  setFee(0);\n                  setRole(\"\");\n                  setStaffClinic([]);\n                }}\n              >\n                <FontAwesomeIcon icon={faPlusCircle} />\n                &nbsp; Add Staff\n              </button>\n            </div>\n            <table className=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Staff Name</th>\n                  <th scope=\"col\">Fee</th>\n                  <th scope=\"col\">Role</th>\n                  <th scope=\"col\">Clinic</th>\n                </tr>\n              </thead>\n              <tbody>\n                {staffs.map((t, i) => (\n                  <tr key={t.id}>\n                    <th scope=\"row\">{i + 1}</th>\n                    <td>\n                      {t.username}\n                      &nbsp;\n                      <FontAwesomeIcon\n                        icon={faInfoCircle}\n                        size={\"1x\"}\n                        title={`Staff #: ${t.staff.id}`}\n                        onClick={() =>\n                          navigator.clipboard.writeText(t.staff.id)\n                        }\n                      />\n                      &nbsp;\n                      <FontAwesomeIcon\n                        icon={faAt}\n                        size={\"1x\"}\n                        title={`${t.email}`}\n                        onClick={() => navigator.clipboard.writeText(t.email)}\n                      />\n                    </td>\n                    <td>{t.staff.consultFee}</td>\n                    <td className=\"text-capitalize\">\n                      {t.authorities\n                        .map((a: any) => a.authority.replace(\"ROLE_\", \"\"))\n                        .join(\", \")}\n                    </td>\n                    <td>\n                      <table>\n                        <tbody>\n                          {t.staff.clinics.map((c: any, i: number) => (\n                            <tr key={i}>\n                              <td>\n                                <strong>\n                                  {i + 1}\n                                  {\". \" + c.name}\n                                </strong>\n                                <br />\n                                <i>{c.specialities}</i>\n                                <br />\n                                <i>{c.address}</i>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </DataList>\n\n      <Modal\n        title={mode === \"ADD\" ? \"Add New Staff\" : \"Update Staff\"}\n        submitText={mode === \"ADD\" ? \"Create\" : \"Update\"}\n        doSubmit={doAddUpdateStaff}\n      >\n        {mode !== \"\" && (\n          <Fragment>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Staff Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={name}\n                onChange={(ev) => doUpdateFields(ev, setName)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Staff Email</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                value={email}\n                onChange={(ev) => doUpdateFields(ev, setEmail)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Staff ID</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={staffId}\n                onChange={(ev) => setStaffId(ev.target.valueAsNumber)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Gender</label>\n              <div className=\"form-check\">\n                <input\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name=\"gender\"\n                  value={\"MALE\"}\n                  checked={gender === \"MALE\"}\n                  onChange={(ev) => doUpdateFields(ev, setGender)}\n                  required\n                />\n                <label className=\"text-secondary form-check-label\">M</label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name=\"gender\"\n                  value={\"FEMALE\"}\n                  checked={gender === \"FEMALE\"}\n                  onChange={(ev) => doUpdateFields(ev, setGender)}\n                  required\n                />\n                <label className=\"text-secondary form-check-label\">F</label>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Service Fee</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={fee}\n                onChange={(ev) => setFee(ev.target.valueAsNumber)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Clinic</label>\n              <select\n                name=\"clinic\"\n                className=\"form-control\"\n                title=\"clinic\"\n                onChange={(ev) => {\n                  const options = [...ev.target.selectedOptions];\n                  const values = options.map((option) => option.value);\n                  setStaffClinic(values);\n                }}\n                required\n                multiple\n                defaultValue={[...staffClinic.map((s) => s.toString())]}\n              >\n                {clinics.map((c, i) => {\n                  return (\n                    <option value={c.id} key={i}>\n                      {c.name}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Staff Role</label>\n              <select\n                name=\"role\"\n                id=\"role\"\n                className=\"form-control\"\n                title=\"staff role\"\n                onChange={(ev) => {\n                  doUpdateFields(ev, setRole);\n                }}\n                required\n                value={role}\n              >\n                <option value=\"-1\"></option>\n                <option value=\"VETERINARIAN\">VETERINARIAN</option>\n                <option value=\"GROOMING\">GROOM</option>\n              </select>\n            </div>\n          </Fragment>\n        )}\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(PetStaff);\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./PetLicense.css\";\nimport {\n  approvePetLicense,\n  getAppliedPetLicense,\n} from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheckCircle,\n  faIdBadge,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\n\nconst MyPet: React.FC = () => {\n  const [licenses, setLicenses] = useState<Array<any>>([]);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n  const [mode, setMode] = useState<string>(\"\");\n  const [licenseId, setLicenseId] = useState<number>(0);\n  const [petId, setPetId] = useState<number>(0);\n  const [petName, setPetName] = useState<string>(\"\");\n\n  useEffect(() => {\n    async function getLicense() {\n      try {\n        const licens: any = await getAppliedPetLicense();\n        setLicenses(licens);\n        setIsVerifying(false);\n        setMode(\"\");\n        setLicenseId(0);\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (licenses.length === 0 && !isFetched) {\n      getLicense();\n    }\n  });\n\n  const getMonths = (dob: string) => {\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\n    diff /= 60 * 60 * 24 * 7 * 4;\n    return Math.abs(Math.round(diff));\n  };\n\n  const doApproveLicense = async () => {\n    if (mode === \"EDIT\") {\n      await approvePetLicense(licenseId);\n      setIsFetched(false);\n      setLicenses([]);\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\n      document.querySelector(\".modal-backdrop\")?.remove();\n    }\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <DataList\n        dataLength={licenses.length}\n        icon={faIdBadge}\n        placeholder=\"No licenses applied\"\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"form-group\">\n            <div className=\"d-flex justify-content-between\">\n              <h3>Applied Pet License</h3>\n            </div>\n            <table className=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Pet Name</th>\n                  <th scope=\"col\">Weight (in grams)</th>\n                  <th scope=\"col\">Gender</th>\n                  <th scope=\"col\">Pet Type</th>\n                  <th scope=\"col\">License Cost</th>\n                  <th scope=\"col\">Age (in months)</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {licenses.map((t, i) => (\n                  <tr key={t.id}>\n                    <th scope=\"row\">{i + 1}</th>\n                    <td>\n                      {t.animal.petName}\n                      &nbsp;\n                      <FontAwesomeIcon\n                        icon={faInfoCircle}\n                        title={\"Pet ID: \" + t.animal.id}\n                      />\n                    </td>\n                    <td>{t.animal.weight}</td>\n                    <td>{t.animal.gender}</td>\n                    <td className=\"text-capitalize\">\n                      {t.animal.petCategory.name}\n                    </td>\n                    <td className=\"text-capitalize\">{t.amount}</td>\n                    <td>{getMonths(t.animal.dob)}</td>\n                    <td>\n                      <button\n                        className=\"bg-primary text-white btn\"\n                        onClick={() => {\n                          setMode(\"EDIT\");\n                          setPetId(t.animal.id);\n                          setPetName(t.animal.petName);\n                          setLicenseId(t.id);\n                        }}\n                        data-toggle=\"modal\"\n                        data-target=\"#petModal\"\n                      >\n                        <FontAwesomeIcon icon={faCheckCircle} />\n                        &nbsp; Approve\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          <Modal\n            title={mode === \"EDIT\" && \"License Approval\"}\n            submitText={mode === \"EDIT\" && \"Approve\"}\n            doSubmit={doApproveLicense}\n          >\n            {mode === \"EDIT\" && (\n              <Fragment>\n                <div className=\"form-group\">\n                  <label className=\"text-secondary\">Pet #</label>\n                  <input\n                    type=\"text\"\n                    disabled\n                    className=\"form-control\"\n                    value={petId}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"text-secondary\">Pet Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={petName}\n                    disabled\n                  />\n                </div>\n              </Fragment>\n            )}\n          </Modal>\n        </div>\n      </DataList>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(MyPet);\n","import React, { Fragment } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\n/* TS Import */\nimport {\n  URL_PET_ADMIN,\n  URL_PET_ADMIN_CLINC,\n  URL_PET_ADMIN_PET_TYPES,\n  URL_PET_ADMIN_STAFF,\n  URL_PET_ADMIN_PETS,\n  URL_PET_ADMIN_MEDICINE,\n  URL_PET_ADMIN_VACCINE,\n  URL_PET_ADMIN_GROOM,\n  URL_PET_ADMIN_LICENSE,\n} from \"../../config/UrlRoute\";\n\n/* COMPONENT Import */\nimport { RootState } from \"../../store/reducers\";\nimport { toggleSidebar } from \"../../store/actions\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { joinArrayToString } from \"../../utils/array.utils\";\nimport PetCategory from \"./petcategory/PetCategory\";\nimport PetGrooming from \"./petgrooming/PetGrooming\";\nimport PetVaccine from \"./petvaccine/PetVaccine\";\nimport PetMedicine from \"./petmedicine/PetMedicine\";\nimport PetClinic from \"./petclinic/PetClinic\";\nimport PetAdopt from \"./petadopt/PetAdopt\";\nimport AdminHeader from \"./header/AdminHeader\";\nimport PetStaff from \"./petstaff/PetStaff\";\n\nimport Error from \"../../hoc-components/error/Error\";\nimport PetLicense from \"./petlicense/PetLicense\";\n\nconst mapStateToProps = (state: RootState) => ({\n  showSidebar: state.sidebar,\n});\n\nconst connector = connect(mapStateToProps, {\n  toggleSidebar,\n});\n\ntype Props = ConnectedProps<typeof connector>;\n\nconst PetAdmin: React.FC<Props> = (props) => (\n  <Fragment>\n    <div className={\"p-0 col-md-2\"}>\n      <AdminHeader />\n    </div>\n    <div\n      className={joinArrayToString([\n        \"p-0 overflow-hidden px-0\",\n        props.showSidebar ? \"col-md-9\" : \"col-md-8\",\n      ])}\n    >\n      <Switch>\n        <Redirect path={URL_PET_ADMIN} to={URL_PET_ADMIN_PETS} exact />\n        <Route path={URL_PET_ADMIN_CLINC}>\n          <PetClinic />\n        </Route>\n        <Route path={URL_PET_ADMIN_STAFF}>\n          <PetStaff />\n        </Route>\n        <Route path={URL_PET_ADMIN_PET_TYPES}>\n          <PetCategory />\n        </Route>\n        <Route path={URL_PET_ADMIN_PETS}>\n          <PetAdopt />\n        </Route>\n        <Route path={URL_PET_ADMIN_MEDICINE}>\n          <PetMedicine />\n        </Route>\n        <Route path={URL_PET_ADMIN_VACCINE}>\n          <PetVaccine />\n        </Route>\n        <Route path={URL_PET_ADMIN_GROOM}>\n          <PetGrooming />\n        </Route>\n        <Route path={URL_PET_ADMIN_LICENSE}>\n          <PetLicense />\n        </Route>\n        <Route path=\"**\">\n          <Error />\n        </Route>\n      </Switch>\n    </div>\n  </Fragment>\n);\n\nexport default connector(PetAdmin);\n","import React from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { FontAwesomeIcon as FAIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSignOutAlt,\n  faLock,\n  faUser,\n  faUserCog,\n  faCalendarCheck,\n  faPaw,\n  faHome,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n/* JS Import */\nimport { deleteAuthToken } from \"../../../store/actions\";\nimport {\n  URL_PET_PROFILE,\n  URL_PET_PASSWORD,\n  URL_PET_ADMIN,\n  URL_PET_STAFF,\n  URL_PET_USERS,\n  URL_PET_LANDING,\n} from \"../../../config/UrlRoute\";\nimport { RootState } from \"../../../store/reducers\";\nimport { joinArrayToString } from \"../../../utils/array.utils\";\n\n/* CSS Import */\nimport \"./Header.css\";\nimport { Auth } from \"../../../services/auth.services\";\n\nconst mapStateToProps = (state: RootState) => ({\n  sidebar: state.sidebar,\n  auth: state.auth,\n});\n\nconst connector = connect(mapStateToProps, { deleteAuthToken });\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = PropsFromRedux & {\n  toggleSidebar: (toggle: boolean) => void;\n};\n\nconst Header: React.FC<Props> = (props) => {\n  const history = useHistory();\n\n  const doLogout = async () => {\n    await Auth.signOut();\n    props.deleteAuthToken();\n    history.push(URL_PET_LANDING);\n  };\n\n  return (\n    <div\n      className=\"d-flex flex-column h-100 p-2\"\n      style={{\n        backgroundColor: \"var(--dark-primary)\",\n      }}\n    >\n      <div className=\"header-navigation\">\n        <img\n          src={\"./assets/logo.svg\"}\n          alt=\"logo\"\n          style={{\n            width: !props.sidebar ? \"100px\" : \"auto\",\n            background: \"white\",\n            borderRadius: \"5px\",\n          }}\n          className=\"img-fluid my-4 mx-3 header-logo cursor-pointer\"\n          onClick={() => props.toggleSidebar(!props.sidebar)}\n        />\n        <div className=\"list-group\">\n          {props.auth.role === \"ROLE_ADMIN\" && (\n            <NavLink\n              to={URL_PET_ADMIN}\n              className={joinArrayToString([\n                \"list-group-item list-group-item-action\",\n                props.sidebar ? \"text-center\" : \"\",\n              ])}\n              activeClassName=\"active\"\n            >\n              <span\n                className={joinArrayToString([\n                  \"badge\",\n                  props.sidebar ? \"\" : \"mr-3\",\n                ])}\n              >\n                <FAIcon icon={faUserCog} size={props.sidebar ? \"2x\" : \"1x\"} />\n              </span>\n              {!props.sidebar && \"Manage\"}\n            </NavLink>\n          )}\n          {props.auth &&\n            (props.auth.role === \"ROLE_VETERINARIAN\" ||\n              props.auth.role === \"ROLE_GROOMING\") && (\n              <NavLink\n                to={URL_PET_STAFF}\n                className={joinArrayToString([\n                  \"list-group-item list-group-item-action\",\n                  props.sidebar ? \"text-center\" : \"\",\n                ])}\n                activeClassName=\"active\"\n              >\n                <span\n                  className={joinArrayToString([\n                    \"badge\",\n                    props.sidebar ? \"\" : \"mr-3\",\n                  ])}\n                >\n                  <FAIcon\n                    icon={faCalendarCheck}\n                    size={props.sidebar ? \"2x\" : \"1x\"}\n                  />\n                </span>\n                {!props.sidebar && \"Appointment\"}\n              </NavLink>\n            )}\n          {props.auth && props.auth.role === \"ROLE_CLIENT\" && (\n            <NavLink\n              to={URL_PET_USERS}\n              className={joinArrayToString([\n                \"list-group-item list-group-item-action\",\n                props.sidebar ? \"text-center\" : \"\",\n              ])}\n              activeClassName=\"active\"\n            >\n              <span\n                className={joinArrayToString([\n                  \"badge\",\n                  props.sidebar ? \"\" : \"mr-3\",\n                ])}\n              >\n                <FAIcon icon={faPaw} size={props.sidebar ? \"2x\" : \"1x\"} />\n              </span>\n              {!props.sidebar && \"My Pets\"}\n            </NavLink>\n          )}\n          <NavLink\n            to={URL_PET_PROFILE}\n            className={joinArrayToString([\n              \"list-group-item list-group-item-action\",\n              props.sidebar ? \"text-center\" : \"\",\n            ])}\n            activeClassName=\"active\"\n          >\n            <span\n              className={joinArrayToString([\n                \"badge\",\n                props.sidebar ? \"\" : \"mr-3\",\n              ])}\n            >\n              <FAIcon icon={faUser} size={props.sidebar ? \"2x\" : \"1x\"} />\n            </span>\n            {!props.sidebar && \"Profile\"}\n          </NavLink>\n          <NavLink\n            to={URL_PET_PASSWORD}\n            className={joinArrayToString([\n              \"list-group-item list-group-item-action\",\n              props.sidebar ? \"text-center\" : \"\",\n            ])}\n            activeClassName=\"active\"\n          >\n            <span\n              className={joinArrayToString([\n                \"badge\",\n                props.sidebar ? \"\" : \"mr-3\",\n              ])}\n            >\n              <FAIcon icon={faLock} size={props.sidebar ? \"2x\" : \"1x\"} />\n            </span>\n            {!props.sidebar && \"Password\"}\n          </NavLink>\n        </div>\n      </div>\n      <div\n        style={{\n          flexGrow: 1,\n        }}\n      >\n        <button\n          type=\"button\"\n          onClick={() => {\n            history.push(URL_PET_LANDING);\n          }}\n          className={joinArrayToString([\n            \"list-group-item list-group-item-action\",\n            props.sidebar ? \"text-center\" : \"\",\n          ])}\n        >\n          <span\n            className={joinArrayToString([\n              \"badge\",\n              props.sidebar ? \"\" : \"mr-3\",\n            ])}\n          >\n            <FAIcon icon={faHome} size={props.sidebar ? \"2x\" : \"1x\"} />\n          </span>\n          {!props.sidebar && \"Home\"}\n        </button>\n        <button\n          type=\"button\"\n          onClick={doLogout}\n          className={joinArrayToString([\n            \"list-group-item list-group-item-action\",\n            props.sidebar ? \"text-center\" : \"\",\n          ])}\n        >\n          <span\n            className={joinArrayToString([\n              \"badge\",\n              props.sidebar ? \"\" : \"mr-3\",\n            ])}\n          >\n            <FAIcon icon={faSignOutAlt} size={props.sidebar ? \"2x\" : \"1x\"} />\n          </span>\n          {!props.sidebar && \"Logout\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default connector(Header);\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* TS Import */\nimport { Auth } from \"../../../services/auth.services\";\n\n/* CSS Import */\nimport \"./UserProfile.css\";\n\nconst UserProfile: React.FC = () => {\n  const [firstname, setFirstname] = useState<string>(\"\");\n  const [lastname, setLastname] = useState<string>(\"\");\n  const [username, setUsername] = useState<string>(\"\");\n  const [income, setIncome] = useState<number>(0);\n  const [address, setAddress] = useState<string>(\"\");\n  const [dob, setDob] = useState<string>(\"\");\n  const [gender, setGender] = useState<string>(\"MALE\");\n  const [contact, setContact] = useState<string>(\"\");\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n\n  useEffect(() => {\n    async function getUserDetails() {\n      try {\n        const userDetails = await Auth.getAuthUser();\n        setFirstname(userDetails.firstname);\n        setLastname(userDetails.lastname || \"\");\n        setUsername(userDetails.username);\n        setDob((userDetails.dob || \"\").substr(0, 10));\n        setGender(userDetails.gender || \"MALE\");\n        setIncome(userDetails.annualIncome || \"\");\n        setContact(userDetails.contact || \"\");\n        setAddress(userDetails.address || \"\");\n        setIsVerifying(false);\n      } catch (err) {\n        setIsVerifying(false);\n      }\n    }\n\n    if (username.length === 0) {\n      getUserDetails();\n    }\n  });\n\n  useEffect(() => {\n    setUsername(firstname + \" \" + lastname);\n  }, [firstname, lastname]);\n\n  const doUpdateUser = async () => {\n    try {\n      setIsVerifying(true);\n      const responseCode = await Auth.updateUser(\n        firstname,\n        lastname,\n        dob,\n        income,\n        address,\n        contact,\n        gender\n      );\n      responseCode === 200 && alert(\"User updated successfully\");\n      setIsVerifying(false);\n    } catch (err: any) {\n      setIsVerifying(false);\n    }\n  };\n\n  const doUpdateFields = (\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    updateFn: React.Dispatch<React.SetStateAction<string>>\n  ) => {\n    updateFn(ev.target.value);\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <div className=\"container-fluid d-flex flex-row row h-100 m-0 p-0\">\n        <div className=\"col-md-12 d-flex flex-column p-0\">\n          <div\n            className=\"d-flex flex-column justify-content-center align-items-center\"\n            style={{ flexGrow: 14 }}\n          >\n            <div className=\"user-form\">\n              <h6 className=\"font-weight-bold mb-3\">Update Details</h6>\n              <div className=\"row\">\n                <div className=\"form-group col\">\n                  <label className=\"text-secondary\">Firstname</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={firstname}\n                    onChange={(ev) => doUpdateFields(ev, setFirstname)}\n                  />\n                </div>\n                <div className=\"form-group col\">\n                  <label className=\"text-secondary\">Lastname</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={lastname}\n                    onChange={(ev) => doUpdateFields(ev, setLastname)}\n                  />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Username</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={username}\n                  disabled\n                />\n              </div>\n              <div className=\"row\">\n                <div className=\"form-group col\">\n                  <label className=\"text-secondary\">Date of Birth</label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    value={dob}\n                    onChange={(ev) => doUpdateFields(ev, setDob)}\n                  />\n                </div>\n                <div className=\"form-group col\">\n                  <label className=\"text-secondary\">Annual Income</label>\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    value={income}\n                    onChange={(ev) => setIncome(ev.target.valueAsNumber)}\n                  />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Gender</label>\n                <div className=\"form-check\">\n                  <input\n                    type=\"radio\"\n                    className=\"form-check-input\"\n                    name=\"gender\"\n                    value={\"MALE\"}\n                    onChange={(ev) => doUpdateFields(ev, setGender)}\n                    checked={gender === \"MALE\"}\n                    required\n                  />\n                  <label className=\"text-secondary form-check-label\">M</label>\n                </div>\n                <div className=\"form-check\">\n                  <input\n                    type=\"radio\"\n                    className=\"form-check-input\"\n                    name=\"gender\"\n                    value={\"FEMALE\"}\n                    checked={gender === \"FEMALE\"}\n                    onChange={(ev) => doUpdateFields(ev, setGender)}\n                    required\n                  />\n                  <label className=\"text-secondary form-check-label\">F</label>\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Contact</label>\n                <input\n                  type=\"tel\"\n                  className=\"form-control\"\n                  value={contact}\n                  onChange={(ev) => doUpdateFields(ev, setContact)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Address</label>\n                <textarea\n                  className=\"form-control\"\n                  value={address}\n                  rows={3}\n                  onChange={(ev) => doUpdateFields(ev, setAddress)}\n                ></textarea>\n              </div>\n              <div className=\"form-group\">\n                <button\n                  className=\"btn bg-primary form-control mt-4 mb-2 text-white login-button\"\n                  onClick={doUpdateUser}\n                >\n                  Update my info\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UserProfile;\n","import React, { useState, Fragment } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* TS Import */\nimport { Auth } from \"../../../services/auth.services\";\n\n/* CSS Import */\nimport \"./Password.css\";\n\nconst Password: React.FC = () => {\n  const [oldP, setOldP] = useState<string>(\"\");\n  const [newP, setNewP] = useState<string>(\"\");\n  const [confP, setConfP] = useState<string>(\"\");\n  const [isVerifying, setIsVerifying] = useState<boolean>(false);\n\n  const doUpdatePwd = async () => {\n    if (oldP && newP && confP && newP === confP) {\n      try {\n        setIsVerifying(true);\n        const responseCode = await Auth.updatePassword(oldP, newP, confP);\n        responseCode === 200 && alert(\"Password updated successfully\");\n        setIsVerifying(false)\n      } catch (err: any) {\n        const message = err?.message;\n        setIsVerifying(false);\n        setConfP(\"\");\n        setNewP(\"\");\n        setOldP(\"\");\n        if (message) {\n          alert(message);\n        }\n      }\n    }\n  };\n\n  const doUpdateFields = (\n    ev: React.ChangeEvent<HTMLInputElement>,\n    updateFn: React.Dispatch<React.SetStateAction<string>>\n  ) => {\n    updateFn(ev.target.value);\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <div className=\"container-fluid d-flex flex-row row h-100 m-0 p-0\">\n        <div className=\"col-md-12 d-flex flex-column p-0\">\n          <div\n            className=\"d-flex flex-column justify-content-center align-items-center\"\n            style={{ flexGrow: 14 }}\n          >\n            <div className=\"login-form\">\n              <h6 className=\"font-weight-bold mb-3\">Update Password</h6>\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Old Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  value={oldP}\n                  onChange={(ev) => doUpdateFields(ev, setOldP)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">New Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  value={newP}\n                  onChange={(ev) => doUpdateFields(ev, setNewP)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Confirm Password</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={confP}\n                  onChange={(ev) => doUpdateFields(ev, setConfP)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <button\n                  className=\"btn bg-primary form-control mt-4 mb-2 text-white login-button\"\n                  onClick={doUpdatePwd}\n                >\n                  Update Password\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Password;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon as FAIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendarCheck,\n  faDog,\n  faIdBadge,\n  faPaw,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n/* JS Import */\nimport {\n  URL_PET_USERS_ADOPT,\n  URL_PET_USERS_APPT,\n  URL_PET_USERS_LICENSE,\n  URL_PET_USERS_PETS,\n} from \"../../../config/UrlRoute\";\n\n/* CSS Import */\nimport \"./ClientHeader.css\";\n\nconst ClientHeader: React.FC = () => {\n  return (\n    <div\n      className=\"d-flex flex-column h-100 p-2\"\n      style={{\n        backgroundColor: \"var(--dark-primary-transparent)\",\n      }}\n    >\n      <div className=\"header-navigation\">\n        <div className=\"list-group\">\n          <NavLink\n            to={URL_PET_USERS_PETS}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faPaw} size=\"1x\" />\n            </span>\n            My Pets\n          </NavLink>\n          <NavLink\n            to={URL_PET_USERS_ADOPT}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faDog} size=\"1x\" />\n            </span>\n            Adopt Pets\n          </NavLink>\n          <NavLink\n            to={URL_PET_USERS_LICENSE}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faIdBadge} size=\"1x\" />\n            </span>\n            License\n          </NavLink>\n          <NavLink\n            to={URL_PET_USERS_APPT}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faCalendarCheck} size=\"1x\" />\n            </span>\n            Appointments\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientHeader;\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./PetAdopt.css\";\nimport { adoptNewPet, getUnadoptedPets } from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\nimport { faDog } from \"@fortawesome/free-solid-svg-icons\";\n\nconst PetAdopt: React.FC = () => {\n  const [pets, setPets] = useState<Array<any>>([]);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n\n  useEffect(() => {\n    async function getUnadoptedPet() {\n      try {\n        const cli: any = await getUnadoptedPets();\n        setPets(cli);\n        setIsVerifying(false);\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (pets.length === 0 && !isFetched) {\n      getUnadoptedPet();\n    }\n  });\n\n  const getMonths = (dob: string) => {\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\n    diff /= 60 * 60 * 24 * 7 * 4;\n    return Math.abs(Math.round(diff));\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <DataList\n        dataLength={pets.length}\n        icon={faDog}\n        placeholder=\"No pets available to adopt\"\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"form-group\">\n            <div className=\"d-flex justify-content-between\">\n              <h3>Unadopted Pets</h3>\n            </div>\n            <table className=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Pet Name</th>\n                  <th scope=\"col\">Weight (in grams)</th>\n                  <th scope=\"col\">Gender</th>\n                  <th scope=\"col\">Pet Type</th>\n                  <th scope=\"col\">Age (in months)</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {pets.map((t, i) => (\n                  <tr key={t.id}>\n                    <th scope=\"row\">{i + 1}</th>\n                    <td>{t.petName}</td>\n                    <td>{t.weight}</td>\n                    <td>{t.gender}</td>\n                    <td className=\"text-capitalize\">{t.petCategory.name}</td>\n                    <td>{getMonths(t.dob)}</td>\n                    <td>\n                      <button\n                        className=\"bg-primary text-white btn\"\n                        onClick={async () => {\n                          await adoptNewPet(t.id);\n                          setIsFetched(false);\n                          setPets([]);\n                        }}\n                      >\n                        Adopt\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </DataList>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(PetAdopt);\n","export const getReportHtml = (appt: any) => {\n  let medicine = \"\";\n  let medicineCost = 0;\n  let vaccine = \"\";\n  let vaccineCost = 0;\n  let grooming = \"\";\n  let groomingCost = 0;\n  let pres: any = JSON.parse(appt.appointmentDetails.consultDetails);\n  let grooms: any = JSON.parse(appt.appointmentDetails.groomDetails);\n  let feedback = \"\";\n  let medicineEl =\n    pres !== null\n      ? pres.medicine\n          .filter((g) => Object.keys(g).length > 0)\n          .map((m: any) => {\n            medicineCost += m.cost;\n            return `<li class=\"list-group-item d-flex justify-content-between lh-sm\">\n          <div>\n            <h6 class=\"my-0 text-capitalize\">${m.medicine} (${m.count})</h6>\n            <small class=\"text-body-secondary\">\n              ${m.mrng} &nbsp; ${m.noon} &nbsp; ${m.evng} &nbsp; ${m.ngt}\n            </small>\n          </div>\n          <span class=\"text-body-secondary\">${m.cost}</span>\n        </li>`;\n          })\n          .join(\"\")\n      : \"\";\n  medicine = `<div>\n      <h4 class=\"d-flex justify-content-between align-items-center mb-3\">\n        <span class=\"text-dark\">Medicine</span>\n      </h4>\n      <ul class=\"list-group mb-3\">\n        ${medicineEl}\n        <li class=\"list-group-item d-flex justify-content-between\">\n          <span>Total</span>\n          <strong>${medicineCost}</strong>\n        </li>\n      </ul>\n    </div>`;\n\n  let vaccineEl =\n    pres !== null\n      ? pres.vaccine\n          .filter((g) => Object.keys(g).length > 0)\n          .map((v: any) => {\n            vaccineCost += v.cost;\n            return `<li class=\"list-group-item d-flex justify-content-between lh-sm\">\n          <div>\n            <h6 class=\"my-0 text-capitalize\">${v.name}</h6>\n          </div>\n          <span class=\"text-body-secondary\">${v.cost}</span>\n        </li>`;\n          })\n          .join(\"\")\n      : \"\";\n  vaccine = `<div>\n      <h4 class=\"d-flex justify-content-between align-items-center mb-3\">\n        <span class=\"text-dark\">Vaccine</span>\n      </h4>\n      <ul class=\"list-group mb-3\">\n        ${vaccineEl}\n        <li class=\"list-group-item d-flex justify-content-between\">\n          <span>Total</span>\n          <strong>${vaccineCost}</strong>\n        </li>\n      </ul>\n    </div>`;\n\n  const getMonths = (dob: string) => {\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\n    diff /= 60 * 60 * 24 * 7 * 4;\n    let months = Math.abs(Math.round(diff));\n    if (months >= 12) {\n      return `${Math.abs(Math.round(months/12))} Years`;\n    }\n    return `${months} Months`;\n  };\n\n  let groomingEl =\n    grooms != null\n      ? grooms.grooming\n          .filter((g) => Object.keys(g).length > 0)\n          .map((g: any) => {\n            groomingCost += g.cost;\n            return `<li class=\"list-group-item d-flex justify-content-between lh-sm\">\n          <div>\n            <h6 class=\"my-0 text-capitalize\">${g.name}</h6>\n          </div>\n          <span class=\"text-body-secondary\">${g.cost}</span>\n        </li>`;\n          })\n          .join(\"\")\n      : \"\";\n  grooming = `<div>\n      <h4 class=\"d-flex justify-content-between align-items-center mb-3\">\n        <span class=\"text-dark\">Grooming</span>\n      </h4>\n      <ul class=\"list-group mb-3\">\n        ${groomingEl}\n        <li class=\"list-group-item d-flex justify-content-between\">\n          <span>Total</span>\n          <strong>${groomingCost}</strong>\n        </li>\n      </ul>\n    </div>`;\n\n  if (appt.appointmentDetails.feedback != null) {\n    feedback = `<hr />\n    <div>\n      <h4 class=\"mb-3\">Feedback - Rating ${appt.appointmentDetails.feedback.rate}/5</h4>\n      <div class=\"form-floating mb-3\">\n        <p class=\"lead\">${appt.appointmentDetails.feedback.title}</p>\n        <p>${appt.appointmentDetails.feedback.description}</p>\n      </div>\n    </div>`;\n  }\n  return `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Report</title>\n    <link\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\n      rel=\"stylesheet\"\n      integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\n      crossorigin=\"anonymous\"\n    />\n  </head>\n  <body class=\"bg-body-tertiary\">\n    <div class=\"container\">\n      <main>\n        <div class=\"py-5 text-center\">\n          <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!-- Generator: Gravit.io --><svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            style=\"isolation: isolate\"\n            viewBox=\"0 0 500 500\"\n            width=\"72pt\"\n            height=\"72pt\"\n          >\n            <defs>\n              <clipPath id=\"_clipPath_ssBScvuVJJEsMy1wdSQvwRtlyZTvsNL3\">\n                <rect width=\"500\" height=\"500\" />\n              </clipPath>\n            </defs>\n            <g clip-path=\"url(#_clipPath_ssBScvuVJJEsMy1wdSQvwRtlyZTvsNL3)\">\n              <g>\n                <circle\n                  vector-effect=\"non-scaling-stroke\"\n                  cx=\"250\"\n                  cy=\"250\"\n                  r=\"158.25\"\n                  fill=\"rgb(220,229,222)\"\n                />\n                <g>\n                  <path\n                    d=\" M 434.546 382.995 C 434.154 381.261 433.915 379.097 432.921 378.499 C 431.927 377.9 430.062 377.715 429.359 376.981 C 428.656 376.247 427.555 374.063 427.3 372.62 C 427.045 371.175 426.343 370.441 425.681 367.837 C 425.286 366.277 425.28 364.133 425.087 362.31 C 424.957 361.086 424.798 360.195 424.582 359.182 L 425.092 359.961 C 425.092 359.961 425.878 359.115 425.921 357.198 C 425.963 355.323 425.855 353.744 425.897 351.876 C 425.939 350.007 426.291 347.138 426.033 345.838 L 426.628 347.099 C 426.628 347.099 427.575 345.49 427.471 343.762 C 427.366 342.034 427.819 336.817 427.576 334.799 C 427.334 332.78 426.765 332.479 427.376 330.911 C 427.986 329.342 429.044 327.065 429.247 324.48 C 429.449 321.896 429.394 311.539 428.315 308.35 C 427.235 305.161 425.473 300.375 425.225 298.644 C 424.976 296.912 424.914 293.315 423.824 290.558 C 422.736 287.8 422.484 286.213 420.242 283.573 C 418 280.934 417.604 279.343 416.336 278.164 C 415.068 276.984 413.839 274.079 412.741 271.754 C 411.642 269.428 410.832 267.108 410.005 265.507 C 409.177 263.907 409.641 262.479 409.964 260.904 C 410.287 259.329 411.878 258.933 411.878 258.933 L 410.872 258.911 C 410.872 258.911 411.045 257.621 412.502 256.79 C 413.959 255.96 416.697 255.734 417.693 256.187 C 418.69 256.642 420.111 257.393 420.111 257.393 L 419.855 255.949 C 419.855 255.949 420.996 256.59 422.044 257.564 C 422.43 257.921 422.768 258.652 423.423 259.386 C 424.077 260.12 425.075 260.525 425.075 260.525 L 424.992 259.996 C 424.992 259.996 425.747 260.697 426.511 260.927 C 427.039 261.085 427.621 261.241 428.078 261.312 C 430.228 261.648 431.009 261.042 431.009 261.042 L 430.404 260.214 C 430.404 260.214 431.64 260.672 431.919 261.11 C 431.919 261.11 432.561 260.262 432.462 258.246 C 432.364 256.23 431.955 255.214 431.119 254.044 L 431.758 254.418 C 431.758 254.418 430.195 250.356 427.926 248.939 C 425.656 247.52 423.944 246.907 423.944 246.907 C 423.944 246.907 425.107 246.358 425.462 246.582 C 425.462 246.582 421.997 243.987 417.825 243.964 C 413.655 243.942 411.343 244.394 411.343 244.394 L 411.935 243.616 C 411.935 243.616 409.355 243.199 405.215 245.048 C 401.074 246.897 399.341 250.381 399.341 250.381 L 399.233 248.796 C 399.233 248.796 397.35 249.4 396.373 254.485 C 395.395 259.569 395.14 264.525 395.887 266.484 C 395.887 266.484 394.977 265.385 394.841 265.023 C 394.841 265.023 394.202 267.885 395.012 270.205 C 395.823 272.524 398.2 275.527 398.2 275.527 C 398.2 275.527 395.409 274.913 393.212 274.576 C 391.014 274.239 381.813 274.032 378.452 274.244 C 375.091 274.455 371.856 273.327 368.495 273.54 C 365.134 273.752 361.372 274.722 361.372 274.722 C 361.372 274.722 357.492 272.43 355.002 272.278 C 352.513 272.126 349.53 272.538 349.53 272.538 C 349.53 272.538 347.84 270.966 345.454 270.433 C 343.07 269.9 340.398 269.265 340.398 269.265 C 340.398 269.265 341.844 268.913 342.514 269.025 C 342.514 269.025 341.474 268.331 339.187 267.704 C 336.9 267.078 336.163 265.718 334.917 265.69 C 333.671 265.662 331.507 263.792 331.507 263.792 C 331.507 263.792 327.905 261.984 326.571 261.571 C 325.238 261.157 324.214 259.792 322.983 259.093 C 321.752 258.394 313.193 251.01 309.914 251.799 C 306.637 252.588 306.948 255.76 307.071 258.83 C 307.164 261.146 307.487 265.935 307.487 265.935 C 307.487 265.935 304.555 268.363 303.179 269.866 C 301.803 271.369 300.908 272.788 300.008 274.397 C 299.109 276.007 297.82 277.896 297.391 279.899 C 296.963 281.904 296.616 284.484 296.616 284.484 C 296.616 284.484 288.44 285.643 285.678 289.032 C 282.917 292.422 287.286 294.246 289.361 295.827 C 291.435 297.408 296.176 299.816 296.176 299.816 C 296.176 299.816 297.418 304.255 298.333 306.193 C 298.946 307.492 300.666 309.244 302.011 310.842 C 301.741 311.05 301.468 311.266 301.194 311.501 C 300.839 311.83 300.44 312.134 300.094 312.51 C 299.743 312.871 299.36 313.245 299.039 313.637 C 298.374 314.45 297.799 315.296 297.285 316.112 C 297.256 316.159 297.229 316.204 297.201 316.25 C 296.982 316.324 296.767 316.394 296.565 316.454 C 295.909 316.641 295.358 316.8 294.966 316.89 C 294.574 316.981 294.35 317.034 294.35 317.034 C 294.35 317.034 294.582 317.042 294.985 317.012 C 295.387 316.978 295.967 316.934 296.648 316.793 C 296.729 316.776 296.817 316.757 296.902 316.74 C 296.553 317.329 296.246 317.89 295.971 318.388 C 295.6 319.062 295.332 319.645 295.135 320.046 C 294.942 320.451 294.843 320.688 294.843 320.688 C 294.843 320.688 295.405 319.834 296.248 318.554 C 296.626 317.965 297.085 317.298 297.573 316.587 C 297.631 316.572 297.687 316.561 297.746 316.545 C 298.135 316.449 298.535 316.312 298.947 316.162 C 299.36 316.015 299.773 315.825 300.186 315.617 C 300.604 315.408 301.016 315.151 301.383 314.89 C 301.777 314.608 302.131 314.317 302.475 314.006 C 302.812 313.694 303.136 313.379 303.431 313.058 C 303.461 313.025 303.488 312.993 303.517 312.96 C 303.528 312.98 303.541 313.002 303.551 313.022 C 303.721 313.383 303.999 313.705 304.351 313.996 C 304.307 314.097 304.262 314.196 304.215 314.298 C 304.064 314.692 303.904 315.101 303.778 315.53 C 303.729 315.751 303.678 315.974 303.629 316.197 L 303.592 316.365 C 303.585 316.4 303.58 316.406 303.572 316.465 L 303.564 316.547 L 303.536 316.878 C 303.49 317.313 303.498 317.771 303.509 318.223 C 303.509 318.676 303.575 319.098 303.603 319.518 C 303.695 320.348 303.808 321.115 303.903 321.77 C 303.939 322.097 303.998 322.398 304.02 322.664 C 304.042 322.93 304.073 323.164 304.078 323.356 C 304.068 323.736 304.07 323.964 304.07 323.964 C 304.07 323.964 304.118 323.75 304.19 323.361 C 304.214 323.167 304.218 322.93 304.235 322.656 C 304.253 322.383 304.238 322.078 304.232 321.742 C 304.211 321.074 304.159 320.3 304.108 319.477 C 304.095 319.07 304.063 318.637 304.065 318.218 C 304.06 317.798 304.057 317.371 304.109 316.925 L 304.133 316.594 L 304.139 316.511 L 304.153 316.448 L 304.185 316.293 C 304.229 316.085 304.272 315.878 304.314 315.674 C 304.431 315.268 304.554 314.866 304.686 314.481 C 304.711 314.419 304.733 314.358 304.757 314.296 C 305.11 314.531 305.515 314.742 305.946 314.935 C 305.934 314.995 305.923 315.054 305.911 315.115 C 305.854 315.521 305.796 315.94 305.736 316.366 C 305.708 316.796 305.679 317.234 305.651 317.671 C 305.66 318.106 305.669 318.542 305.677 318.97 C 305.708 319.402 305.756 319.827 305.795 320.237 C 305.905 321.048 306.047 321.797 306.2 322.431 C 306.511 323.7 306.838 324.507 306.838 324.507 C 306.838 324.507 306.803 324.293 306.743 323.919 C 306.678 323.546 306.614 323.01 306.525 322.372 C 306.487 322.053 306.446 321.705 306.403 321.339 C 306.37 320.973 306.335 320.587 306.298 320.187 C 306.276 319.79 306.263 319.379 306.232 318.964 C 306.23 318.543 306.228 318.115 306.224 317.685 C 306.246 317.261 306.268 316.836 306.289 316.418 C 306.331 316 306.371 315.588 306.411 315.19 C 306.413 315.171 306.416 315.155 306.418 315.137 C 306.673 315.239 306.933 315.337 307.199 315.428 C 307.314 316.281 307.437 317.188 307.56 318.096 C 307.617 318.556 307.686 319.026 307.782 319.474 C 307.883 319.938 307.999 320.381 308.147 320.799 C 308.291 321.218 308.44 321.62 308.616 321.985 C 308.783 322.354 308.958 322.693 309.127 323.003 C 309.454 323.625 309.8 324.102 310.035 324.435 C 310.275 324.767 310.433 324.938 310.433 324.938 C 310.433 324.938 309.976 324.122 309.434 322.853 C 309.16 322.219 308.893 321.46 308.649 320.642 C 308.532 320.231 308.425 319.803 308.336 319.373 C 308.252 318.924 308.189 318.476 308.121 318.017 C 308.005 317.195 307.868 316.381 307.727 315.602 C 308.811 315.945 309.905 316.211 310.759 316.446 C 313.046 317.072 316.122 316.758 316.122 316.758 C 316.122 316.758 318.472 323.139 320.528 325.486 C 322.585 327.834 324.276 329.406 324.276 329.406 C 324.276 329.406 325.898 334.046 327.954 336.393 C 330.011 338.741 332.242 341.859 333.737 343.618 C 335.231 345.378 337.798 350.614 339.284 352.757 C 340.77 354.9 340.016 354.307 341.294 357.213 C 342.571 360.118 344.205 364.183 344.153 366.482 C 344.101 368.784 344.438 370.9 343.049 372.978 C 341.66 375.056 340.501 375.414 338.554 376.713 C 336.607 378.011 335.27 377.789 335.043 379.319 C 334.817 380.847 334.756 383.53 336.098 383.56 C 337.44 383.59 338.773 384.004 338.773 384.004 C 338.773 384.004 340.477 385.001 342.197 385.232 C 343.918 385.462 345.081 384.914 345.081 384.914 C 345.081 384.914 345.422 386.84 347.709 387.466 C 349.997 388.093 351.738 387.365 351.738 387.365 C 351.738 387.365 352.684 387.961 354.4 388.383 C 356.117 388.808 357.092 388.061 357.092 388.061 C 357.092 388.061 359.379 388.689 360.912 388.723 C 362.445 388.757 363.796 388.404 364.035 386.299 C 364.274 384.194 364.87 383.25 364.87 383.25 C 364.87 383.25 367.554 383.311 369.859 383.171 C 372.163 383.029 373.905 382.303 375.269 381.374 C 376.633 380.446 379.559 378.21 381.481 378.063 C 383.402 377.913 386.517 375.874 387.296 375.318 C 388.076 374.757 390.04 372.693 390.288 370.206 C 390.536 367.719 391.717 366.403 392.129 365.07 C 392.543 363.736 392.203 362.841 392.727 361.99 C 393.249 361.139 393.546 360.715 393.546 360.715 L 393.964 361.299 C 393.964 361.299 394.707 360.238 394.73 359.232 C 394.752 358.226 394.992 357.176 395.155 356.317 C 395.318 355.458 395.63 354.362 395.63 354.362 L 395.8 355.325 C 395.8 355.325 396.995 354.441 397.383 353.155 C 397.771 351.87 398.476 349.32 399.008 348.038 C 399.54 346.755 400.071 345.544 400.442 345.049 C 400.813 344.554 402.985 343.884 402.985 343.884 C 402.985 343.884 403.561 347.061 403.963 348.364 C 404.365 349.668 405.022 352.415 405.722 353.294 L 405.902 351.715 C 405.902 351.715 406.415 354.46 407.393 355.776 C 408.37 357.093 408.913 358.543 409.736 360.287 C 410.56 362.033 412.099 363.937 412.099 363.937 C 412.099 363.937 412.783 365.535 413.181 366.981 C 413.58 368.429 414.257 370.315 414.669 371.186 C 415.081 372.059 416.159 375.246 416.277 376.401 C 416.395 377.553 416.628 380.004 416.628 380.004 C 416.628 380.004 416.128 383.014 416.968 384.037 C 417.809 385.064 420.115 384.829 420.115 384.829 C 420.115 384.829 421.975 385.303 423.694 385.629 C 425.412 385.954 426.438 385.115 426.438 385.115 C 426.438 385.115 427.716 385.862 429.298 385.897 C 430.879 385.932 431.473 385.084 431.473 385.084 C 431.473 385.084 432.754 385.688 433.48 385.416 C 434.211 385.146 434.939 384.73 434.546 382.995 Z  M 303.098 312.727 C 302.789 313.019 302.47 313.32 302.131 313.606 C 301.79 313.886 301.431 314.173 301.075 314.422 C 300.688 314.686 300.314 314.905 299.929 315.112 C 299.54 315.32 299.141 315.497 298.754 315.666 C 298.505 315.77 298.261 315.865 298.02 315.957 C 298.478 315.305 298.958 314.634 299.482 314.009 C 299.805 313.607 300.15 313.264 300.495 312.899 C 300.829 312.534 301.201 312.211 301.537 311.878 C 301.802 311.637 302.051 311.41 302.301 311.184 C 302.689 311.66 303.03 312.118 303.289 312.54 C 303.225 312.602 303.164 312.664 303.098 312.727 Z  M 372.12 370.37 C 369.641 371.897 367.749 372.861 367.749 372.861 C 367.921 371.571 369.574 368.443 369.574 368.443 C 369.574 368.443 370.038 367.015 370.355 365.728 C 370.672 364.441 370.698 363.29 371.03 361.285 C 371.33 359.472 373.756 353.896 373.786 353.867 C 373.786 353.867 374.412 359.732 374.918 361.086 C 375.461 362.536 375.253 365.406 375.354 367.279 C 375.455 369.151 374.598 368.844 372.12 370.37 Z \"\n                    fill=\"rgb(0,29,68)\"\n                  />\n                  <path\n                    d=\" M 308.428 368.566 C 307.99 367.47 307.441 365.168 305.578 363.523 C 303.714 361.878 301.412 361.221 301.412 361.221 C 301.083 360.564 300.097 358.809 298.343 357.713 C 296.589 356.617 293.739 356.945 292.424 355.85 C 291.108 354.753 288.916 348.066 288.258 345.107 C 287.601 342.147 287.382 340.284 287.272 337.324 C 287.163 334.364 285.409 330.308 284.422 328.007 C 283.436 325.705 283.326 323.074 283.326 323.074 L 283.984 323.732 C 283.984 321.759 283.436 318.799 283.107 316.607 C 282.778 314.415 282.449 312.112 282.449 308.605 C 282.449 305.097 282.997 298.629 283.217 296.437 C 283.436 294.245 282.778 293.039 282.449 291.504 C 282.12 289.969 281.791 286.681 281.791 286.681 L 282.449 288.216 C 282.34 286.681 282.011 284.599 282.12 283.174 C 282.23 281.749 282.997 278.131 283.107 274.843 C 283.217 271.555 282.23 268.047 282.559 266.073 C 282.888 264.1 283.655 260.921 283.984 257.413 C 284.313 253.905 284.093 251.164 284.093 251.164 L 284.641 253.028 C 284.641 253.028 284.75 247.876 284.532 245.245 C 284.312 242.614 283.984 238.339 283.764 236.366 C 283.545 234.393 282.449 232.529 281.791 230.228 C 281.133 227.926 281.352 224.966 281.352 224.966 L 281.9 226.391 C 281.9 226.391 282.448 224.637 282.01 222.225 C 281.571 219.813 280.667 215.373 280.42 212.167 C 280.174 208.961 278.2 204.932 278.2 204.932 C 278.2 204.932 280.036 201.287 280.256 198.108 C 280.475 194.929 280.256 194.052 280.914 191.75 C 281.572 189.448 282.12 188.132 283.106 186.05 C 284.092 183.967 284.202 181.117 284.202 181.117 C 284.202 181.117 284.75 182.213 285.188 183.748 C 285.627 185.283 285.736 185.063 285.517 188.462 C 285.298 191.86 286.394 197.779 287.052 198.875 C 287.71 199.972 290.231 201.726 290.67 201.396 C 291.108 201.067 291.766 200.409 291.985 199.094 C 292.204 197.778 291.546 193.284 291.656 192.517 C 291.766 191.75 294.945 189.777 296.041 188.242 C 297.137 186.707 296.37 184.625 295.603 182.432 C 294.836 180.24 294.617 177.389 294.178 174.978 C 293.739 172.567 291.547 168.181 290.341 165.77 C 289.135 163.358 287.272 160.07 286.395 158.644 C 285.518 157.219 285.079 154.478 284.532 152.067 C 283.984 149.655 281.024 147.682 280.147 146.476 C 279.27 145.27 276.858 142.858 275.324 142.201 C 273.789 141.543 272.693 142.31 272.693 142.31 C 271.871 140.447 267.267 136.938 262.991 135.458 C 258.716 133.979 252.797 133.156 252.797 133.156 C 252.797 133.156 247.535 131.841 240.464 133.485 C 233.394 135.13 228.954 139.734 228.954 139.734 C 228.954 139.734 225.665 140.227 223.035 141.049 C 220.404 141.871 216.787 143.844 214.156 147.133 C 211.525 150.422 211.525 151.244 209.881 154.697 C 208.236 158.15 202.81 162.425 201.002 165.056 C 199.193 167.687 198.864 169.495 199.357 172.949 C 199.85 176.402 199.85 177.224 200.015 180.349 C 200.18 183.473 205.77 189.722 208.072 191.694 C 210.374 193.668 211.361 193.668 212.018 196.133 C 212.676 198.6 211.853 201.724 213.498 201.231 C 214.208 201.018 215.8 198.929 216.293 197.285 C 216.504 196.582 217.559 194.966 217.938 193.668 C 218.445 191.932 217.445 185.117 217.445 185.117 C 217.445 185.23 217.938 187.09 218.925 189.064 C 219.911 191.037 220.076 190.543 220.569 192.681 C 221.062 194.819 219.443 196.54 219.089 197.285 C 218.323 198.893 215.827 201.369 215.142 202.054 C 213.663 203.534 211.524 204.685 208.894 208.467 C 206.263 212.249 202.152 215.538 199.357 219.32 C 196.562 223.102 193.931 231.159 193.931 231.159 C 193.931 231.159 188.833 234.941 184.394 239.709 C 179.955 244.478 178.146 250.397 173.213 255.494 C 168.28 260.591 158.414 269.471 155.948 272.759 C 153.481 276.048 146.082 283.118 142.629 286.078 C 139.176 289.038 135.723 293.642 131.612 299.232 C 127.502 304.823 121.746 317.648 121.746 317.648 C 121.746 317.648 117.964 323.897 115.333 328.501 C 112.702 333.105 112.702 341.82 112.373 342.313 C 112.044 342.806 110.728 345.273 109.742 345.108 C 108.756 344.944 102.507 347.41 98.889 348.397 C 95.272 349.383 90.339 349.383 87.707 349.219 C 85.077 349.054 79.321 349.877 76.526 349.712 C 73.73 349.548 70.935 348.232 70.935 348.232 C 70.935 348.232 66.496 347.081 62.549 346.753 C 58.602 346.424 51.367 347.903 51.367 347.903 C 50.38 347.574 45.119 347.739 41.501 349.054 C 40.206 349.525 38.925 349.766 37.665 350.369 C 36.404 350.972 35.527 351.959 35.527 351.959 L 36.13 351.904 C 36.13 351.904 35.47 352.357 34.924 352.78 C 34.378 353.203 34.126 353.656 34.047 353.876 C 33.857 354.407 34.166 354.934 34.595 355.63 C 34.977 356.25 36.055 357.676 36.055 357.676 L 35.417 357.494 C 35.417 357.494 36.283 358.687 36.897 359.083 C 37.499 359.472 38.615 359.831 38.815 360.015 C 40.788 361.824 45.611 362.207 45.611 362.207 C 45.611 362.207 49.064 363.029 51.366 364.509 C 53.668 365.989 57.943 367.634 65.178 367.798 C 72.413 367.962 73.235 367.798 73.235 367.798 L 71.591 368.456 C 71.591 368.456 72.742 369.278 78.168 370.429 C 83.594 371.579 91.322 370.1 96.42 369.443 C 101.517 368.785 109.739 367.634 109.739 367.634 C 109.739 367.634 110.397 368.784 112.863 370.265 C 115.329 371.744 124.373 373.389 124.373 373.389 C 124.373 373.389 123.715 375.363 127.004 377.335 C 130.293 379.308 131.444 380.295 136.212 379.802 C 140.98 379.308 160.219 382.268 168.441 382.268 C 176.663 382.268 190.31 382.433 193.27 382.761 C 196.23 383.09 197.216 384.57 199.354 385.392 C 201.492 386.214 205.273 385.392 205.273 385.392 C 207.575 386.05 208.397 385.556 209.713 385.392 C 211.028 385.228 211.686 383.583 211.686 383.583 C 212.179 383.748 214.317 383.419 215.139 382.926 C 215.961 382.433 215.961 380.295 214.646 378.65 C 213.331 377.007 211.851 377.336 210.7 376.349 C 209.549 375.363 208.233 374.704 205.109 373.718 C 201.985 372.732 198.696 370.21 198.696 370.21 C 199.354 369.991 202.313 368.784 203.958 368.675 C 205.602 368.566 208.014 367.579 209.549 366.373 C 211.084 365.167 211.522 363.961 213.166 361.44 C 214.575 359.28 214.856 357.366 214.909 356.86 C 214.909 356.814 214.913 356.769 214.92 356.726 C 214.92 356.726 214.917 356.775 214.909 356.86 C 214.894 357.522 215.468 358.48 215.468 358.48 C 215.577 357.165 216.784 355.63 218.209 353.328 C 219.634 351.026 221.388 348.176 221.388 348.176 C 221.388 348.176 224.238 354.973 224.677 357.165 C 225.115 359.356 225.335 362.207 225.554 364.948 C 225.773 367.688 227.418 369.333 227.418 369.333 C 227.309 368.784 227.308 367.359 227.308 367.359 C 227.308 367.359 228.953 370.868 230.049 372.731 C 231.145 374.594 233.447 375.909 235.201 376.567 C 236.955 377.225 239.696 379.747 240.902 380.733 C 242.107 381.719 243.094 382.925 245.067 384.46 C 247.041 385.995 246.054 387.42 247.588 388.517 C 249.123 389.613 251.315 389.394 253.507 390.271 C 255.699 391.147 257.453 390.38 260.633 391.147 C 263.812 391.915 265.895 390.709 267.978 390.38 C 270.061 390.052 272.362 389.503 272.362 389.503 C 272.362 389.503 274.555 389.612 276.528 389.942 C 278.501 390.271 281.68 389.285 282.447 388.955 C 283.214 388.627 284.31 388.846 285.078 388.517 C 285.845 388.187 285.845 387.749 285.845 387.749 C 285.845 387.749 287.051 387.749 287.819 387.749 C 288.586 387.749 290.449 386.653 290.449 386.653 C 290.449 386.653 291.874 387.2 292.094 386.762 C 292.313 386.322 290.778 385.227 290.778 385.227 C 290.778 385.227 290.778 384.241 290.34 382.815 C 289.901 381.391 288.586 380.952 287.49 379.198 C 286.394 377.444 284.092 376.018 284.092 376.018 C 284.092 376.018 286.613 375.909 288.257 376.128 C 289.902 376.348 290.998 376.018 291.875 375.689 C 292.752 375.361 292.972 374.703 292.972 374.703 C 292.972 374.703 296.37 375.141 298.015 375.251 C 299.659 375.361 301.851 374.703 303.277 374.265 C 304.702 373.826 306.346 373.608 306.894 373.717 C 307.442 373.826 308.1 374.265 308.319 373.497 C 308.538 372.73 307.771 371.195 307.771 371.195 C 307.771 371.195 309.087 371.414 309.196 370.756 C 309.305 370.101 308.866 369.662 308.428 368.566 Z  M 274.336 372.897 C 271.869 372.239 270.225 371.911 268.252 371.088 C 266.279 370.266 265.128 369.443 263.648 366.484 C 262.168 363.524 260.195 362.702 258.879 360.236 C 257.564 357.769 257.399 355.631 257.07 352.671 C 256.741 349.711 256.412 346.258 255.425 342.97 C 254.438 339.682 253.123 338.037 252.63 334.749 C 252.137 331.46 251.151 324.718 251.151 324.718 C 255.755 322.581 259.044 318.635 259.044 318.635 C 259.044 318.635 259.044 319.786 258.879 321.43 C 258.715 323.075 259.044 324.719 259.044 324.719 C 259.373 323.897 259.702 322.582 259.702 322.582 C 259.702 323.897 260.853 326.693 261.017 328.665 C 261.182 330.638 261.072 332.228 260.578 334.695 C 260.085 337.161 261.071 339.189 261.071 339.189 L 261.674 337.654 C 261.674 337.654 261.729 341.984 262.496 344.779 C 263.264 347.574 263.647 346.753 264.798 347.903 C 265.949 349.054 266.607 349.712 267.594 352.672 C 268.58 355.632 269.403 360.401 270.225 362.867 C 271.047 365.333 271.047 366.155 272.362 368.129 C 273.678 370.102 273.185 369.444 275.651 370.102 C 278.117 370.76 280.584 373.556 280.584 373.556 C 278.94 372.567 276.802 373.555 274.336 372.897 Z \"\n                    fill=\"rgb(0,29,68)\"\n                  />\n                </g>\n              </g>\n            </g>\n          </svg>\n          <h2>Pet Appointment (PAW${appt.id})</h2>\n          <h6>Appointment Time: ${new Date(appt.apptTime).toLocaleString()}</h6>\n          <p class=\"lead\">Pawsomecare</p>\n        </div>\n\n        <div class=\"row g-5\">\n          <div class=\"col-md-7 col-lg-8\">\n            <div class=\"row\">\n              <div class=\"col-lg-6\">\n                <h4 class=\"mb-3\">Pet Details</h4>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext\"\n                    value=\"${appt.pet.petName}\"\n                  />\n                  <label>Name</label>\n                </div>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext\"\n                    value=\"${getMonths(appt.pet.dob)}\"\n                  />\n                  <label>Age</label>\n                </div>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext text-capitalize\"\n                    value=\"${appt.pet.petCategory.name}\"\n                  />\n                  <label>Type</label>\n                </div>\n              </div>\n              <div class=\"col-lg-6\">\n                <h4 class=\"mb-3\">Owner Details</h4>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext\"\n                    value=\"${appt.user.username}\"\n                  />\n                  <label>Owner Name</label>\n                </div>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext\"\n                    value=\"${appt.user.email}\"\n                  />\n                  <label>Email</label>\n                </div>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext\"\n                    value=\"${appt.user.contact ? appt.user.contact : \"-\"}\"\n                  />\n                  <label>Contact</label>\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div>\n              <h4 class=\"mb-3\">Reason for Appointment</h4>\n              <p class=\"lead\">${appt.reason}</p>\n            </div>\n            <hr />\n            <div>\n              <h4 class=\"mb-3\">Clinic & Doctor Details</h4>\n              <div class=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  readonly\n                  class=\"form-control-plaintext\"\n                  value=\"${appt.staffDetails.map((s) => s.username).join(\", \")}\"\n                />\n                <label>Doctor Name</label>\n              </div>\n              <div class=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  readonly\n                  class=\"form-control-plaintext\"\n                  value=\"${[\n                    appt.appointmentDetails.veterinaryStaff != null\n                      ? appt.appointmentDetails.veterinaryStaff.id\n                      : \"\",\n                    appt.appointmentDetails.groomingStaff != null\n                      ? appt.appointmentDetails.groomingStaff.id\n                      : \"\",\n                  ].join(\", \")}\"\n                />\n                <label>Registration No</label>\n              </div>\n              <div class=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  readonly\n                  class=\"form-control-plaintext\"\n                value=\"${[\n                  appt.appointmentDetails.veterinaryStaff != null\n                    ? appt.appointmentDetails.veterinaryStaff.consultFee\n                    : \"\",\n                  appt.appointmentDetails.groomingStaff != null\n                    ? appt.appointmentDetails.groomingStaff.consultFee\n                    : \"\",\n                ].join(\", \")}\"\n                />\n                <label>Doctor Fee</label>\n              </div>\n              <div class=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  readonly\n                  class=\"form-control-plaintext\"\n                  value=\"${appt.clinic.name}\"\n                />\n                <label>Clinic Name</label>\n              </div>\n              <div class=\"form-floating mb-3\">\n                <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext\"\n                    value=\"${appt.clinic.address}\"\n                />\n                <label>Clinic Address</label>\n              </div>\n            </div>\n            <hr />\n            <div>\n              <h4 class=\"mb-3\">Analysis & Other Details</h4>\n              <div class=\"form-floating mb-3\">\n                <textarea\n                  rows=\"5\"\n                  readonly\n                  class=\"form-control-plaintext\"\n                >${\n                  appt.appointmentDetails.consultDetail\n                    ? appt.appointmentDetails.consultDetail\n                    : \"-\"\n                }</textarea>\n                <label>Doctor Analysis</label>\n              </div>\n              <div class=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  readonly\n                  class=\"form-control-plaintext\"\n                  value=\"${new Date(appt.nextVisitSuggest).toLocaleString()}\"\n                />\n                <label>Next Visit Suggestion</label>\n              </div>\n            </div>\n            ${feedback}\n          </div>\n          <div class=\"col-md-5 col-lg-4 order-md-last\">\n            <h3 class=\"d-flex justify-content-between align-items-center mb-3\">\n              <span class=\"text-dark\">Total Amount</span>\n              <span class=\"text-primary\">${\n                appt.appointmentDetails.amount\n              }</span>\n            </h3>\n            ${medicine}\n            ${vaccine}\n            ${grooming}\n          </div>\n        </div>\n      </main>\n    </div>\n  </body>\n</html>`;\n};\n\nexport const getLicenseHtml = (pet: any) => {\n  return `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Report</title>\n    <link\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\n      rel=\"stylesheet\"\n      integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\n      crossorigin=\"anonymous\"\n    />\n  </head>\n  <body class=\"bg-body-tertiary\">\n    <div class=\"container\">\n      <main>\n        <div class=\"py-5 text-center\">\n          <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!-- Generator: Gravit.io --><svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            style=\"isolation: isolate\"\n            viewBox=\"0 0 500 500\"\n            width=\"72pt\"\n            height=\"72pt\"\n          >\n            <defs>\n              <clipPath id=\"_clipPath_ssBScvuVJJEsMy1wdSQvwRtlyZTvsNL3\">\n                <rect width=\"500\" height=\"500\" />\n              </clipPath>\n            </defs>\n            <g clip-path=\"url(#_clipPath_ssBScvuVJJEsMy1wdSQvwRtlyZTvsNL3)\">\n              <g>\n                <circle\n                  vector-effect=\"non-scaling-stroke\"\n                  cx=\"250\"\n                  cy=\"250\"\n                  r=\"158.25\"\n                  fill=\"rgb(220,229,222)\"\n                />\n                <g>\n                  <path\n                    d=\" M 434.546 382.995 C 434.154 381.261 433.915 379.097 432.921 378.499 C 431.927 377.9 430.062 377.715 429.359 376.981 C 428.656 376.247 427.555 374.063 427.3 372.62 C 427.045 371.175 426.343 370.441 425.681 367.837 C 425.286 366.277 425.28 364.133 425.087 362.31 C 424.957 361.086 424.798 360.195 424.582 359.182 L 425.092 359.961 C 425.092 359.961 425.878 359.115 425.921 357.198 C 425.963 355.323 425.855 353.744 425.897 351.876 C 425.939 350.007 426.291 347.138 426.033 345.838 L 426.628 347.099 C 426.628 347.099 427.575 345.49 427.471 343.762 C 427.366 342.034 427.819 336.817 427.576 334.799 C 427.334 332.78 426.765 332.479 427.376 330.911 C 427.986 329.342 429.044 327.065 429.247 324.48 C 429.449 321.896 429.394 311.539 428.315 308.35 C 427.235 305.161 425.473 300.375 425.225 298.644 C 424.976 296.912 424.914 293.315 423.824 290.558 C 422.736 287.8 422.484 286.213 420.242 283.573 C 418 280.934 417.604 279.343 416.336 278.164 C 415.068 276.984 413.839 274.079 412.741 271.754 C 411.642 269.428 410.832 267.108 410.005 265.507 C 409.177 263.907 409.641 262.479 409.964 260.904 C 410.287 259.329 411.878 258.933 411.878 258.933 L 410.872 258.911 C 410.872 258.911 411.045 257.621 412.502 256.79 C 413.959 255.96 416.697 255.734 417.693 256.187 C 418.69 256.642 420.111 257.393 420.111 257.393 L 419.855 255.949 C 419.855 255.949 420.996 256.59 422.044 257.564 C 422.43 257.921 422.768 258.652 423.423 259.386 C 424.077 260.12 425.075 260.525 425.075 260.525 L 424.992 259.996 C 424.992 259.996 425.747 260.697 426.511 260.927 C 427.039 261.085 427.621 261.241 428.078 261.312 C 430.228 261.648 431.009 261.042 431.009 261.042 L 430.404 260.214 C 430.404 260.214 431.64 260.672 431.919 261.11 C 431.919 261.11 432.561 260.262 432.462 258.246 C 432.364 256.23 431.955 255.214 431.119 254.044 L 431.758 254.418 C 431.758 254.418 430.195 250.356 427.926 248.939 C 425.656 247.52 423.944 246.907 423.944 246.907 C 423.944 246.907 425.107 246.358 425.462 246.582 C 425.462 246.582 421.997 243.987 417.825 243.964 C 413.655 243.942 411.343 244.394 411.343 244.394 L 411.935 243.616 C 411.935 243.616 409.355 243.199 405.215 245.048 C 401.074 246.897 399.341 250.381 399.341 250.381 L 399.233 248.796 C 399.233 248.796 397.35 249.4 396.373 254.485 C 395.395 259.569 395.14 264.525 395.887 266.484 C 395.887 266.484 394.977 265.385 394.841 265.023 C 394.841 265.023 394.202 267.885 395.012 270.205 C 395.823 272.524 398.2 275.527 398.2 275.527 C 398.2 275.527 395.409 274.913 393.212 274.576 C 391.014 274.239 381.813 274.032 378.452 274.244 C 375.091 274.455 371.856 273.327 368.495 273.54 C 365.134 273.752 361.372 274.722 361.372 274.722 C 361.372 274.722 357.492 272.43 355.002 272.278 C 352.513 272.126 349.53 272.538 349.53 272.538 C 349.53 272.538 347.84 270.966 345.454 270.433 C 343.07 269.9 340.398 269.265 340.398 269.265 C 340.398 269.265 341.844 268.913 342.514 269.025 C 342.514 269.025 341.474 268.331 339.187 267.704 C 336.9 267.078 336.163 265.718 334.917 265.69 C 333.671 265.662 331.507 263.792 331.507 263.792 C 331.507 263.792 327.905 261.984 326.571 261.571 C 325.238 261.157 324.214 259.792 322.983 259.093 C 321.752 258.394 313.193 251.01 309.914 251.799 C 306.637 252.588 306.948 255.76 307.071 258.83 C 307.164 261.146 307.487 265.935 307.487 265.935 C 307.487 265.935 304.555 268.363 303.179 269.866 C 301.803 271.369 300.908 272.788 300.008 274.397 C 299.109 276.007 297.82 277.896 297.391 279.899 C 296.963 281.904 296.616 284.484 296.616 284.484 C 296.616 284.484 288.44 285.643 285.678 289.032 C 282.917 292.422 287.286 294.246 289.361 295.827 C 291.435 297.408 296.176 299.816 296.176 299.816 C 296.176 299.816 297.418 304.255 298.333 306.193 C 298.946 307.492 300.666 309.244 302.011 310.842 C 301.741 311.05 301.468 311.266 301.194 311.501 C 300.839 311.83 300.44 312.134 300.094 312.51 C 299.743 312.871 299.36 313.245 299.039 313.637 C 298.374 314.45 297.799 315.296 297.285 316.112 C 297.256 316.159 297.229 316.204 297.201 316.25 C 296.982 316.324 296.767 316.394 296.565 316.454 C 295.909 316.641 295.358 316.8 294.966 316.89 C 294.574 316.981 294.35 317.034 294.35 317.034 C 294.35 317.034 294.582 317.042 294.985 317.012 C 295.387 316.978 295.967 316.934 296.648 316.793 C 296.729 316.776 296.817 316.757 296.902 316.74 C 296.553 317.329 296.246 317.89 295.971 318.388 C 295.6 319.062 295.332 319.645 295.135 320.046 C 294.942 320.451 294.843 320.688 294.843 320.688 C 294.843 320.688 295.405 319.834 296.248 318.554 C 296.626 317.965 297.085 317.298 297.573 316.587 C 297.631 316.572 297.687 316.561 297.746 316.545 C 298.135 316.449 298.535 316.312 298.947 316.162 C 299.36 316.015 299.773 315.825 300.186 315.617 C 300.604 315.408 301.016 315.151 301.383 314.89 C 301.777 314.608 302.131 314.317 302.475 314.006 C 302.812 313.694 303.136 313.379 303.431 313.058 C 303.461 313.025 303.488 312.993 303.517 312.96 C 303.528 312.98 303.541 313.002 303.551 313.022 C 303.721 313.383 303.999 313.705 304.351 313.996 C 304.307 314.097 304.262 314.196 304.215 314.298 C 304.064 314.692 303.904 315.101 303.778 315.53 C 303.729 315.751 303.678 315.974 303.629 316.197 L 303.592 316.365 C 303.585 316.4 303.58 316.406 303.572 316.465 L 303.564 316.547 L 303.536 316.878 C 303.49 317.313 303.498 317.771 303.509 318.223 C 303.509 318.676 303.575 319.098 303.603 319.518 C 303.695 320.348 303.808 321.115 303.903 321.77 C 303.939 322.097 303.998 322.398 304.02 322.664 C 304.042 322.93 304.073 323.164 304.078 323.356 C 304.068 323.736 304.07 323.964 304.07 323.964 C 304.07 323.964 304.118 323.75 304.19 323.361 C 304.214 323.167 304.218 322.93 304.235 322.656 C 304.253 322.383 304.238 322.078 304.232 321.742 C 304.211 321.074 304.159 320.3 304.108 319.477 C 304.095 319.07 304.063 318.637 304.065 318.218 C 304.06 317.798 304.057 317.371 304.109 316.925 L 304.133 316.594 L 304.139 316.511 L 304.153 316.448 L 304.185 316.293 C 304.229 316.085 304.272 315.878 304.314 315.674 C 304.431 315.268 304.554 314.866 304.686 314.481 C 304.711 314.419 304.733 314.358 304.757 314.296 C 305.11 314.531 305.515 314.742 305.946 314.935 C 305.934 314.995 305.923 315.054 305.911 315.115 C 305.854 315.521 305.796 315.94 305.736 316.366 C 305.708 316.796 305.679 317.234 305.651 317.671 C 305.66 318.106 305.669 318.542 305.677 318.97 C 305.708 319.402 305.756 319.827 305.795 320.237 C 305.905 321.048 306.047 321.797 306.2 322.431 C 306.511 323.7 306.838 324.507 306.838 324.507 C 306.838 324.507 306.803 324.293 306.743 323.919 C 306.678 323.546 306.614 323.01 306.525 322.372 C 306.487 322.053 306.446 321.705 306.403 321.339 C 306.37 320.973 306.335 320.587 306.298 320.187 C 306.276 319.79 306.263 319.379 306.232 318.964 C 306.23 318.543 306.228 318.115 306.224 317.685 C 306.246 317.261 306.268 316.836 306.289 316.418 C 306.331 316 306.371 315.588 306.411 315.19 C 306.413 315.171 306.416 315.155 306.418 315.137 C 306.673 315.239 306.933 315.337 307.199 315.428 C 307.314 316.281 307.437 317.188 307.56 318.096 C 307.617 318.556 307.686 319.026 307.782 319.474 C 307.883 319.938 307.999 320.381 308.147 320.799 C 308.291 321.218 308.44 321.62 308.616 321.985 C 308.783 322.354 308.958 322.693 309.127 323.003 C 309.454 323.625 309.8 324.102 310.035 324.435 C 310.275 324.767 310.433 324.938 310.433 324.938 C 310.433 324.938 309.976 324.122 309.434 322.853 C 309.16 322.219 308.893 321.46 308.649 320.642 C 308.532 320.231 308.425 319.803 308.336 319.373 C 308.252 318.924 308.189 318.476 308.121 318.017 C 308.005 317.195 307.868 316.381 307.727 315.602 C 308.811 315.945 309.905 316.211 310.759 316.446 C 313.046 317.072 316.122 316.758 316.122 316.758 C 316.122 316.758 318.472 323.139 320.528 325.486 C 322.585 327.834 324.276 329.406 324.276 329.406 C 324.276 329.406 325.898 334.046 327.954 336.393 C 330.011 338.741 332.242 341.859 333.737 343.618 C 335.231 345.378 337.798 350.614 339.284 352.757 C 340.77 354.9 340.016 354.307 341.294 357.213 C 342.571 360.118 344.205 364.183 344.153 366.482 C 344.101 368.784 344.438 370.9 343.049 372.978 C 341.66 375.056 340.501 375.414 338.554 376.713 C 336.607 378.011 335.27 377.789 335.043 379.319 C 334.817 380.847 334.756 383.53 336.098 383.56 C 337.44 383.59 338.773 384.004 338.773 384.004 C 338.773 384.004 340.477 385.001 342.197 385.232 C 343.918 385.462 345.081 384.914 345.081 384.914 C 345.081 384.914 345.422 386.84 347.709 387.466 C 349.997 388.093 351.738 387.365 351.738 387.365 C 351.738 387.365 352.684 387.961 354.4 388.383 C 356.117 388.808 357.092 388.061 357.092 388.061 C 357.092 388.061 359.379 388.689 360.912 388.723 C 362.445 388.757 363.796 388.404 364.035 386.299 C 364.274 384.194 364.87 383.25 364.87 383.25 C 364.87 383.25 367.554 383.311 369.859 383.171 C 372.163 383.029 373.905 382.303 375.269 381.374 C 376.633 380.446 379.559 378.21 381.481 378.063 C 383.402 377.913 386.517 375.874 387.296 375.318 C 388.076 374.757 390.04 372.693 390.288 370.206 C 390.536 367.719 391.717 366.403 392.129 365.07 C 392.543 363.736 392.203 362.841 392.727 361.99 C 393.249 361.139 393.546 360.715 393.546 360.715 L 393.964 361.299 C 393.964 361.299 394.707 360.238 394.73 359.232 C 394.752 358.226 394.992 357.176 395.155 356.317 C 395.318 355.458 395.63 354.362 395.63 354.362 L 395.8 355.325 C 395.8 355.325 396.995 354.441 397.383 353.155 C 397.771 351.87 398.476 349.32 399.008 348.038 C 399.54 346.755 400.071 345.544 400.442 345.049 C 400.813 344.554 402.985 343.884 402.985 343.884 C 402.985 343.884 403.561 347.061 403.963 348.364 C 404.365 349.668 405.022 352.415 405.722 353.294 L 405.902 351.715 C 405.902 351.715 406.415 354.46 407.393 355.776 C 408.37 357.093 408.913 358.543 409.736 360.287 C 410.56 362.033 412.099 363.937 412.099 363.937 C 412.099 363.937 412.783 365.535 413.181 366.981 C 413.58 368.429 414.257 370.315 414.669 371.186 C 415.081 372.059 416.159 375.246 416.277 376.401 C 416.395 377.553 416.628 380.004 416.628 380.004 C 416.628 380.004 416.128 383.014 416.968 384.037 C 417.809 385.064 420.115 384.829 420.115 384.829 C 420.115 384.829 421.975 385.303 423.694 385.629 C 425.412 385.954 426.438 385.115 426.438 385.115 C 426.438 385.115 427.716 385.862 429.298 385.897 C 430.879 385.932 431.473 385.084 431.473 385.084 C 431.473 385.084 432.754 385.688 433.48 385.416 C 434.211 385.146 434.939 384.73 434.546 382.995 Z  M 303.098 312.727 C 302.789 313.019 302.47 313.32 302.131 313.606 C 301.79 313.886 301.431 314.173 301.075 314.422 C 300.688 314.686 300.314 314.905 299.929 315.112 C 299.54 315.32 299.141 315.497 298.754 315.666 C 298.505 315.77 298.261 315.865 298.02 315.957 C 298.478 315.305 298.958 314.634 299.482 314.009 C 299.805 313.607 300.15 313.264 300.495 312.899 C 300.829 312.534 301.201 312.211 301.537 311.878 C 301.802 311.637 302.051 311.41 302.301 311.184 C 302.689 311.66 303.03 312.118 303.289 312.54 C 303.225 312.602 303.164 312.664 303.098 312.727 Z  M 372.12 370.37 C 369.641 371.897 367.749 372.861 367.749 372.861 C 367.921 371.571 369.574 368.443 369.574 368.443 C 369.574 368.443 370.038 367.015 370.355 365.728 C 370.672 364.441 370.698 363.29 371.03 361.285 C 371.33 359.472 373.756 353.896 373.786 353.867 C 373.786 353.867 374.412 359.732 374.918 361.086 C 375.461 362.536 375.253 365.406 375.354 367.279 C 375.455 369.151 374.598 368.844 372.12 370.37 Z \"\n                    fill=\"rgb(0,29,68)\"\n                  />\n                  <path\n                    d=\" M 308.428 368.566 C 307.99 367.47 307.441 365.168 305.578 363.523 C 303.714 361.878 301.412 361.221 301.412 361.221 C 301.083 360.564 300.097 358.809 298.343 357.713 C 296.589 356.617 293.739 356.945 292.424 355.85 C 291.108 354.753 288.916 348.066 288.258 345.107 C 287.601 342.147 287.382 340.284 287.272 337.324 C 287.163 334.364 285.409 330.308 284.422 328.007 C 283.436 325.705 283.326 323.074 283.326 323.074 L 283.984 323.732 C 283.984 321.759 283.436 318.799 283.107 316.607 C 282.778 314.415 282.449 312.112 282.449 308.605 C 282.449 305.097 282.997 298.629 283.217 296.437 C 283.436 294.245 282.778 293.039 282.449 291.504 C 282.12 289.969 281.791 286.681 281.791 286.681 L 282.449 288.216 C 282.34 286.681 282.011 284.599 282.12 283.174 C 282.23 281.749 282.997 278.131 283.107 274.843 C 283.217 271.555 282.23 268.047 282.559 266.073 C 282.888 264.1 283.655 260.921 283.984 257.413 C 284.313 253.905 284.093 251.164 284.093 251.164 L 284.641 253.028 C 284.641 253.028 284.75 247.876 284.532 245.245 C 284.312 242.614 283.984 238.339 283.764 236.366 C 283.545 234.393 282.449 232.529 281.791 230.228 C 281.133 227.926 281.352 224.966 281.352 224.966 L 281.9 226.391 C 281.9 226.391 282.448 224.637 282.01 222.225 C 281.571 219.813 280.667 215.373 280.42 212.167 C 280.174 208.961 278.2 204.932 278.2 204.932 C 278.2 204.932 280.036 201.287 280.256 198.108 C 280.475 194.929 280.256 194.052 280.914 191.75 C 281.572 189.448 282.12 188.132 283.106 186.05 C 284.092 183.967 284.202 181.117 284.202 181.117 C 284.202 181.117 284.75 182.213 285.188 183.748 C 285.627 185.283 285.736 185.063 285.517 188.462 C 285.298 191.86 286.394 197.779 287.052 198.875 C 287.71 199.972 290.231 201.726 290.67 201.396 C 291.108 201.067 291.766 200.409 291.985 199.094 C 292.204 197.778 291.546 193.284 291.656 192.517 C 291.766 191.75 294.945 189.777 296.041 188.242 C 297.137 186.707 296.37 184.625 295.603 182.432 C 294.836 180.24 294.617 177.389 294.178 174.978 C 293.739 172.567 291.547 168.181 290.341 165.77 C 289.135 163.358 287.272 160.07 286.395 158.644 C 285.518 157.219 285.079 154.478 284.532 152.067 C 283.984 149.655 281.024 147.682 280.147 146.476 C 279.27 145.27 276.858 142.858 275.324 142.201 C 273.789 141.543 272.693 142.31 272.693 142.31 C 271.871 140.447 267.267 136.938 262.991 135.458 C 258.716 133.979 252.797 133.156 252.797 133.156 C 252.797 133.156 247.535 131.841 240.464 133.485 C 233.394 135.13 228.954 139.734 228.954 139.734 C 228.954 139.734 225.665 140.227 223.035 141.049 C 220.404 141.871 216.787 143.844 214.156 147.133 C 211.525 150.422 211.525 151.244 209.881 154.697 C 208.236 158.15 202.81 162.425 201.002 165.056 C 199.193 167.687 198.864 169.495 199.357 172.949 C 199.85 176.402 199.85 177.224 200.015 180.349 C 200.18 183.473 205.77 189.722 208.072 191.694 C 210.374 193.668 211.361 193.668 212.018 196.133 C 212.676 198.6 211.853 201.724 213.498 201.231 C 214.208 201.018 215.8 198.929 216.293 197.285 C 216.504 196.582 217.559 194.966 217.938 193.668 C 218.445 191.932 217.445 185.117 217.445 185.117 C 217.445 185.23 217.938 187.09 218.925 189.064 C 219.911 191.037 220.076 190.543 220.569 192.681 C 221.062 194.819 219.443 196.54 219.089 197.285 C 218.323 198.893 215.827 201.369 215.142 202.054 C 213.663 203.534 211.524 204.685 208.894 208.467 C 206.263 212.249 202.152 215.538 199.357 219.32 C 196.562 223.102 193.931 231.159 193.931 231.159 C 193.931 231.159 188.833 234.941 184.394 239.709 C 179.955 244.478 178.146 250.397 173.213 255.494 C 168.28 260.591 158.414 269.471 155.948 272.759 C 153.481 276.048 146.082 283.118 142.629 286.078 C 139.176 289.038 135.723 293.642 131.612 299.232 C 127.502 304.823 121.746 317.648 121.746 317.648 C 121.746 317.648 117.964 323.897 115.333 328.501 C 112.702 333.105 112.702 341.82 112.373 342.313 C 112.044 342.806 110.728 345.273 109.742 345.108 C 108.756 344.944 102.507 347.41 98.889 348.397 C 95.272 349.383 90.339 349.383 87.707 349.219 C 85.077 349.054 79.321 349.877 76.526 349.712 C 73.73 349.548 70.935 348.232 70.935 348.232 C 70.935 348.232 66.496 347.081 62.549 346.753 C 58.602 346.424 51.367 347.903 51.367 347.903 C 50.38 347.574 45.119 347.739 41.501 349.054 C 40.206 349.525 38.925 349.766 37.665 350.369 C 36.404 350.972 35.527 351.959 35.527 351.959 L 36.13 351.904 C 36.13 351.904 35.47 352.357 34.924 352.78 C 34.378 353.203 34.126 353.656 34.047 353.876 C 33.857 354.407 34.166 354.934 34.595 355.63 C 34.977 356.25 36.055 357.676 36.055 357.676 L 35.417 357.494 C 35.417 357.494 36.283 358.687 36.897 359.083 C 37.499 359.472 38.615 359.831 38.815 360.015 C 40.788 361.824 45.611 362.207 45.611 362.207 C 45.611 362.207 49.064 363.029 51.366 364.509 C 53.668 365.989 57.943 367.634 65.178 367.798 C 72.413 367.962 73.235 367.798 73.235 367.798 L 71.591 368.456 C 71.591 368.456 72.742 369.278 78.168 370.429 C 83.594 371.579 91.322 370.1 96.42 369.443 C 101.517 368.785 109.739 367.634 109.739 367.634 C 109.739 367.634 110.397 368.784 112.863 370.265 C 115.329 371.744 124.373 373.389 124.373 373.389 C 124.373 373.389 123.715 375.363 127.004 377.335 C 130.293 379.308 131.444 380.295 136.212 379.802 C 140.98 379.308 160.219 382.268 168.441 382.268 C 176.663 382.268 190.31 382.433 193.27 382.761 C 196.23 383.09 197.216 384.57 199.354 385.392 C 201.492 386.214 205.273 385.392 205.273 385.392 C 207.575 386.05 208.397 385.556 209.713 385.392 C 211.028 385.228 211.686 383.583 211.686 383.583 C 212.179 383.748 214.317 383.419 215.139 382.926 C 215.961 382.433 215.961 380.295 214.646 378.65 C 213.331 377.007 211.851 377.336 210.7 376.349 C 209.549 375.363 208.233 374.704 205.109 373.718 C 201.985 372.732 198.696 370.21 198.696 370.21 C 199.354 369.991 202.313 368.784 203.958 368.675 C 205.602 368.566 208.014 367.579 209.549 366.373 C 211.084 365.167 211.522 363.961 213.166 361.44 C 214.575 359.28 214.856 357.366 214.909 356.86 C 214.909 356.814 214.913 356.769 214.92 356.726 C 214.92 356.726 214.917 356.775 214.909 356.86 C 214.894 357.522 215.468 358.48 215.468 358.48 C 215.577 357.165 216.784 355.63 218.209 353.328 C 219.634 351.026 221.388 348.176 221.388 348.176 C 221.388 348.176 224.238 354.973 224.677 357.165 C 225.115 359.356 225.335 362.207 225.554 364.948 C 225.773 367.688 227.418 369.333 227.418 369.333 C 227.309 368.784 227.308 367.359 227.308 367.359 C 227.308 367.359 228.953 370.868 230.049 372.731 C 231.145 374.594 233.447 375.909 235.201 376.567 C 236.955 377.225 239.696 379.747 240.902 380.733 C 242.107 381.719 243.094 382.925 245.067 384.46 C 247.041 385.995 246.054 387.42 247.588 388.517 C 249.123 389.613 251.315 389.394 253.507 390.271 C 255.699 391.147 257.453 390.38 260.633 391.147 C 263.812 391.915 265.895 390.709 267.978 390.38 C 270.061 390.052 272.362 389.503 272.362 389.503 C 272.362 389.503 274.555 389.612 276.528 389.942 C 278.501 390.271 281.68 389.285 282.447 388.955 C 283.214 388.627 284.31 388.846 285.078 388.517 C 285.845 388.187 285.845 387.749 285.845 387.749 C 285.845 387.749 287.051 387.749 287.819 387.749 C 288.586 387.749 290.449 386.653 290.449 386.653 C 290.449 386.653 291.874 387.2 292.094 386.762 C 292.313 386.322 290.778 385.227 290.778 385.227 C 290.778 385.227 290.778 384.241 290.34 382.815 C 289.901 381.391 288.586 380.952 287.49 379.198 C 286.394 377.444 284.092 376.018 284.092 376.018 C 284.092 376.018 286.613 375.909 288.257 376.128 C 289.902 376.348 290.998 376.018 291.875 375.689 C 292.752 375.361 292.972 374.703 292.972 374.703 C 292.972 374.703 296.37 375.141 298.015 375.251 C 299.659 375.361 301.851 374.703 303.277 374.265 C 304.702 373.826 306.346 373.608 306.894 373.717 C 307.442 373.826 308.1 374.265 308.319 373.497 C 308.538 372.73 307.771 371.195 307.771 371.195 C 307.771 371.195 309.087 371.414 309.196 370.756 C 309.305 370.101 308.866 369.662 308.428 368.566 Z  M 274.336 372.897 C 271.869 372.239 270.225 371.911 268.252 371.088 C 266.279 370.266 265.128 369.443 263.648 366.484 C 262.168 363.524 260.195 362.702 258.879 360.236 C 257.564 357.769 257.399 355.631 257.07 352.671 C 256.741 349.711 256.412 346.258 255.425 342.97 C 254.438 339.682 253.123 338.037 252.63 334.749 C 252.137 331.46 251.151 324.718 251.151 324.718 C 255.755 322.581 259.044 318.635 259.044 318.635 C 259.044 318.635 259.044 319.786 258.879 321.43 C 258.715 323.075 259.044 324.719 259.044 324.719 C 259.373 323.897 259.702 322.582 259.702 322.582 C 259.702 323.897 260.853 326.693 261.017 328.665 C 261.182 330.638 261.072 332.228 260.578 334.695 C 260.085 337.161 261.071 339.189 261.071 339.189 L 261.674 337.654 C 261.674 337.654 261.729 341.984 262.496 344.779 C 263.264 347.574 263.647 346.753 264.798 347.903 C 265.949 349.054 266.607 349.712 267.594 352.672 C 268.58 355.632 269.403 360.401 270.225 362.867 C 271.047 365.333 271.047 366.155 272.362 368.129 C 273.678 370.102 273.185 369.444 275.651 370.102 C 278.117 370.76 280.584 373.556 280.584 373.556 C 278.94 372.567 276.802 373.555 274.336 372.897 Z \"\n                    fill=\"rgb(0,29,68)\"\n                  />\n                </g>\n              </g>\n            </g>\n          </svg>\n          <h2>Pet License (PET${pet.id})</h2>\n          <p class=\"lead\">Pawsomecare</p>\n          <p class=\"mark fw-bold\">License Cost: ${pet.licenseForm.amount}</p>\n        </div>\n\n        <div class=\"row g-5\">\n          <div class=\"col-12\">\n            <div class=\"row\">\n              <div class=\"col-lg-4\">\n                <h4 class=\"mb-3\">Pet Details</h4>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext\"\n                    value=\"${pet.petName}\"\n                  />\n                  <label>Name</label>\n                </div>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext\"\n                    value=\"${pet.dob.substr(0, 10)}\"\n                  />\n                  <label>DOB</label>\n                </div>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext text-capitalize\"\n                    value=\"${pet.petCategory.name}\"\n                  />\n                  <label>Type</label>\n                </div>\n              </div>\n              <div class=\"col-lg-4\">\n                <h4 class=\"mb-3\">Owner Details</h4>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext\"\n                    value=\"${localStorage.getItem(\"name\")}\"\n                  />\n                  <label>Owner Name</label>\n                </div>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext\"\n                    value=\"${localStorage.getItem(\"email\")}\"\n                  />\n                  <label>Email</label>\n                </div>\n              </div>\n              <div class=\"col-lg-4\">\n                <h4 class=\"mb-3\">License Details</h4>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext\"\n                    value=\"${pet.licenseForm.licenseNo}\"\n                  />\n                  <label>License #</label>\n                </div>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext\"\n                    value=\"${\n                      pet.licenseForm.licenseStatus === \"APPROVED\"\n                        ? pet.licenseForm.expiresOn.substr(0, 10)\n                        : \"-\"\n                    }\"\n                  />\n                  <label>Expires At</label>\n                </div>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    type=\"text\"\n                    readonly\n                    class=\"form-control-plaintext\"\n                    value=\"${\n                      pet.licenseForm.licenseStatus === \"APPROVED\"\n                        ? pet.licenseForm.issuedAt.substr(0, 10)\n                        : \"-\"\n                    }\"\n                  />\n                  <label>Issued At</label>\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div>\n              <h4 class=\"mb-3\">Remarks</h4>\n              <p class=\"lead\">${pet.licenseForm.description}</p>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  </body>\n</html>\n`;\n};\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./MyPet.css\";\nimport {\n  addNewUnadoptPet,\n  getMyPets,\n  getPetCategory,\n  updatePet,\n} from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faEdit,\n  faIdBadge,\n  faInfoCircle,\n  faPaw,\n  faPlusCircle,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\nimport { getLicenseHtml } from \"../../../utils/report.util\";\n\nconst MyPet: React.FC = () => {\n  const [pets, setPets] = useState<Array<any>>([]);\n  const [categories, setCategories] = useState<Array<any>>([]);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n  const [mode, setMode] = useState<string>(\"\");\n  const [petId, setPetId] = useState<number>(0);\n  const [petName, setPetName] = useState<string>(\"\");\n  const [petWeight, setPetWeight] = useState<0>(0);\n  const [name, setName] = useState<string>(\"\");\n  const [dob, setDob] = useState<string>(\"\");\n  const [gender, setGender] = useState<string>(\"\");\n  const [type, setType] = useState<number>(-1);\n  const [weight, setWeight] = useState<number>(0);\n\n  useEffect(() => {\n    async function getPets() {\n      try {\n        const cli: any = await getMyPets();\n        const cats: any = await getPetCategory(\"user\");\n        setPets(cli);\n        setCategories(cats);\n        setIsVerifying(false);\n        setMode(\"\");\n        setPetId(0);\n        setPetName(\"\");\n        setPetWeight(0);\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (pets.length === 0 && !isFetched) {\n      getPets();\n    }\n  });\n\n  const doUpdatePet = async () => {\n    setIsVerifying(true);\n    if (mode === \"EDIT\") {\n      await updatePet(petId, petName, petWeight);\n    } else {\n      await addNewUnadoptPet(name, dob, gender, weight, type, \"user\");\n      setName(\"\");\n      setDob(\"\");\n      setWeight(0);\n      setGender(\"\");\n    }\n    setIsVerifying(false);\n    setIsFetched(false);\n    setPets([]);\n    document.getElementById(\"petModal\")?.classList.remove(\"show\");\n    document.querySelector(\".modal-backdrop\")?.remove();\n  };\n\n  const getMonths = (dob: string) => {\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\n    diff /= 60 * 60 * 24 * 7 * 4;\n    return Math.abs(Math.round(diff));\n  };\n\n  const doUpdateFields = (\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    updateFn: React.Dispatch<React.SetStateAction<string>>\n  ) => {\n    updateFn(ev.target.value);\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <DataList\n        dataLength={pets.length}\n        icon={faPaw}\n        placeholder=\"You no longer own any pets\"\n        secPlaceholder={'To adopt a pet, visit \"Adopt Pets\"'}\n        actionIcon={faPlusCircle}\n        actionText={\"Add Pet\"}\n        actionCallback={() => {\n          console.log(\"NICE COMING\");\n          setMode(\"ADD\");\n          setName(\"\");\n          setDob(\"\");\n          setWeight(0);\n          setGender(\"\");\n        }}\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"form-group\">\n            <div className=\"d-flex justify-content-between\">\n              <h3>My Pets</h3>\n              <button\n                className=\"btn bg-primary mb-4 text-white login-button\"\n                data-toggle=\"modal\"\n                data-target=\"#petModal\"\n                onClick={() => {\n                  setMode(\"ADD\");\n                  setName(\"\");\n                  setDob(\"\");\n                  setWeight(0);\n                  setGender(\"\");\n                }}\n              >\n                <FontAwesomeIcon icon={faPlusCircle} />\n                &nbsp; Add Pet\n              </button>\n            </div>\n            <table className=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Pet Name</th>\n                  <th scope=\"col\">Weight (in grams)</th>\n                  <th scope=\"col\">Gender</th>\n                  <th scope=\"col\">Pet Type</th>\n                  <th scope=\"col\">License</th>\n                  <th scope=\"col\">License Expires At</th>\n                  <th scope=\"col\">Age (in months)</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {pets.map((t, i) => (\n                  <tr key={t.id}>\n                    <th scope=\"row\">{i + 1}</th>\n                    <td>\n                      {t.petName}\n                      &nbsp;\n                      <FontAwesomeIcon\n                        icon={faInfoCircle}\n                        title={\"Pet ID: \" + t.id}\n                      />\n                    </td>\n                    <td>{t.weight}</td>\n                    <td>{t.gender}</td>\n                    <td className=\"text-capitalize\">{t.petCategory.name}</td>\n                    <td className=\"text-capitalize text-center\">\n                      {t.isLicensed ? (\n                        <FontAwesomeIcon\n                          icon={faCheck}\n                          color=\"green\"\n                          title={\n                            t.licenseForm && t.licenseForm.licenseNo\n                              ? t.licenseForm.licenseNo\n                              : \"-\"\n                          }\n                          onClick={() =>\n                            navigator.clipboard.writeText(\n                              t.licenseForm.licenseNo\n                            )\n                          }\n                        />\n                      ) : (\n                        <FontAwesomeIcon icon={faTimes} color=\"red\" />\n                      )}\n                    </td>\n                    <td>\n                      {t.licenseForm && t.licenseForm.expiresOn\n                        ? t.licenseForm.expiresOn.substr(0, 10)\n                        : \"-\"}\n                    </td>\n                    <td>{getMonths(t.dob)}</td>\n                    <td>\n                      <FontAwesomeIcon\n                        icon={faEdit}\n                        className=\"mx-2 cursor-pointer text-dark-primary\"\n                        onClick={() => {\n                          setMode(\"EDIT\");\n                          setPetId(t.id);\n                          setPetName(t.petName);\n                          setPetWeight(t.weight);\n                        }}\n                        data-toggle=\"modal\"\n                        data-target=\"#petModal\"\n                        title=\"Update\"\n                      />\n                      {t.isLicensed && (\n                        <FontAwesomeIcon\n                          icon={faIdBadge}\n                          className=\"mx-2 cursor-pointer text-primary\"\n                          onClick={() => {\n                            const winUrl = URL.createObjectURL(\n                              new Blob([getLicenseHtml(t)], {\n                                type: \"text/html\",\n                              })\n                            );\n                            window.open(winUrl);\n                          }}\n                          title={`Download ${t.petName} License`}\n                        />\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </DataList>\n\n      <Modal\n        title={mode === \"EDIT\" ? \"Update Pet\" : \"Add New Pet\"}\n        submitText={mode === \"EDIT\" ? \"Update\" : \"Add Pet\"}\n        doSubmit={doUpdatePet}\n      >\n        {mode === \"EDIT\" ? (\n          <Fragment>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Pet #</label>\n              <input\n                type=\"text\"\n                disabled\n                className=\"form-control\"\n                value={petId}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Pet Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={petName}\n                onChange={(ev) => doUpdateFields(ev, setPetName)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Pet Weight</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={petWeight}\n                onChange={(ev) => setPetWeight(ev.target.valueAsNumber)}\n                required\n              />\n            </div>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Pet Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={name}\n                onChange={(ev) => doUpdateFields(ev, setName)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Pet Type</label>\n              <select\n                name=\"pettype\"\n                className=\"form-control text-capitalize\"\n                title=\"Pet Type\"\n                onChange={(ev) => setType(+ev.target.value)}\n                required\n              >\n                <option value=\"-1\"></option>\n                {categories\n                  .filter((c: any) => c.isActive)\n                  .map((c, i) => (\n                    <option value={c.id} key={i} className=\"text-capitalize\">\n                      {c.name}\n                    </option>\n                  ))}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Date of Birth</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                value={dob}\n                onChange={(ev) => doUpdateFields(ev, setDob)}\n                required\n                min={\"1970-01-01\"}\n                max={new Date().toISOString().substring(0, 10)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Gender</label>\n              <div className=\"form-check\">\n                <input\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name=\"gender\"\n                  value={\"MALE\"}\n                  onChange={(ev) => doUpdateFields(ev, setGender)}\n                  required\n                />\n                <label className=\"text-secondary form-check-label\">M</label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name=\"gender\"\n                  value={\"FEMALE\"}\n                  onChange={(ev) => doUpdateFields(ev, setGender)}\n                  required\n                />\n                <label className=\"text-secondary form-check-label\">F</label>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Weight (in grams)</label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                value={weight}\n                onChange={(ev) => setWeight(ev.target.valueAsNumber)}\n                required\n                min={5}\n              />\n            </div>\n          </Fragment>\n        )}\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(MyPet);\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./PetLicense.css\";\nimport { applyPetLicense, getMyPets } from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBook,\n  faHourglassHalf,\n  faIdBadge,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\n\nconst MyPet: React.FC = () => {\n  const [pets, setPets] = useState<Array<any>>([]);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n  const [mode, setMode] = useState<string>(\"\");\n  const [petId, setPetId] = useState<number>(0);\n  const [petName, setPetName] = useState<string>(\"\");\n  const [desc, setDesc] = useState<string>(\"\");\n  const [licenseCost, setLicenseCost] = useState<0>(0);\n\n  useEffect(() => {\n    async function getPets() {\n      try {\n        const cli: any = await getMyPets();\n        setPets(cli);\n        setIsVerifying(false);\n        setMode(\"\");\n        setPetId(0);\n        setPetName(\"\");\n        setLicenseCost(0);\n        setDesc(\"\");\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (pets.length === 0 && !isFetched) {\n      getPets();\n    }\n  });\n\n  const getMonths = (dob: string) => {\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\n    diff /= 60 * 60 * 24 * 7 * 4;\n    return Math.abs(Math.round(diff));\n  };\n\n  const doApplyLicense = async () => {\n    if (mode === \"EDIT\") {\n      await applyPetLicense(petId, licenseCost, desc);\n      setIsFetched(false);\n      setPets([]);\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\n      document.querySelector(\".modal-backdrop\")?.remove();\n    }\n  };\n\n  const doUpdateFields = (\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    updateFn: React.Dispatch<React.SetStateAction<string>>\n  ) => {\n    updateFn(ev.target.value);\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <DataList\n        dataLength={pets.length}\n        icon={faIdBadge}\n        placeholder=\"You no longer own any pets to apply for license\"\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"form-group\">\n            <div className=\"d-flex justify-content-between\">\n              <h3>Apply Pet License</h3>\n            </div>\n            <table className=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Pet Name</th>\n                  <th scope=\"col\">Weight (in grams)</th>\n                  <th scope=\"col\">Gender</th>\n                  <th scope=\"col\">Pet Type</th>\n                  <th scope=\"col\">License Cost</th>\n                  <th scope=\"col\">Age (in months)</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {pets\n                  .filter((p) => !p.isLicensed)\n                  .map((t, i) => (\n                    <tr key={t.id}>\n                      <th scope=\"row\">{i + 1}</th>\n                      <td>\n                        {t.petName}\n                        &nbsp;\n                        <FontAwesomeIcon\n                          icon={faInfoCircle}\n                          title={\"Pet ID: \" + t.id}\n                        />\n                      </td>\n                      <td>{t.weight}</td>\n                      <td>{t.gender}</td>\n                      <td className=\"text-capitalize\">{t.petCategory.name}</td>\n                      <td className=\"text-capitalize\">\n                        {t.petCategory.licenseCost}\n                      </td>\n                      <td>{getMonths(t.dob)}</td>\n                      <td>\n                        {(t.licenseForm === null ||\n                          (t.licenseForm !== null &&\n                            !t.licenseForm.isActive)) && (\n                          <button\n                            className=\"bg-primary text-white btn\"\n                            onClick={() => {\n                              setMode(\"EDIT\");\n                              setPetId(t.id);\n                              setPetName(t.petName);\n                              setLicenseCost(t.petCategory.licenseCost);\n                              setDesc(\"\");\n                            }}\n                            data-toggle=\"modal\"\n                            data-target=\"#petModal\"\n                          >\n                            <FontAwesomeIcon icon={faBook} />\n                            &nbsp; Apply License\n                          </button>\n                        )}\n                        {t.licenseForm !== null && t.licenseForm.isActive && (\n                          <button\n                            className=\"bg-secondary text-white btn\"\n                            style={{ cursor: \"none\" }}\n                            disabled\n                          >\n                            <FontAwesomeIcon icon={faHourglassHalf} />\n                            &nbsp; License Awaiting\n                          </button>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n\n          <Modal\n            title={mode === \"EDIT\" && \"Apply for License\"}\n            submitText={mode === \"EDIT\" && \"Apply\"}\n            doSubmit={doApplyLicense}\n          >\n            {mode === \"EDIT\" && (\n              <Fragment>\n                <div className=\"form-group\">\n                  <label className=\"text-secondary\">Pet #</label>\n                  <input\n                    type=\"text\"\n                    disabled\n                    className=\"form-control\"\n                    value={petId}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"text-secondary\">Pet Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={petName}\n                    onChange={(ev) => doUpdateFields(ev, setPetName)}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"text-secondary\">License Cost</label>\n                  <input\n                    type=\"number\"\n                    className=\"form-control\"\n                    value={licenseCost}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"text-secondary\">Remarks</label>\n                  <textarea\n                    rows={5}\n                    className=\"form-control\"\n                    value={desc}\n                    onChange={(ev) => doUpdateFields(ev, setDesc)}\n                  ></textarea>\n                </div>\n              </Fragment>\n            )}\n          </Modal>\n        </div>\n      </DataList>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(MyPet);\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./PetAppt.css\";\nimport {\n  bookPetAppt,\n  doRateAppt,\n  getClinicStaffs,\n  getMyPets,\n  getPetAppointments,\n  getPetClinics,\n  getPetGroomings,\n  getPetServices,\n} from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendarCheck,\n  faCommentAlt,\n  faFileDownload,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\nimport { getReportHtml } from \"../../../utils/report.util\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\n\nconst PetAppt: React.FC = () => {\n  const [pets, setPets] = useState<Array<any>>([]);\n  const [petClinics, setPetClinics] = useState<Array<any>>([]);\n  const [petAppts, setPetAppts] = useState<Array<any>>([]);\n  const [petStaffs, setPetStaffs] = useState<Array<any>>([]);\n  const [petServices, setPetServices] = useState<Array<any>>([]);\n  const [petGrooms, setPetGrooms] = useState<Array<any>>([]);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n  const [mode, setMode] = useState<string>(\"\");\n  const [apptId, setApptId] = useState<number>(-1);\n  const [feedTitle, setFeedTitle] = useState<string>(\"\");\n  const [feedDesc, setFeedDesc] = useState<string>(\"\");\n  const [feedRate, setFeedRate] = useState<number>(5);\n  const [petId, setPetId] = useState<number>(-1);\n  const [clinicId, setClinicId] = useState<number>(-1);\n  const [vetStaffId, setVetStaffId] = useState<number>(-1);\n  const [grmStaffId, setGrmStaffId] = useState<number>(-1);\n  const [services, setServices] = useState<Array<string>>([]);\n  const [grooms, setGrooms] = useState<Array<number>>([]);\n  const [apptTime, setApptTime] = useState<string>(\"\");\n  const [reason, setReason] = useState<string>(\"\");\n\n  useEffect(() => {\n    async function getPets() {\n      try {\n        const myPets: any = await getMyPets();\n        const clinics: any = await getPetClinics(\"user\");\n        const services: any = await getPetServices();\n        const appts: any = await getPetAppointments();\n        const grms: any = await getPetGroomings();\n        setPets(myPets);\n        setPetClinics(clinics);\n        setPetServices(services);\n        setPetAppts(appts);\n        setPetGrooms(grms);\n        setIsVerifying(false);\n        setMode(\"\");\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (pets.length === 0 && !isFetched) {\n      getPets();\n    }\n  });\n\n  const doBookAppt = async () => {\n    if (mode === \"BOOK\") {\n      await bookPetAppt(\n        petId,\n        clinicId,\n        vetStaffId,\n        grmStaffId,\n        services,\n        apptTime,\n        reason,\n        grooms\n      );\n      setIsFetched(false);\n      setPets([]);\n      setPetId(-1);\n      setClinicId(-1);\n      setVetStaffId(-1);\n      setGrmStaffId(-1);\n      setServices([]);\n      setGrooms([]);\n      setApptTime(\"\");\n      setReason(\"\");\n      setApptId(-1);\n      setFeedTitle(\"\");\n      setFeedDesc(\"\");\n      setFeedRate(5);\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\n      document.querySelector(\".modal-backdrop\")?.remove();\n    }\n  };\n\n  const doSaveFeedback = async () => {\n    if (mode === \"FEEDBACK\") {\n      await doRateAppt(apptId, feedTitle, feedDesc, feedRate);\n      setIsFetched(false);\n      setPets([]);\n      setPetId(-1);\n      setClinicId(-1);\n      setVetStaffId(-1);\n      setGrmStaffId(-1);\n      setServices([]);\n      setGrooms([]);\n      setApptTime(\"\");\n      setReason(\"\");\n      setApptId(-1);\n      setFeedTitle(\"\");\n      setFeedDesc(\"\");\n      setFeedRate(5);\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\n      document.querySelector(\".modal-backdrop\")?.remove();\n    }\n  };\n\n  const getStaffByRole = (role: string) => {\n    return petStaffs.filter((s) =>\n      s.authorities\n        .map((a: any) => a[\"authority\"].replace(\"ROLE_\", \"\"))\n        .includes(role)\n    );\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <DataList\n        dataLength={petAppts.length}\n        icon={faCalendarCheck}\n        placeholder={\"No appointments booked yet\"}\n        actionIcon={faCalendarCheck}\n        actionText=\"Book Appointment\"\n        actionCallback={() => {\n          setMode(\"BOOK\");\n        }}\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"form-group\">\n            <div className=\"d-flex justify-content-between\">\n              <h3>My Pets Appointments</h3>\n              <button\n                className=\"btn bg-primary mb-4 text-white login-button\"\n                data-toggle=\"modal\"\n                data-target=\"#petModal\"\n                onClick={() => {\n                  setMode(\"BOOK\");\n                }}\n              >\n                <FontAwesomeIcon icon={faCalendarCheck} />\n                &nbsp; Book Appointment\n              </button>\n            </div>\n            <table className=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Pet Name</th>\n                  <th scope=\"col\">Pet Type</th>\n                  <th scope=\"col\">Clinic</th>\n                  <th scope=\"col\">Staff</th>\n                  <th scope=\"col\">Appointment Time</th>\n                  <th scope=\"col\">Services</th>\n                  <th scope=\"col\">Cost</th>\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {petAppts.map((t, i) => (\n                  <tr key={t.id}>\n                    <th scope=\"row\">{i + 1}</th>\n                    <td>{t.pet.petName}</td>\n                    <td className=\"text-capitalize\">\n                      {t.pet.petCategory.name}\n                    </td>\n                    <td>\n                      <strong>{t.clinic.name}</strong>\n                      <address>{t.clinic.address}</address>\n                    </td>\n                    <td>\n                      {t.staffDetails.map((s: any) => s.username).join(\", \")}\n                    </td>\n                    <td>{new Date(t.apptTime).toLocaleString()}</td>\n                    <td>\n                      {t.services.map((s: any) => s.serviceName).join(\"\\n\")}\n                    </td>\n                    <td>\n                      {t.status === \"CLOSED\"\n                        ? t.appointmentDetails.amount\n                        : \"-\"}\n                    </td>\n                    <td className=\"text-capitalize\">\n                      <button\n                        className={`btn ${\n                          t.status === \"CLOSED\"\n                            ? \"btn-success\"\n                            : t.status === \"OPEN\"\n                            ? \"btn-info\"\n                            : \"btn-secondary\"\n                        }`}\n                        disabled\n                      >\n                        {t.status}\n                      </button>\n                    </td>\n                    <td className=\"text-center\">\n                      <FontAwesomeIcon\n                        className=\"cursor-pointer mx-2\"\n                        icon={faFileDownload}\n                        color={t.status === \"CLOSED\" ? \"GREEN\" : \"BLACK\"}\n                        onClick={() => {\n                          const winUrl = URL.createObjectURL(\n                            new Blob([getReportHtml(t)], { type: \"text/html\" })\n                          );\n                          window.open(winUrl);\n                        }}\n                      />\n                      {t.appointmentDetails.feedback === null && t.status === \"CLOSED\" && (\n                        <FontAwesomeIcon\n                          className=\"cursor-pointer mx-2 text-info\"\n                          icon={faCommentAlt}\n                          data-toggle=\"modal\"\n                          data-target=\"#petModal\"\n                          onClick={() => {\n                            setMode(\"FEEDBACK\");\n                            setApptId(t.id);\n                          }}\n                        />\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </DataList>\n\n      <Modal\n        title={\n          mode === \"BOOK\" ? \"Booking an appointment\" : \"Give us a feedback\"\n        }\n        submitText={mode === \"BOOK\" ? \"Book\" : \"Save\"}\n        doSubmit={mode === \"BOOK\" ? doBookAppt : doSaveFeedback}\n      >\n        {mode === \"BOOK\" ? (\n          <Fragment>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Pet Name</label>\n              <select\n                name=\"petname\"\n                title=\"Pet\"\n                className=\"form-control\"\n                value={petId}\n                onChange={(ev) => setPetId(+ev.target.value)}\n              >\n                <option value={-1}></option>\n                {pets.map((p) => (\n                  <option\n                    key={p.id}\n                    className=\"text-capitalize\"\n                    value={p.id}\n                  >{`${p.petName} (${p.petCategory.name})`}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Clinic</label>\n              <select\n                name=\"petclinic\"\n                title=\"Clinic\"\n                className=\"form-control\"\n                value={clinicId}\n                onChange={async (ev) => {\n                  setClinicId(+ev.target.value);\n                  if (+ev.target.value !== -1) {\n                    const staffs = await getClinicStaffs(+ev.target.value);\n                    setPetStaffs(staffs);\n                    getStaffByRole();\n                  }\n                }}\n              >\n                <option value={-1}>{\"\"}</option>\n                {petClinics.map((c) => (\n                  <option className=\"text-capitalize\" value={c.id} key={c.id}>\n                    {c.name + \" - \" + c.address}\n                  </option>\n                ))}\n              </select>\n            </div>\n            {services.some((v) =>\n              [\"CONSULTATION\", \"CHECKUP\", \"VACCINATION\"].includes(v)\n            ) && (\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Veterinarian Staff</label>\n                <select\n                  name=\"petvetstaff\"\n                  title=\"Veterinarian Staff\"\n                  className=\"form-control\"\n                  value={vetStaffId}\n                  onChange={(ev) => {\n                    setVetStaffId(+ev.target.value);\n                  }}\n                >\n                  <option value={-1}></option>\n                  {getStaffByRole(\"VETERINARIAN\").map((s) => (\n                    <option\n                      className=\"text-capitalize\"\n                      value={s.staff.id}\n                      key={s.id}\n                    >\n                      {`${s.username} (${s.staff.id}) - Fee: ${s.staff.consultFee}`}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            )}\n            {services.length > 0 && services.includes(\"GROOMING\") && (\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Grooming Staff</label>\n                <select\n                  name=\"petgrmstaff\"\n                  title=\"Grooming Staff\"\n                  className=\"form-control\"\n                  value={grmStaffId}\n                  onChange={(ev) => {\n                    setGrmStaffId(+ev.target.value);\n                  }}\n                >\n                  <option value={-1}></option>\n                  {getStaffByRole(\"GROOMING\").map((s) => (\n                    <option\n                      className=\"text-capitalize\"\n                      value={s.staff.id}\n                      key={s.id}\n                    >\n                      {`${s.username} (${s.staff.id}) - Fee: ${s.staff.consultFee}`}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            )}\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Service</label>\n              <select\n                name=\"petservice\"\n                title=\"Service\"\n                className=\"form-control\"\n                onChange={(ev) => {\n                  const options = [...ev.target.selectedOptions];\n                  const values = options.map((option) => option.value);\n                  setServices(values);\n                }}\n                defaultValue={[...services.map((g) => g.toString())]}\n                multiple\n              >\n                {petServices.map((s) => (\n                  <option\n                    className=\"text-capitalize\"\n                    value={s.serviceName}\n                    key={s.id}\n                  >\n                    {`${s.serviceName}`}\n                  </option>\n                ))}\n              </select>\n            </div>\n            {services.length > 0 && services.includes(\"GROOMING\") && (\n              <div className=\"form-group\">\n                <label className=\"text-secondary\">Grooming</label>\n                <select\n                  name=\"petgroom\"\n                  title=\"Grooming\"\n                  className=\"form-control\"\n                  onChange={(ev) => {\n                    const options = [...ev.target.selectedOptions];\n                    const values = options.map((option) => option.value);\n                    setGrooms(values);\n                  }}\n                  defaultValue={[...grooms.map((g) => g.toString())]}\n                  multiple\n                >\n                  {petGrooms.map((s) => (\n                    <option className=\"text-capitalize\" value={s.id} key={s.id}>\n                      {`${s.name}`}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            )}\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Appointment time</label>\n              <input\n                type=\"datetime-local\"\n                className=\"form-control\"\n                value={apptTime}\n                onChange={(ev) => setApptTime(ev.target.value)}\n                min={new Date().toISOString().slice(0, -8)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Reason for appointment</label>\n              <textarea\n                name=\"reason\"\n                rows={5}\n                className=\"form-control\"\n                value={reason}\n                onChange={(ev) => setReason(ev.target.value)}\n              ></textarea>\n            </div>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Feedback</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={feedTitle}\n                onChange={(ev) => setFeedTitle(ev.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Rating</label>\n              <select\n                name=\"feedrate\"\n                title=\"Rating\"\n                className=\"form-control\"\n                onChange={(ev) => {\n                  setFeedRate(+ev.target.value);\n                }}\n                defaultValue={5}\n              >\n                <option value={1}>1</option>\n                <option value={2}>2</option>\n                <option value={3}>3</option>\n                <option value={4}>4</option>\n                <option value={5}>5</option>\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-secondary\">Elaborate here</label>\n              <textarea\n                name=\"feedelab\"\n                rows={5}\n                className=\"form-control\"\n                value={feedDesc}\n                onChange={(ev) => setFeedDesc(ev.target.value)}\n              ></textarea>\n            </div>\n          </Fragment>\n        )}\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(PetAppt);\n","import React, { Fragment } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\n/* TS Import */\nimport {\n  URL_PET_USERS,\n  URL_PET_USERS_ADOPT,\n  URL_PET_USERS_APPT,\n  URL_PET_USERS_LICENSE,\n  URL_PET_USERS_PETS,\n} from \"../../config/UrlRoute\";\n\n/* COMPONENT Import */\nimport { RootState } from \"../../store/reducers\";\nimport { toggleSidebar } from \"../../store/actions\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { joinArrayToString } from \"../../utils/array.utils\";\n\nimport Error from \"../../hoc-components/error/Error\";\nimport ClientHeader from \"./header/ClientHeader\";\nimport PetAdopt from \"./petadopt/PetAdopt\";\nimport MyPet from \"./mypets/MyPet\";\nimport PetLicense from \"./petlicense/PetLicense\";\nimport PetAppt from \"./petappt/PetAppt\";\n\nconst mapStateToProps = (state: RootState) => ({\n  showSidebar: state.sidebar,\n});\n\nconst connector = connect(mapStateToProps, {\n  toggleSidebar,\n});\n\ntype Props = ConnectedProps<typeof connector>;\n\nconst PetClient: React.FC<Props> = (props) => (\n  <Fragment>\n    <div className={\"p-0 col-md-2\"}>\n      <ClientHeader />\n    </div>\n    <div\n      className={joinArrayToString([\n        \"p-0 overflow-hidden px-0\",\n        props.showSidebar ? \"col-md-9\" : \"col-md-8\",\n      ])}\n    >\n      <Switch>\n        <Redirect path={URL_PET_USERS} to={URL_PET_USERS_PETS} exact />\n        <Route path={URL_PET_USERS_PETS}>\n          <MyPet />\n        </Route>\n        <Route path={URL_PET_USERS_ADOPT}>\n          <PetAdopt />\n        </Route>\n        <Route path={URL_PET_USERS_LICENSE}>\n          <PetLicense />\n        </Route>\n        <Route path={URL_PET_USERS_APPT}>\n          <PetAppt />\n        </Route>\n        <Route path=\"**\">\n          <Error />\n        </Route>\n      </Switch>\n    </div>\n  </Fragment>\n);\n\nexport default connector(PetClient);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon as FAIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarCheck, faHistory } from \"@fortawesome/free-solid-svg-icons\";\n\n/* JS Import */\nimport {\n  URL_PET_STAFF_APPT,\n  URL_PET_STAFF_APPT_HISTORY,\n} from \"../../../config/UrlRoute\";\n\n/* CSS Import */\nimport \"./StaffHeader.css\";\n\nconst StaffHeader: React.FC = () => {\n  return (\n    <div\n      className=\"d-flex flex-column h-100 p-2\"\n      style={{\n        backgroundColor: \"var(--dark-primary-transparent)\",\n      }}\n    >\n      <div className=\"header-navigation\">\n        <div className=\"list-group\">\n          <NavLink\n            to={URL_PET_STAFF_APPT}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faCalendarCheck} size=\"1x\" />\n            </span>\n            Appointments\n          </NavLink>\n          <NavLink\n            to={URL_PET_STAFF_APPT_HISTORY}\n            className={\"list-group-item list-group-item-action\"}\n            activeClassName=\"active\"\n          >\n            <span className={\"badge mr-3\"}>\n              <FAIcon icon={faHistory} size=\"1x\" />\n            </span>\n            History\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StaffHeader;\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./PetAppt.css\";\nimport {\n  finalAppointment,\n  getPetMedicines,\n  getPetVaccines,\n  getStaffPetAppointments,\n} from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\nimport { faCalendarCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nconst PetAppt: React.FC = () => {\n  const [petAppts, setPetAppts] = useState<Array<any>>([]);\n  const [petMeds, setPetMeds] = useState<Array<any>>([]);\n  const [petVacs, setPetVacs] = useState<Array<any>>([]);\n  const [presMeds, setPresMeds] = useState<Array<any>>([]);\n  const [analysis, setAnalysis] = useState<string>(\"\");\n  const [nextTime, setNextTime] = useState<string>(\"\");\n  const [vaccine, setVaccine] = useState<number>(-1);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n  const [appt, setAppt] = useState<any>(null);\n\n  useEffect(() => {\n    async function getPetAppts() {\n      try {\n        const appts: any = await getStaffPetAppointments();\n        const meds: any = await getPetMedicines(\"staff\");\n        const vacs: any = await getPetVaccines(\"staff\");\n        setPetAppts(appts);\n        setPetMeds(meds);\n        setPetVacs(vacs);\n        setIsVerifying(false);\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (petAppts.length === 0 && !isFetched) {\n      getPetAppts();\n    }\n  });\n\n  const doFinishAppt = async () => {\n    if (appt != null) {\n      await finalAppointment(appt.id, vaccine, analysis, nextTime, presMeds);\n      setIsFetched(false);\n      setPetAppts([]);\n      setAppt(null);\n      setAnalysis(\"\");\n      setNextTime(\"\");\n      setVaccine(-1);\n      setPresMeds([]);\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\n      document.querySelector(\".modal-backdrop\")?.remove();\n    }\n  };\n\n  const getMonths = (dob: string) => {\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\n    diff /= 60 * 60 * 24 * 7 * 4;\n    return Math.abs(Math.round(diff));\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <DataList\n        dataLength={petAppts.length}\n        icon={faCalendarCheck}\n        placeholder=\"You don't have any active appointments\"\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <h3>My Appointments</h3>\n              <table className=\"table table-bordered\">\n                <tbody>\n                  {petAppts.map((t, i) => (\n                    <tr key={t.id}>\n                      <td\n                        className={`cursor-pointer pet-select ${\n                          appt !== null && appt.id === t.id\n                            ? \"pet-select-focus\"\n                            : \"\"\n                        }`}\n                        onClick={() => {\n                          setAppt(t);\n                        }}\n                      >\n                        <strong>{`${i + 1}. ${\n                          t.pet.petName\n                        } (${t.pet.petCategory.name.toUpperCase()})`}</strong>\n                        <section>{\"Owner: \" + t.user.username}</section>\n                        <section>\n                          {\"Pet Age (in months): \" + getMonths(t.pet.dob)}\n                        </section>\n                        <section\n                          className=\"text-truncate\"\n                          style={{ width: \"300px\" }}\n                        >\n                          {t.reason}\n                        </section>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            {appt && (\n              <div className=\"col-8\">\n                <div className=\"d-flex justify-content-end\">\n                  <button className=\"btn btn-success\" onClick={doFinishAppt}>\n                    Finish Appointment\n                  </button>\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"text-secondary\">\n                    Reason for Appointment\n                  </label>\n                  <textarea\n                    name=\"reason\"\n                    className=\"form-control\"\n                    rows={3}\n                    value={appt.reason}\n                    disabled\n                  ></textarea>\n                </div>\n\n                {appt.consult && (\n                  <Fragment>\n                    <div className=\"form-group\">\n                      <label className=\"text-secondary\">Medicine</label>\n                      <select\n                        name=\"petmedicine\"\n                        title=\"Medicine\"\n                        className=\"form-control\"\n                        onChange={(ev) => {\n                          const options = [...ev.target.selectedOptions];\n                          const values = options.map((option) => {\n                            const med = petMeds.find((m) => {\n                              return m.id === +option.value;\n                            });\n                            med.mrng = 0;\n                            med.evng = 0;\n                            med.noon = 0;\n                            med.night = 0;\n                            med.nos = 0;\n                            return med;\n                          });\n                          setPresMeds(values);\n                        }}\n                        // defaultValue={[...grooms.map((g) => g.toString())]}\n                        multiple\n                      >\n                        {petMeds.map((s) => (\n                          <option\n                            className=\"text-capitalize\"\n                            value={s.id}\n                            key={s.id}\n                          >\n                            {`${s.name}`}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div>\n                      {presMeds.map((m, i) => (\n                        <div className=\"row\" key={i}>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"text\"\n                              disabled\n                              value={m.name}\n                              className=\"form-control\"\n                            />\n                          </div>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"number\"\n                              min={1}\n                              max={m.count}\n                              placeholder=\"No of Medicines\"\n                              className=\"form-control col\"\n                              onChange={(ev) => {\n                                m.nos = ev.target.valueAsNumber;\n                              }}\n                            />\n                          </div>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"number\"\n                              className=\"form-control col\"\n                              placeholder=\"Morning\"\n                              onChange={(ev) => {\n                                m.mrng = ev.target.valueAsNumber;\n                              }}\n                            />\n                          </div>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"number\"\n                              className=\"form-control col\"\n                              placeholder=\"Afternoon\"\n                              onChange={(ev) => {\n                                m.noon = ev.target.valueAsNumber;\n                              }}\n                            />\n                          </div>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"number\"\n                              className=\"form-control col\"\n                              placeholder=\"Evening\"\n                              onChange={(ev) => {\n                                m.evng = ev.target.valueAsNumber;\n                              }}\n                            />\n                          </div>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"number\"\n                              className=\"form-control col\"\n                              placeholder=\"Night\"\n                              onChange={(ev) => {\n                                m.night = ev.target.valueAsNumber;\n                              }}\n                            />\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label className=\"text-secondary\">Vaccine</label>\n                      <select\n                        name=\"petvaccine\"\n                        title=\"Vaccine\"\n                        className=\"form-control\"\n                        onChange={(ev) => {\n                          setVaccine(+ev.target.value);\n                        }}\n                      >\n                        <option value={-1}></option>\n                        {petVacs.map((s) => (\n                          <option\n                            className=\"text-capitalize\"\n                            value={s.id}\n                            key={s.id}\n                          >\n                            {`${s.name}`}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </Fragment>\n                )}\n                {appt.groom && (\n                  <div className=\"form-group\">\n                    <label className=\"text-secondary\">Grooming</label>\n                    <select\n                      name=\"petgroom\"\n                      title=\"Grooming\"\n                      className=\"form-control\"\n                      disabled\n                      multiple\n                    >\n                      {appt.groomings.map((s) => (\n                        <option\n                          className=\"text-capitalize\"\n                          value={s.id}\n                          key={s.id}\n                        >\n                          {`${s.name}`}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                )}\n                <div className=\"form-group\">\n                  <label className=\"text-secondary\">Patient Analysis</label>\n                  <textarea\n                    name=\"analysis\"\n                    className=\"form-control\"\n                    rows={3}\n                    value={analysis}\n                    onChange={(ev) => setAnalysis(ev.target.value)}\n                  ></textarea>\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"text-secondary\">Next Visit Time</label>\n                  <input\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    value={nextTime}\n                    onChange={(ev) => setNextTime(ev.target.value)}\n                    min={new Date(appt.apptTime).toISOString().substring(0, 19)}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </DataList>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(PetAppt);\n","import React, { useState, Fragment, useEffect } from \"react\";\n\n/* COMPONENT Import */\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\n\n/* CSS Import */\nimport \"./ApptHistory.css\";\nimport { getStaffPetAppointmentsHistory } from \"../../../services/http.services\";\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\nimport { faHistory } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ApptHistory: React.FC = () => {\n  const [petAppts, setPetAppts] = useState<Array<any>>([]);\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n  const [appt, setAppt] = useState<any>(null);\n\n  useEffect(() => {\n    async function getPetAppts() {\n      try {\n        const appts: any = await getStaffPetAppointmentsHistory();\n        setPetAppts(appts);\n        setIsVerifying(false);\n      } catch (err) {\n        setIsVerifying(false);\n      } finally {\n        setIsFetched(true);\n      }\n    }\n\n    if (petAppts.length === 0 && !isFetched) {\n      getPetAppts();\n    }\n  });\n\n  const getMonths = (dob: string) => {\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\n    diff /= 60 * 60 * 24 * 7 * 4;\n    return Math.abs(Math.round(diff));\n  };\n\n  return (\n    <Fragment>\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\n      <DataList\n        dataLength={petAppts.length}\n        icon={faHistory}\n        placeholder=\"No history available\"\n      >\n        <div className=\"col-12 my-4\">\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <h3>Appointment History</h3>\n              <table className=\"table table-bordered\">\n                <tbody>\n                  {petAppts.map((t, i) => (\n                    <tr key={t.id}>\n                      <td\n                        className={`cursor-pointer pet-select ${\n                          appt !== null && appt.id === t.id\n                            ? \"pet-select-focus\"\n                            : \"\"\n                        }`}\n                        onClick={() => {\n                          setAppt(t);\n                        }}\n                      >\n                        <strong>{`${i + 1}. ${\n                          t.pet.petName\n                        } (${t.pet.petCategory.name.toUpperCase()})`}</strong>\n                        <section>{\"Owner: \" + t.user.username}</section>\n                        <section>\n                          {\"Pet Age (in months): \" + getMonths(t.pet.dob)}\n                        </section>\n                        <section\n                          className=\"text-truncate\"\n                          style={{ width: \"300px\" }}\n                        >\n                          {t.reason}\n                        </section>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            {appt && (\n              <div className=\"col-8\">\n                <div className=\"form-group\">\n                  <label className=\"text-secondary\">\n                    Reason for Appointment\n                  </label>\n                  <textarea\n                    name=\"reason\"\n                    className=\"form-control\"\n                    rows={3}\n                    value={appt.reason}\n                    disabled\n                  ></textarea>\n                </div>\n                {appt.consult && (\n                  <Fragment>\n                    <div className=\"form-group\">\n                      <label className=\"text-secondary\">Medicine</label>\n                      {JSON.parse(\n                        appt.appointmentDetails.consultDetails != null\n                          ? appt.appointmentDetails.consultDetails\n                          : \"{}\"\n                      ).medicine.map((v: any, i: number) => (\n                        <div className=\"row\" key={i}>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              disabled\n                              value={v.medicine}\n                            />\n                          </div>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              disabled\n                              value={v.count}\n                            />\n                          </div>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              disabled\n                              value={v.mrng}\n                            />\n                          </div>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              disabled\n                              value={v.noon}\n                            />\n                          </div>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              disabled\n                              value={v.evng}\n                            />\n                          </div>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              disabled\n                              value={v.ngt}\n                            />\n                          </div>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              disabled\n                              value={v.cost}\n                            />\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"form-group\">\n                      <label className=\"text-secondary\">Vaccine</label>\n                      {JSON.parse(\n                        appt.appointmentDetails.consultDetails != null\n                          ? appt.appointmentDetails.consultDetails\n                          : \"{}\"\n                      ).vaccine.map((v: any, i: number) => (\n                        <div className=\"row\" key={i}>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              disabled\n                              value={v.name}\n                            />\n                          </div>\n                          <div className=\"form-group col\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              disabled\n                              value={v.cost}\n                            />\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </Fragment>\n                )}\n                {appt.groom && (\n                  <div className=\"form-group\">\n                    <label className=\"text-secondary\">Grooming</label>\n                    {JSON.parse(\n                      appt.appointmentDetails.groomDetails != null\n                        ? appt.appointmentDetails.groomDetails\n                        : \"{}\"\n                    ).grooming.map((v: any, i: number) => (\n                      <div className=\"row\" key={i}>\n                        <div className=\"form-group col\">\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            disabled\n                            value={v.name}\n                          />\n                        </div>\n                        <div className=\"form-group col\">\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            disabled\n                            value={v.cost}\n                          />\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n                <div className=\"form-group\">\n                  <label className=\"text-secondary\">Patient Analysis</label>\n                  <textarea\n                    name=\"analysis\"\n                    className=\"form-control\"\n                    rows={3}\n                    value={appt.appointmentDetails.consultDetail || \"\"}\n                    disabled\n                  ></textarea>\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"text-secondary\">Next Visit Time</label>\n                  <input\n                    type=\"datetime-local\"\n                    className=\"form-control\"\n                    value={appt.nextVisitSuggest.substr(0, 19)}\n                    disabled\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </DataList>\n    </Fragment>\n  );\n};\n\nexport default AdminLayout(ApptHistory);\n","import React, { Fragment } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\n/* TS Import */\nimport {\n  URL_PET_STAFF,\n  URL_PET_STAFF_APPT,\n  URL_PET_STAFF_APPT_HISTORY,\n} from \"../../config/UrlRoute\";\n\n/* COMPONENT Import */\nimport { RootState } from \"../../store/reducers\";\nimport { toggleSidebar } from \"../../store/actions\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { joinArrayToString } from \"../../utils/array.utils\";\n\nimport Error from \"../../hoc-components/error/Error\";\nimport StaffHeader from \"./header/StaffHeader\";\nimport PetAppt from \"./petappt/PetAppt\";\nimport ApptHistory from \"./appthistory/ApptHistory\";\n\nconst mapStateToProps = (state: RootState) => ({\n  showSidebar: state.sidebar,\n});\n\nconst connector = connect(mapStateToProps, {\n  toggleSidebar,\n});\n\ntype Props = ConnectedProps<typeof connector>;\n\nconst PetStaff: React.FC<Props> = (props) => (\n  <Fragment>\n    <div className={\"p-0 col-md-2\"}>\n      <StaffHeader />\n    </div>\n    <div\n      className={joinArrayToString([\n        \"p-0 overflow-hidden px-0\",\n        props.showSidebar ? \"col-md-9\" : \"col-md-8\",\n      ])}\n    >\n      <Switch>\n        <Redirect path={URL_PET_STAFF} to={URL_PET_STAFF_APPT} exact />\n        <Route path={URL_PET_STAFF_APPT}>\n          <PetAppt />\n        </Route>\n        <Route path={URL_PET_STAFF_APPT_HISTORY}>\n          <ApptHistory />\n        </Route>\n        <Route path=\"**\">\n          <Error />\n        </Route>\n      </Switch>\n    </div>\n  </Fragment>\n);\n\nexport default connector(PetStaff);\n","import React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"../../store/reducers\";\nimport {\n  URL_PET_ADMIN,\n  URL_PET_PASSWORD,\n  URL_PET_PROFILE,\n  URL_PET_STAFF,\n  URL_PET_USERS,\n} from \"../../config/UrlRoute\";\nimport PetAdmin from \"../admin/PetAdmin\";\nimport Error from \"../../hoc-components/error/Error\";\nimport { joinArrayToString } from \"../../utils/array.utils\";\nimport Header from \"../nav/header/Header\";\nimport UserProfile from \"../admin/userprofile/UserProfile\";\nimport Password from \"../admin/password/Password\";\nimport { toggleSidebar } from \"../../store/actions\";\nimport PetClient from \"../client/PetClient\";\nimport PetStaff from \"../staff/PetStaff\";\n\nconst mapStateToProps = (state: RootState) => ({\n  user: state.auth,\n  showSidebar: state.sidebar,\n});\n\nconst connector = connect(mapStateToProps, {\n  toggleSidebar,\n});\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = PropsFromRedux & {\n  toggleSidebar: (toggle: boolean) => void;\n};\n\nconst Home: React.FC<Props> = (props) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    if (props.user.role) {\n      const userRole = props.user.role;\n      if (userRole === \"ROLE_ADMIN\") {\n        history.push(URL_PET_ADMIN);\n      } else if (\n        userRole === \"ROLE_VETERINARIAN\" ||\n        userRole === \"ROLE_GROOMING\"\n      ) {\n        history.push(URL_PET_STAFF);\n      } else {\n        history.push(URL_PET_USERS);\n      }\n    }\n  }, [props.user.role]);\n\n  return (\n    <div className=\"d-flex flex-row h-100\">\n      <div\n        className={joinArrayToString([\n          \"p-0\",\n          props.showSidebar ? \"col-md-1\" : \"col-md-2\",\n        ])}\n      >\n        <Header toggleSidebar={(toggle) => props.toggleSidebar(toggle)} />\n      </div>\n\n      <Switch>\n        <Redirect from=\"/home\" to={URL_PET_PROFILE} exact />\n        <Route path={URL_PET_ADMIN}>\n          <PetAdmin />\n        </Route>\n        <Route path={URL_PET_STAFF}>\n          <PetStaff />\n        </Route>\n        <Route path={URL_PET_USERS}>\n          <PetClient />\n        </Route>\n        <Route path={URL_PET_PROFILE}>\n          <UserProfile />\n        </Route>\n        <Route path={URL_PET_PASSWORD}>\n          <Password />\n        </Route>\n        <Route path=\"**\">\n          <Error />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default connector(Home);\n","import {\n  faBath,\n  faCalendarCheck,\n  faClinicMedical,\n  faDog,\n  faHistory,\n  faHospitalUser,\n  faIdBadge,\n  faPaw,\n  faSyringe,\n  faTablets,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  URL_PET_ADMIN_CLINC,\n  URL_PET_ADMIN_GROOM,\n  URL_PET_ADMIN_LICENSE,\n  URL_PET_ADMIN_MEDICINE,\n  URL_PET_ADMIN_PET_TYPES,\n  URL_PET_ADMIN_PETS,\n  URL_PET_ADMIN_STAFF,\n  URL_PET_ADMIN_VACCINE,\n  URL_PET_STAFF_APPT,\n  URL_PET_STAFF_APPT_HISTORY,\n  URL_PET_USERS_ADOPT,\n  URL_PET_USERS_APPT,\n  URL_PET_USERS_LICENSE,\n  URL_PET_USERS_PETS,\n} from \"../config/UrlRoute\";\n\nexport const HOME_DATA = [\n  {\n    title: \"Adopt Pets\",\n    desc: \"Do you love pets. Don't wait to Adopt\",\n    icon: faPaw,\n    showDefault: true,\n    role: \"CLIENT\",\n    url: URL_PET_USERS_ADOPT,\n    text: \"Adopt Pets\",\n  },\n  {\n    title: \"My Pets\",\n    desc: \"Manage all your pets from the single place\",\n    icon: faDog,\n    showDefault: true,\n    role: \"CLIENT\",\n    url: URL_PET_USERS_PETS,\n    text: \"My Pets\",\n  },\n  {\n    title: \"Pet License\",\n    desc: \"Do apply for the license without going out\",\n    icon: faIdBadge,\n    showDefault: true,\n    role: \"CLIENT\",\n    url: URL_PET_USERS_LICENSE,\n    text: \"License\",\n  },\n  {\n    title: \"Pet Appointment\",\n    desc: \"Book the veterinarian appointment for your pets\",\n    icon: faCalendarCheck,\n    showDefault: true,\n    role: \"CLIENT\",\n    url: URL_PET_USERS_APPT,\n    text: \"Appointments\",\n  },\n  {\n    title: \"Appointments\",\n    desc: \"See all your visiting clinic appointments\",\n    icon: faCalendarCheck,\n    showDefault: false,\n    role: \"STAFF\",\n    url: URL_PET_STAFF_APPT,\n    text: \"View Appointment\",\n  },\n  {\n    title: \"Appointment History\",\n    desc: \"See the glands of all your past appointments\",\n    icon: faHistory,\n    showDefault: false,\n    role: \"STAFF\",\n    url: URL_PET_STAFF_APPT_HISTORY,\n    text: \"History\",\n  },\n  {\n    title: \"Add Pet Types\",\n    desc: \"Add different categories of pet such as Cat, Dog, etc\",\n    icon: faPaw,\n    showDefault: false,\n    role: \"ADMIN\",\n    url: URL_PET_ADMIN_PET_TYPES,\n    text: \"Pet Types\",\n  },\n  {\n    title: \"Add Unadopt Pets\",\n    desc: \"Make an entry for the unadopted pets\",\n    icon: faDog,\n    showDefault: false,\n    role: \"ADMIN\",\n    url: URL_PET_ADMIN_PETS,\n    text: \"Add Pets\",\n  },\n  {\n    title: \"Add Clinic\",\n    desc: \"Add the new clinic which are managed by Pawsomecare\",\n    icon: faClinicMedical,\n    showDefault: false,\n    role: \"ADMIN\",\n    url: URL_PET_ADMIN_CLINC,\n    text: \"Clinic\",\n  },\n  {\n    title: \"Add Staff\",\n    desc: \"Add the new staff for the clinic as either Veterinarian/Grooming\",\n    icon: faHospitalUser,\n    showDefault: false,\n    role: \"ADMIN\",\n    url: URL_PET_ADMIN_STAFF,\n    text: \"Staff\",\n  },\n  {\n    title: \"Add Medicine\",\n    desc: \"Prepare the medicine entry for the Pawsomecare managed clinics\",\n    icon: faTablets,\n    showDefault: false,\n    role: \"ADMIN\",\n    url: URL_PET_ADMIN_MEDICINE,\n    text: \"Medicine\",\n  },\n  {\n    title: \"Add Vaccine\",\n    desc: \"Add the entry for the vaccine\",\n    icon: faSyringe,\n    showDefault: false,\n    role: \"ADMIN\",\n    url: URL_PET_ADMIN_VACCINE,\n    text: \"Vaccine\",\n  },\n  {\n    title: \"Groom Services\",\n    desc: \"Add the vast grooming services for the pets\",\n    icon: faBath,\n    showDefault: false,\n    role: \"ADMIN\",\n    url: URL_PET_ADMIN_GROOM,\n    text: \"Grooming\",\n  },\n  {\n    title: \"Approve the License\",\n    desc: \"Approve and give the pet license for the pets owned by clients\",\n    icon: faIdBadge,\n    showDefault: false,\n    role: \"ADMIN\",\n    url: URL_PET_ADMIN_LICENSE,\n    text: \"License\",\n  },\n];\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"../../store/reducers\";\nimport { URL_LOGIN, URL_PET_HOME, URL_SIGNUP } from \"../../config/UrlRoute\";\nimport { toggleSidebar } from \"../../store/actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSignInAlt,\n  faSignOutAlt,\n  faUserAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { HOME_DATA } from \"../../utils/home-data.util\";\nimport { Auth } from \"../../services/auth.services\";\n\nconst mapStateToProps = (state: RootState) => ({\n  user: state.auth,\n  showSidebar: state.sidebar,\n});\n\nconst connector = connect(mapStateToProps, {\n  toggleSidebar,\n});\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = PropsFromRedux & {\n  toggleSidebar: (toggle: boolean) => void;\n};\n\nconst Landing: React.FC<Props> = (props) => {\n  const history = useHistory();\n  const [loggedIn, setLoggedIn] = useState<boolean>(false);\n  const [services, setServices] = useState<Array<Array<any>>>([]);\n\n  const processData = (data: Array<any>) => {\n    const indices = [];\n    for (let i = 0; i < data.length; i = i + 2) {\n      indices.push([i, i + 2].filter((r) => r !== undefined || r !== null));\n    }\n\n    const result = [...indices].map((idxs) => data.slice(...idxs));\n\n    return result;\n  };\n\n  useEffect(() => {\n    if (props.user.role) {\n      setLoggedIn(true);\n      if ([\"ROLE_VETERINARIAN\", \"ROLE_GROOMING\"].includes(props.user.role)) {\n        setServices(processData(HOME_DATA.filter((d) => d.role === \"STAFF\")));\n      } else if ([\"ROLE_ADMIN\"].includes(props.user.role)) {\n        setServices(processData(HOME_DATA.filter((d) => d.role === \"ADMIN\")));\n      } else {\n        setServices(processData(HOME_DATA.filter((d) => d.role === \"CLIENT\")));\n      }\n    } else {\n      setLoggedIn(false);\n      setServices(processData(HOME_DATA.filter((d) => d.showDefault)));\n    }\n  }, [props.user.role]);\n\n  return (\n    <Fragment>\n      <nav className=\"site-header sticky-top py-1 bg-dark-primary\">\n        <div className=\"container d-flex flex-row justify-content-between\">\n          <a className=\"py-2\" aria-label=\"Pawsomecare\">\n            <img\n              src=\"./assets/logo.svg\"\n              alt=\"logo\"\n              width={50}\n              className=\"bg-white rounded\"\n            />\n          </a>\n\n          <ul className=\"nav justify-content-center align-items-center\">\n            {loggedIn && (\n              <>\n                <li className=\"nav-item\">\n                  <NavLink\n                    to={URL_PET_HOME}\n                    className={\"nav-link text-white\"}\n                    activeClassName=\"active\"\n                  >\n                    <span className={\"badge\"}>\n                      <FontAwesomeIcon icon={faUserAlt} size=\"1x\" />\n                    </span>\n                    {props.user.username}\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    to={URL_PET_HOME}\n                    className={\"nav-link text-white\"}\n                    activeClassName=\"active\"\n                    onClick={async () => {\n                      await Auth.signOut();\n                      window.location.reload();\n                    }}\n                  >\n                    <span className={\"badge\"}>\n                      <FontAwesomeIcon icon={faSignOutAlt} size=\"1x\" />\n                    </span>\n                    Logout\n                  </NavLink>\n                </li>\n              </>\n            )}\n            {!loggedIn && (\n              <>\n                <li className=\"nav-item\">\n                  <NavLink\n                    to={URL_LOGIN}\n                    className={\"nav-link text-white\"}\n                    activeClassName=\"active\"\n                  >\n                    <span className={\"badge mr-3\"}>\n                      <FontAwesomeIcon icon={faSignInAlt} size=\"1x\" />\n                    </span>\n                    Login\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    to={URL_SIGNUP}\n                    className={\"nav-link text-white\"}\n                    activeClassName=\"active\"\n                  >\n                    <span className={\"badge mr-3\"}>\n                      <FontAwesomeIcon icon={faSignOutAlt} size=\"1x\" />\n                    </span>\n                    Signup\n                  </NavLink>\n                </li>\n              </>\n            )}\n          </ul>\n        </div>\n      </nav>\n\n      <div className=\"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\">\n        <div className=\"col-md-8 p-lg-5 mx-auto my-5\">\n          <h1 className=\"display-4 font-weight-normal\">Pawsomecare</h1>\n          <p className=\"lead font-weight-normal\">\n            At Pawsome Care, we are dedicated to providing exceptional care for\n            your furry family members. Whether it's vaccination and veterinary\n            appointments, pet adoption services, licensing, or booking for\n            grooming and pet care, our team is here to ensure your pets receive\n            the best. With several clinics located in London, Ontario, Canada,\n            we are committed to making pet care accessible and convenient for\n            our community. Trust us to keep your pets happy, healthy, and\n            well-groomed. Your pet's well-being is our passion.\n          </p>\n        </div>\n      </div>\n\n      <h4\n        className=\"display-5 text-center\"\n        style={{ textDecoration: \"underline\" }}\n      >\n        Services\n      </h4>\n\n      {services.map((s, i) => (\n        <div className=\"d-md-flex flex-md-equal w-100 my-md-3 pl-md-3\" key={i}>\n          {s.length > 0 && (\n            <div\n              className={`w-50 mr-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center overflow-hidden ${\n                i / 2 === 0 ? \"bg-dark-primary text-white\" : \"bg-light\"\n              }`}\n            >\n              <div className=\"my-3 py-3\">\n                <h2 className=\"display-5\">{s[0].title}</h2>\n                <p className=\"lead\">{s[0].desc}</p>\n              </div>\n              <div\n                className={`shadow-sm mx-auto d-flex flex-column align-items-center justify-content-center ${\n                  i % 2 === 0 ? \"bg-light\" : \"bg-dark-primary\"\n                }`}\n                style={{\n                  width: \"80%\",\n                  height: \"300px\",\n                  borderRadius: \"21px 21px 0 0\",\n                }}\n              >\n                <FontAwesomeIcon\n                  icon={s[0].icon}\n                  className={`${\n                    i % 2 !== 0 ? \"text-light\" : \"text-dark-primary\"\n                  }`}\n                  size=\"10x\"\n                />\n                <button\n                  className={`btn mt-3 ${\n                    i % 2 !== 0\n                      ? \"text-light border-white\"\n                      : \"text-dark-primary border-dark-primary\"\n                  }`}\n                  onClick={() => history.push(s[0].url)}\n                >\n                  {s[0].text}\n                </button>\n              </div>\n            </div>\n          )}\n          {s.length > 1 && (\n            <div\n              className={`w-50 mr-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center overflow-hidden  ${\n                i / 2 !== 0 ? \"bg-dark-primary text-white\" : \"bg-light\"\n              }`}\n            >\n              <div className=\"my-3 p-3\">\n                <h2 className=\"display-5\">{s[1].title}</h2>\n                <p className=\"lead\">{s[1].desc}</p>\n              </div>\n              <div\n                className={`shadow-sm mx-auto d-flex flex-column align-items-center justify-content-center ${\n                  i % 2 !== 0 ? \"bg-light\" : \"bg-dark-primary\"\n                }`}\n                style={{\n                  width: \"80%\",\n                  height: \"300px\",\n                  borderRadius: \"21px 21px 0 0\",\n                }}\n              >\n                <FontAwesomeIcon\n                  icon={s[1].icon}\n                  className={`${\n                    i % 2 === 0 ? \"text-light\" : \"text-dark-primary\"\n                  }`}\n                  size=\"10x\"\n                />\n                <button\n                  className={`btn mt-3 ${\n                    i % 2 === 0\n                      ? \"text-light border-white\"\n                      : \"text-dark-primary border-dark-primary\"\n                  }`}\n                  onClick={() => history.push(s[1].url)}\n                >\n                  {s[1].text}\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      ))}\n\n      <footer className=\"container py-1\">\n        <div className=\"row\">\n          <div className=\"col-12 text-center\">\n            <img\n              src=\"./assets/logo.svg\"\n              alt=\"logo\"\n              width={50}\n              className=\"bg-white rounded\"\n              style={{ filter: \"grayscale(100%)\" }}\n            />\n            <small className=\"d-block mb-3 text-muted\">\n              &copy; Pawsomecare 2024\n            </small>\n          </div>\n        </div>\n      </footer>\n    </Fragment>\n  );\n};\n\nexport default connector(Landing);\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect, ConnectedProps } from \"react-redux\";\n\n/* COMPONENT Import */\nimport Login from \"./components/login/Login\";\nimport Error from \"./hoc-components/error/Error\";\nimport GuardedRoute from \"./hoc-components/guard/GuardedRoute\";\n\n/* JS/TS Import */\nimport {\n  URL_LOGIN,\n  URL_SIGNUP,\n  URL_PET_HOME,\n  URL_PET_LANDING,\n} from \"./config/UrlRoute\";\nimport { RootState } from \"./store/reducers\";\nimport Signup from \"./components/signup/Signup\";\nimport Home from \"./components/home/Home\";\nimport Landing from \"./components/landing/Landing\";\n\nconst mapStateToProps = (state: RootState) => ({\n  token: state.auth.accessToken,\n});\n\nconst connector = connect(mapStateToProps);\n\ntype Props = ConnectedProps<typeof connector>;\n\nconst App: React.FC<Props> = (props) => (\n  <Switch>\n    <Redirect from=\"/\" to={URL_PET_LANDING} exact />\n    <Route path={URL_PET_LANDING}>\n      <Landing />\n    </Route>\n    <Route path={URL_SIGNUP}>\n      <Signup />\n    </Route>\n    <Route path={URL_LOGIN}>\n      <Login />\n    </Route>\n    <GuardedRoute\n      component={Home}\n      isAuthenticated={props.token !== \"\"}\n      path={URL_PET_HOME}\n    />\n    <Route path=\"**\">\n      <Error />\n    </Route>\n  </Switch>\n);\n\nexport default connector(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport axios from \"axios\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n/* JS Import */\nimport \"jquery/dist/jquery.min.js\";\nimport \"popper.js/dist/umd/popper.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\n\n/* CSS Import */\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport { Auth } from \"./services/auth.services\";\n\naxios.defaults.baseURL = process.env.REACT_APP_ApiUrl;\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.message && error.message.includes(\"401\")) {\n      console.log(\"call the refresh token api here\");\n    }\n    Auth.signOut();\n    window.location.reload();\n    return Promise.reject(error);\n  }\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}